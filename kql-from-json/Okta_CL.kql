// ============================================================================
// Azure Data Explorer KQL Script for Okta_CL
// ============================================================================
// Generated: 2025-09-17 06:16:05
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table Okta_CLRaw (records:dynamic)

.alter-merge table Okta_CLRaw policy retention softdelete = 1d

.alter table Okta_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table Okta_CLRaw ingestion json mapping 'Okta_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table Okta_CL(
TimeGenerated:datetime,
TenantId:guid,
debugContext_debugData_deviceFingerprint_g:string,
authenticationContext_authenticationProvider_s:string,
authenticationContext_credentialProvider_s:string,
debugContext_debugData_factor_s:string,
debugContext_debugData_countryCallingCode_s:string,
debugContext_debugData_smsProvider_s:string,
debugContext_debugData_transactionId_g:string,
authenticationContext_credentialType_s:string,
actor_id_s:string,
actor_type_s:string,
actor_alternateId_s:string,
actor_displayName_s:string,
authenticationContext_authenticationStep_d:real,
authenticationContext_externalSessionId_s:string,
displayMessage_s:string,
eventType_s:string,
outcome_result_s:string,
request_ipChain_s:string,
version_s:string,
uuid_g:string,
transaction_id_s:string,
transaction_type_s:string,
legacyEventType_s:string,
debugContext_debugData_url_s:string,
debugContext_debugData_threatSuspected_s:string,
debugContext_debugData_importLastToken_s:string,
debugContext_debugData_appname_s:string,
debugContext_debugData_importType_s:string,
debugContext_debugData_jobId_s:string,
severity_s:string,
published_t:datetime,
debugContext_debugData_importTrigger_s:string,
debugContext_debugData_requestUri_s:string,
debugContext_debugData_requestId_s:string,
debugContext_debugData_loginResult_s:string,
debugContext_debugData_authnRequestId_s:string,
debugContext_debugData_groupAppAssignmentId_s:string,
debugContext_debugData_attributesDeleted_s:string,
debugContext_debugData_attributesAdded_s:string,
debugContext_debugData_attributesModified_s:string,
debugContext_debugData_signOnMode_s:string,
client_userAgent_rawUserAgent_s:string,
debugContext_debugData_threatDetections_s:string,
debugContext_debugData_initiationType_s:string,
RawData:string,
Computer:string,
ManagementGroupName:string,
MG:string,
SourceSystem:string,
debugContext_debugData_logOnlySecurityData_s:string,
target_s:string,
client_userAgent_os_s:string,
client_zone_s:string,
securityContext_isProxy_b:bool,
securityContext_domain_s:string,
securityContext_isp_s:string,
securityContext_asOrg_s:string,
securityContext_asNumber_d:real,
outcome_reason_s:string,
client_userAgent_browser_s:string,
client_geographicalContext_geolocation_lon_d:real,
client_geographicalContext_postalCode_s:string,
client_geographicalContext_country_s:string,
client_geographicalContext_state_s:string,
client_geographicalContext_city_s:string,
client_ipAddress_s:string,
client_device_s:string,
client_geographicalContext_geolocation_lat_d:real,
debugContext_debugData_detailedmessage_s:string,
Type:string,
_ResourceId:string,
_ItemId:string,
_TimeReceived:datetime)

.alter table Okta_CL policy caching hot = 1d

.create-or-alter function Okta_CLExpand() {
Okta_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
debugContext_debugData_deviceFingerprint_g=tostring(events.debugContext_debugData_deviceFingerprint_g),
authenticationContext_authenticationProvider_s=tostring(events.authenticationContext_authenticationProvider_s),
authenticationContext_credentialProvider_s=tostring(events.authenticationContext_credentialProvider_s),
debugContext_debugData_factor_s=tostring(events.debugContext_debugData_factor_s),
debugContext_debugData_countryCallingCode_s=tostring(events.debugContext_debugData_countryCallingCode_s),
debugContext_debugData_smsProvider_s=tostring(events.debugContext_debugData_smsProvider_s),
debugContext_debugData_transactionId_g=tostring(events.debugContext_debugData_transactionId_g),
authenticationContext_credentialType_s=tostring(events.authenticationContext_credentialType_s),
actor_id_s=tostring(events.actor_id_s),
actor_type_s=tostring(events.actor_type_s),
actor_alternateId_s=tostring(events.actor_alternateId_s),
actor_displayName_s=tostring(events.actor_displayName_s),
authenticationContext_authenticationStep_d=toreal(events.authenticationContext_authenticationStep_d),
authenticationContext_externalSessionId_s=tostring(events.authenticationContext_externalSessionId_s),
displayMessage_s=tostring(events.displayMessage_s),
eventType_s=tostring(events.eventType_s),
outcome_result_s=tostring(events.outcome_result_s),
request_ipChain_s=tostring(events.request_ipChain_s),
version_s=tostring(events.version_s),
uuid_g=tostring(events.uuid_g),
transaction_id_s=tostring(events.transaction_id_s),
transaction_type_s=tostring(events.transaction_type_s),
legacyEventType_s=tostring(events.legacyEventType_s),
debugContext_debugData_url_s=tostring(events.debugContext_debugData_url_s),
debugContext_debugData_threatSuspected_s=tostring(events.debugContext_debugData_threatSuspected_s),
debugContext_debugData_importLastToken_s=tostring(events.debugContext_debugData_importLastToken_s),
debugContext_debugData_appname_s=tostring(events.debugContext_debugData_appname_s),
debugContext_debugData_importType_s=tostring(events.debugContext_debugData_importType_s),
debugContext_debugData_jobId_s=tostring(events.debugContext_debugData_jobId_s),
severity_s=tostring(events.severity_s),
published_t=todatetime(events.published_t),
debugContext_debugData_importTrigger_s=tostring(events.debugContext_debugData_importTrigger_s),
debugContext_debugData_requestUri_s=tostring(events.debugContext_debugData_requestUri_s),
debugContext_debugData_requestId_s=tostring(events.debugContext_debugData_requestId_s),
debugContext_debugData_loginResult_s=tostring(events.debugContext_debugData_loginResult_s),
debugContext_debugData_authnRequestId_s=tostring(events.debugContext_debugData_authnRequestId_s),
debugContext_debugData_groupAppAssignmentId_s=tostring(events.debugContext_debugData_groupAppAssignmentId_s),
debugContext_debugData_attributesDeleted_s=tostring(events.debugContext_debugData_attributesDeleted_s),
debugContext_debugData_attributesAdded_s=tostring(events.debugContext_debugData_attributesAdded_s),
debugContext_debugData_attributesModified_s=tostring(events.debugContext_debugData_attributesModified_s),
debugContext_debugData_signOnMode_s=tostring(events.debugContext_debugData_signOnMode_s),
client_userAgent_rawUserAgent_s=tostring(events.client_userAgent_rawUserAgent_s),
debugContext_debugData_threatDetections_s=tostring(events.debugContext_debugData_threatDetections_s),
debugContext_debugData_initiationType_s=tostring(events.debugContext_debugData_initiationType_s),
RawData=tostring(events.RawData),
Computer=tostring(events.Computer),
ManagementGroupName=tostring(events.ManagementGroupName),
MG=tostring(events.MG),
SourceSystem=tostring(events.SourceSystem),
debugContext_debugData_logOnlySecurityData_s=tostring(events.debugContext_debugData_logOnlySecurityData_s),
target_s=tostring(events.target_s),
client_userAgent_os_s=tostring(events.client_userAgent_os_s),
client_zone_s=tostring(events.client_zone_s),
securityContext_isProxy_b=tobool(events.securityContext_isProxy_b),
securityContext_domain_s=tostring(events.securityContext_domain_s),
securityContext_isp_s=tostring(events.securityContext_isp_s),
securityContext_asOrg_s=tostring(events.securityContext_asOrg_s),
securityContext_asNumber_d=toreal(events.securityContext_asNumber_d),
outcome_reason_s=tostring(events.outcome_reason_s),
client_userAgent_browser_s=tostring(events.client_userAgent_browser_s),
client_geographicalContext_geolocation_lon_d=toreal(events.client_geographicalContext_geolocation_lon_d),
client_geographicalContext_postalCode_s=tostring(events.client_geographicalContext_postalCode_s),
client_geographicalContext_country_s=tostring(events.client_geographicalContext_country_s),
client_geographicalContext_state_s=tostring(events.client_geographicalContext_state_s),
client_geographicalContext_city_s=tostring(events.client_geographicalContext_city_s),
client_ipAddress_s=tostring(events.client_ipAddress_s),
client_device_s=tostring(events.client_device_s),
client_geographicalContext_geolocation_lat_d=toreal(events.client_geographicalContext_geolocation_lat_d),
debugContext_debugData_detailedmessage_s=tostring(events.debugContext_debugData_detailedmessage_s),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_ItemId=tostring(events._ItemId),
_TimeReceived=todatetime(now())
}

.alter table Okta_CL policy update @'[{"Source": "Okta_CLRaw", "Query": "Okta_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
