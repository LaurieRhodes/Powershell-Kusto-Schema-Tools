// ============================================================================
// Azure Data Explorer KQL Script for ZNSegmentAudit_CL
// ============================================================================
// Generated: 2025-09-17 06:16:10
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table ZNSegmentAudit_CLRaw (records:dynamic)

.alter-merge table ZNSegmentAudit_CLRaw policy retention softdelete = 1d

.alter table ZNSegmentAudit_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table ZNSegmentAudit_CLRaw ingestion json mapping 'ZNSegmentAudit_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table ZNSegmentAudit_CL(
TimeGenerated:datetime,
TenantId:guid,
reportedObjectGeneration_d:real,
reportedObjectId_g:string,
details_s:string,
destinationEntitiesList_s:string,
userRole_d:real,
enforcementSource_d:real,
auditType_d:real,
performedBy_id_g:string,
timestamp_d:string,
reportedObjectId_s:string,
parentObjectId_g:string,
RawData:string,
ManagementGroupName:string,
MG:string,
Computer:string,
SourceSystem:string,
performedBy_id_s:string,
performedBy_name_s:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table ZNSegmentAudit_CL policy caching hot = 1d

.create-or-alter function ZNSegmentAudit_CLExpand() {
ZNSegmentAudit_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
reportedObjectGeneration_d=toreal(events.reportedObjectGeneration_d),
reportedObjectId_g=tostring(events.reportedObjectId_g),
details_s=tostring(events.details_s),
destinationEntitiesList_s=tostring(events.destinationEntitiesList_s),
userRole_d=toreal(events.userRole_d),
enforcementSource_d=toreal(events.enforcementSource_d),
auditType_d=toreal(events.auditType_d),
performedBy_id_g=tostring(events.performedBy_id_g),
timestamp_d=tostring(events.timestamp_d),
reportedObjectId_s=tostring(events.reportedObjectId_s),
parentObjectId_g=tostring(events.parentObjectId_g),
RawData=tostring(events.RawData),
ManagementGroupName=tostring(events.ManagementGroupName),
MG=tostring(events.MG),
Computer=tostring(events.Computer),
SourceSystem=tostring(events.SourceSystem),
performedBy_id_s=tostring(events.performedBy_id_s),
performedBy_name_s=tostring(events.performedBy_name_s),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table ZNSegmentAudit_CL policy update @'[{"Source": "ZNSegmentAudit_CLRaw", "Query": "ZNSegmentAudit_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
