// ============================================================================
// Azure Data Explorer KQL Script for GWorkspace_ReportsAPI_calendar_CL
// ============================================================================
// Generated: 2025-09-13 20:17:14
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table GWorkspace_ReportsAPI_calendar_CLRaw (records:dynamic)

.alter-merge table GWorkspace_ReportsAPI_calendar_CLRaw policy retention softdelete = 1d

.alter table GWorkspace_ReportsAPI_calendar_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table GWorkspace_ReportsAPI_calendar_CLRaw ingestion json mapping 'GWorkspace_ReportsAPI_calendar_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table GWorkspace_ReportsAPI_calendar_CL(
TimeGenerated:datetime,
EventVendor:string,
event_type_s:string,
events_s:string,
ownerDomain_s:string,
actor_profileId_s:string,
actor_email_s:string,
etag_s:string,
id_customerId_s:string,
id_applicationName_s:string,
id_uniqueQualifier_s:string,
id_time_t:datetime,
kind_s:string,
api_kind_s:string,
event_response_status_s:string,
event_guest_s:string,
event_title_s:string,
organizer_calendar_id_s:string,
user_agent_s:string,
event_id_s:string,
notification_message_id_s:string,
target_calendar_id_s:string,
calendar_id_s:string,
recipient_email_s:string,
notification_method_s:string,
notification_type_s:string,
event_name_s:string,
end_time_s:string,
start_time_s:string,
old_event_title_s:string,
EventProduct:string,
IPAddress:string,
actor_callerType_s:string,
_TimeReceived:datetime)

.alter table GWorkspace_ReportsAPI_calendar_CL policy caching hot = 1d

.create-or-alter function GWorkspace_ReportsAPI_calendar_CLExpand() {
GWorkspace_ReportsAPI_calendar_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
EventVendor=tostring(events.EventVendor),
event_type_s=tostring(events.event_type_s),
events_s=tostring(events.events_s),
ownerDomain_s=tostring(events.ownerDomain_s),
actor_profileId_s=tostring(events.actor_profileId_s),
actor_email_s=tostring(events.actor_email_s),
etag_s=tostring(events.etag_s),
id_customerId_s=tostring(events.id_customerId_s),
id_applicationName_s=tostring(events.id_applicationName_s),
id_uniqueQualifier_s=tostring(events.id_uniqueQualifier_s),
id_time_t=todatetime(events.id_time_t),
kind_s=tostring(events.kind_s),
api_kind_s=tostring(events.api_kind_s),
event_response_status_s=tostring(events.event_response_status_s),
event_guest_s=tostring(events.event_guest_s),
event_title_s=tostring(events.event_title_s),
organizer_calendar_id_s=tostring(events.organizer_calendar_id_s),
user_agent_s=tostring(events.user_agent_s),
event_id_s=tostring(events.event_id_s),
notification_message_id_s=tostring(events.notification_message_id_s),
target_calendar_id_s=tostring(events.target_calendar_id_s),
calendar_id_s=tostring(events.calendar_id_s),
recipient_email_s=tostring(events.recipient_email_s),
notification_method_s=tostring(events.notification_method_s),
notification_type_s=tostring(events.notification_type_s),
event_name_s=tostring(events.event_name_s),
end_time_s=tostring(events.end_time_s),
start_time_s=tostring(events.start_time_s),
old_event_title_s=tostring(events.old_event_title_s),
EventProduct=tostring(events.EventProduct),
IPAddress=tostring(events.IPAddress),
actor_callerType_s=tostring(events.actor_callerType_s),
_TimeReceived=todatetime(now())
}

.alter table GWorkspace_ReportsAPI_calendar_CL policy update @'[{"Source": "GWorkspace_ReportsAPI_calendar_CLRaw", "Query": "GWorkspace_ReportsAPI_calendar_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
