// ============================================================================
// Azure Data Explorer KQL Script for CiscoDuo_CL
// ============================================================================
// Generated: 2025-09-13 20:17:12
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table CiscoDuo_CLRaw (records:dynamic)

.alter-merge table CiscoDuo_CLRaw policy retention softdelete = 1d

.alter table CiscoDuo_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table CiscoDuo_CLRaw ingestion json mapping 'CiscoDuo_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table CiscoDuo_CL(
TimeGenerated:datetime,
access_device_browser_s:string,
surfaced_auth_isotimestamp_t [UTC]:string,
surfaced_auth_factor_s:string,
surfaced_auth_email_s:string,
surfaced_auth_application_name_s:string,
surfaced_auth_application_key_s:string,
surfaced_auth_alias_s:string,
surfaced_auth_access_device_security_agents_s:string,
surfaced_auth_ood_software_s:string,
surfaced_auth_access_device_os_version_s:string,
surfaced_auth_access_device_location_state_s:string,
surfaced_auth_access_device_location_country_s:string,
surfaced_auth_access_device_location_city_s:string,
surfaced_auth_access_device_is_password_set_s:string,
surfaced_auth_access_device_is_firewall_enabled_s:string,
surfaced_auth_access_device_is_encryption_enabled_s:string,
surfaced_auth_access_device_ip_s:string,
surfaced_auth_access_device_os_s:string,
surfaced_auth_reason_s:string,
surfaced_auth_result_s:string,
surfaced_auth_timestamp_d:real,
type_s:string,
timestamp_d:real,
phone_s:string,
isotimestamp_t [UTC]:string,
credits_d:real,
context_s:string,
object_s:string,
username_s:string,
description_s:string,
action_s:string,
triaged_as_interesting_b:bool,
triage_event_uri_s:string,
surfaced_timestamp_d:real,
surfaced_auth_user_name_s:string,
surfaced_auth_user_key_s:string,
surfaced_auth_user_groups_s:string,
surfaced_auth_txid_s:string,
surfaced_auth_access_device_browser_version_s:string,
eventtype_s:string,
surfaced_auth_access_device_browser_s:string,
sekey_s:string,
application_name_s:string,
application_key_s:string,
alias_s:string,
access_device_security_agents_s:string,
access_device_os_version_s:string,
access_device_os_s:string,
access_device_location_state_s:string,
auth_device_ip_s:string,
access_device_location_country_s:string,
access_device_java_version_s:string,
access_device_is_password_set_b:bool,
access_device_is_firewall_enabled_b:bool,
access_device_is_encryption_enabled_b:bool,
access_device_ip_s:string,
access_device_flash_version_s:string,
access_device_browser_version_s:string,
access_device_location_city_s:string,
auth_device_location_city_s:string,
auth_device_location_country_s:string,
auth_device_location_state_s:string,
priority_reasons_s:string,
priority_event_b:bool,
low_risk_ip_b:bool,
from_new_user_b:bool,
from_common_netblock_b:bool,
explanations_s:string,
user_name_s:string,
user_key_s:string,
user_groups_s:string,
txid_g:string,
trusted_endpoint_status_s:string,
result_s:string,
reason_s:string,
factor_s:string,
event_type_s:string,
email_s:string,
auth_device_name_s:string,
state_s:string,
host_s:string,
_TimeReceived:datetime)

.alter table CiscoDuo_CL policy caching hot = 1d

.create-or-alter function CiscoDuo_CLExpand() {
CiscoDuo_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
access_device_browser_s=tostring(events.access_device_browser_s),
surfaced_auth_isotimestamp_t [UTC]=tostring(events.surfaced_auth_isotimestamp_t [UTC]),
surfaced_auth_factor_s=tostring(events.surfaced_auth_factor_s),
surfaced_auth_email_s=tostring(events.surfaced_auth_email_s),
surfaced_auth_application_name_s=tostring(events.surfaced_auth_application_name_s),
surfaced_auth_application_key_s=tostring(events.surfaced_auth_application_key_s),
surfaced_auth_alias_s=tostring(events.surfaced_auth_alias_s),
surfaced_auth_access_device_security_agents_s=tostring(events.surfaced_auth_access_device_security_agents_s),
surfaced_auth_ood_software_s=tostring(events.surfaced_auth_ood_software_s),
surfaced_auth_access_device_os_version_s=tostring(events.surfaced_auth_access_device_os_version_s),
surfaced_auth_access_device_location_state_s=tostring(events.surfaced_auth_access_device_location_state_s),
surfaced_auth_access_device_location_country_s=tostring(events.surfaced_auth_access_device_location_country_s),
surfaced_auth_access_device_location_city_s=tostring(events.surfaced_auth_access_device_location_city_s),
surfaced_auth_access_device_is_password_set_s=tostring(events.surfaced_auth_access_device_is_password_set_s),
surfaced_auth_access_device_is_firewall_enabled_s=tostring(events.surfaced_auth_access_device_is_firewall_enabled_s),
surfaced_auth_access_device_is_encryption_enabled_s=tostring(events.surfaced_auth_access_device_is_encryption_enabled_s),
surfaced_auth_access_device_ip_s=tostring(events.surfaced_auth_access_device_ip_s),
surfaced_auth_access_device_os_s=tostring(events.surfaced_auth_access_device_os_s),
surfaced_auth_reason_s=tostring(events.surfaced_auth_reason_s),
surfaced_auth_result_s=tostring(events.surfaced_auth_result_s),
surfaced_auth_timestamp_d=toreal(events.surfaced_auth_timestamp_d),
type_s=tostring(events.type_s),
timestamp_d=toreal(events.timestamp_d),
phone_s=tostring(events.phone_s),
isotimestamp_t [UTC]=tostring(events.isotimestamp_t [UTC]),
credits_d=toreal(events.credits_d),
context_s=tostring(events.context_s),
object_s=tostring(events.object_s),
username_s=tostring(events.username_s),
description_s=tostring(events.description_s),
action_s=tostring(events.action_s),
triaged_as_interesting_b=tobool(events.triaged_as_interesting_b),
triage_event_uri_s=tostring(events.triage_event_uri_s),
surfaced_timestamp_d=toreal(events.surfaced_timestamp_d),
surfaced_auth_user_name_s=tostring(events.surfaced_auth_user_name_s),
surfaced_auth_user_key_s=tostring(events.surfaced_auth_user_key_s),
surfaced_auth_user_groups_s=tostring(events.surfaced_auth_user_groups_s),
surfaced_auth_txid_s=tostring(events.surfaced_auth_txid_s),
surfaced_auth_access_device_browser_version_s=tostring(events.surfaced_auth_access_device_browser_version_s),
eventtype_s=tostring(events.eventtype_s),
surfaced_auth_access_device_browser_s=tostring(events.surfaced_auth_access_device_browser_s),
sekey_s=tostring(events.sekey_s),
application_name_s=tostring(events.application_name_s),
application_key_s=tostring(events.application_key_s),
alias_s=tostring(events.alias_s),
access_device_security_agents_s=tostring(events.access_device_security_agents_s),
access_device_os_version_s=tostring(events.access_device_os_version_s),
access_device_os_s=tostring(events.access_device_os_s),
access_device_location_state_s=tostring(events.access_device_location_state_s),
auth_device_ip_s=tostring(events.auth_device_ip_s),
access_device_location_country_s=tostring(events.access_device_location_country_s),
access_device_java_version_s=tostring(events.access_device_java_version_s),
access_device_is_password_set_b=tobool(events.access_device_is_password_set_b),
access_device_is_firewall_enabled_b=tobool(events.access_device_is_firewall_enabled_b),
access_device_is_encryption_enabled_b=tobool(events.access_device_is_encryption_enabled_b),
access_device_ip_s=tostring(events.access_device_ip_s),
access_device_flash_version_s=tostring(events.access_device_flash_version_s),
access_device_browser_version_s=tostring(events.access_device_browser_version_s),
access_device_location_city_s=tostring(events.access_device_location_city_s),
auth_device_location_city_s=tostring(events.auth_device_location_city_s),
auth_device_location_country_s=tostring(events.auth_device_location_country_s),
auth_device_location_state_s=tostring(events.auth_device_location_state_s),
priority_reasons_s=tostring(events.priority_reasons_s),
priority_event_b=tobool(events.priority_event_b),
low_risk_ip_b=tobool(events.low_risk_ip_b),
from_new_user_b=tobool(events.from_new_user_b),
from_common_netblock_b=tobool(events.from_common_netblock_b),
explanations_s=tostring(events.explanations_s),
user_name_s=tostring(events.user_name_s),
user_key_s=tostring(events.user_key_s),
user_groups_s=tostring(events.user_groups_s),
txid_g=tostring(events.txid_g),
trusted_endpoint_status_s=tostring(events.trusted_endpoint_status_s),
result_s=tostring(events.result_s),
reason_s=tostring(events.reason_s),
factor_s=tostring(events.factor_s),
event_type_s=tostring(events.event_type_s),
email_s=tostring(events.email_s),
auth_device_name_s=tostring(events.auth_device_name_s),
state_s=tostring(events.state_s),
host_s=tostring(events.host_s),
_TimeReceived=todatetime(now())
}

.alter table CiscoDuo_CL policy update @'[{"Source": "CiscoDuo_CLRaw", "Query": "CiscoDuo_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
