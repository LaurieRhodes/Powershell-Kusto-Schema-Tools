// ============================================================================
// Azure Data Explorer KQL Script for Cloudflare_CL
// ============================================================================
// Generated: 2025-09-17 06:15:58
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table Cloudflare_CLRaw (records:dynamic)

.alter-merge table Cloudflare_CLRaw policy retention softdelete = 1d

.alter table Cloudflare_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table Cloudflare_CLRaw ingestion json mapping 'Cloudflare_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table Cloudflare_CL(
TimeGenerated:datetime,
BotScore_d:real,
DisconnectTimestamp_t:datetime,
ConnectTimestamp_t:datetime,
ColoCode_s:string,
ClientTlsStatus_s:string,
ClientTlsProtocol_s:string,
ClientTlsClientHelloServerName_s:string,
ClientTlsCipher_s:string,
ClientTcpRtt_d:real,
ClientProto_s:string,
ClientPort_d:real,
Event_s:string,
ClientMatchedIpFirewall_s:string,
Application_s:string,
ZoneID_d:real,
WorkerSubrequestCount_d:real,
WorkerSubrequest_b:bool,
WorkerStatus_s:string,
WorkerCPUTime_d:real,
WAFRuleMessage_s:string,
WAFRuleID_s:string,
WAFProfile_s:string,
WAFMatchedVar_s:string,
ClientBytes_d:real,
WAFFlags_s:string,
IpFirewall_b:bool,
OriginPort_d:real,
OriginatorRayID_s:string,
MatchIndex_d:real,
Kind_s:string,
Datetime_t:datetime,
ClientRequestScheme_s:string,
ClientRequestQuery_s:string,
ClientRefererScheme_s:string,
ClientRefererQuery_s:string,
ClientRefererPath_s:string,
ClientRefererHost_s:string,
OriginBytes_d:real,
ClientASNDescription_s:string,
Timestamp_t:datetime,
Status_d:real,
ProxyProtocol_s:string,
OriginTlsStatus_s:string,
OriginTlsProtocol_s:string,
OriginTlsMode_s:string,
OriginTlsFingerprint_s:string,
OriginTlsCipher_s:string,
OriginTcpRtt_d:real,
OriginProto_s:string,
Action_s:string,
RuleID_s:string,
WAFAction_s:string,
RayID_s:string,
ClientXRequestedWith_s:string,
ClientSrcPort_d:real,
ClientSSLProtocol_s:string,
ClientSSLCipher_s:string,
ClientRequestUserAgent_s:string,
ClientRequestURI_s:string,
ClientRequestReferer_s:string,
ClientRequestProtocol_s:string,
ClientRequestPath_s:string,
ClientRequestMethod_s:string,
EdgeColoCode_s:string,
ClientRequestHost_s:string,
ClientIPClass_s:string,
ClientIP_s:string,
ClientDeviceType_s:string,
ClientCountry_s:string,
ClientASN_d:real,
CacheTieredFill_b:bool,
CacheResponseStatus_d:real,
CacheResponseBytes_d:real,
CacheCacheStatus_s:string,
BotScoreSrc_s:string,
ClientRequestBytes_d:real,
SecurityLevel_s:string,
EdgeColoID_d:real,
EdgePathingOp_s:string,
ParentRayID_s:string,
OriginSSLProtocol_s:string,
OriginResponseTime_d:real,
OriginResponseStatus_d:real,
OriginResponseHTTPLastModified_s:string,
OriginResponseHTTPExpires_s:string,
OriginResponseBytes_d:real,
OriginIP_s:string,
FirewallMatchesSources_s:string,
FirewallMatchesRuleIDs_s:string,
EdgeEndTimestamp_t:datetime,
FirewallMatchesActions_s:string,
EdgeServerIP_s:string,
EdgeResponseStatus_d:real,
EdgeResponseContentType_s:string,
EdgeResponseCompressionRatio_d:real,
EdgeResponseBytes_d:real,
EdgeRequestHost_s:string,
EdgeRateLimitID_d:real,
EdgeRateLimitAction_s:string,
EdgePathingStatus_s:string,
EdgePathingSrc_s:string,
EdgeStartTimestamp_t:datetime,
Source_s:string,
_TimeReceived:datetime)

.alter table Cloudflare_CL policy caching hot = 1d

.create-or-alter function Cloudflare_CLExpand() {
Cloudflare_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
BotScore_d=toreal(events.BotScore_d),
DisconnectTimestamp_t=todatetime(events.DisconnectTimestamp_t),
ConnectTimestamp_t=todatetime(events.ConnectTimestamp_t),
ColoCode_s=tostring(events.ColoCode_s),
ClientTlsStatus_s=tostring(events.ClientTlsStatus_s),
ClientTlsProtocol_s=tostring(events.ClientTlsProtocol_s),
ClientTlsClientHelloServerName_s=tostring(events.ClientTlsClientHelloServerName_s),
ClientTlsCipher_s=tostring(events.ClientTlsCipher_s),
ClientTcpRtt_d=toreal(events.ClientTcpRtt_d),
ClientProto_s=tostring(events.ClientProto_s),
ClientPort_d=toreal(events.ClientPort_d),
Event_s=tostring(events.Event_s),
ClientMatchedIpFirewall_s=tostring(events.ClientMatchedIpFirewall_s),
Application_s=tostring(events.Application_s),
ZoneID_d=toreal(events.ZoneID_d),
WorkerSubrequestCount_d=toreal(events.WorkerSubrequestCount_d),
WorkerSubrequest_b=tobool(events.WorkerSubrequest_b),
WorkerStatus_s=tostring(events.WorkerStatus_s),
WorkerCPUTime_d=toreal(events.WorkerCPUTime_d),
WAFRuleMessage_s=tostring(events.WAFRuleMessage_s),
WAFRuleID_s=tostring(events.WAFRuleID_s),
WAFProfile_s=tostring(events.WAFProfile_s),
WAFMatchedVar_s=tostring(events.WAFMatchedVar_s),
ClientBytes_d=toreal(events.ClientBytes_d),
WAFFlags_s=tostring(events.WAFFlags_s),
IpFirewall_b=tobool(events.IpFirewall_b),
OriginPort_d=toreal(events.OriginPort_d),
OriginatorRayID_s=tostring(events.OriginatorRayID_s),
MatchIndex_d=toreal(events.MatchIndex_d),
Kind_s=tostring(events.Kind_s),
Datetime_t=todatetime(events.Datetime_t),
ClientRequestScheme_s=tostring(events.ClientRequestScheme_s),
ClientRequestQuery_s=tostring(events.ClientRequestQuery_s),
ClientRefererScheme_s=tostring(events.ClientRefererScheme_s),
ClientRefererQuery_s=tostring(events.ClientRefererQuery_s),
ClientRefererPath_s=tostring(events.ClientRefererPath_s),
ClientRefererHost_s=tostring(events.ClientRefererHost_s),
OriginBytes_d=toreal(events.OriginBytes_d),
ClientASNDescription_s=tostring(events.ClientASNDescription_s),
Timestamp_t=todatetime(events.Timestamp_t),
Status_d=toreal(events.Status_d),
ProxyProtocol_s=tostring(events.ProxyProtocol_s),
OriginTlsStatus_s=tostring(events.OriginTlsStatus_s),
OriginTlsProtocol_s=tostring(events.OriginTlsProtocol_s),
OriginTlsMode_s=tostring(events.OriginTlsMode_s),
OriginTlsFingerprint_s=tostring(events.OriginTlsFingerprint_s),
OriginTlsCipher_s=tostring(events.OriginTlsCipher_s),
OriginTcpRtt_d=toreal(events.OriginTcpRtt_d),
OriginProto_s=tostring(events.OriginProto_s),
Action_s=tostring(events.Action_s),
RuleID_s=tostring(events.RuleID_s),
WAFAction_s=tostring(events.WAFAction_s),
RayID_s=tostring(events.RayID_s),
ClientXRequestedWith_s=tostring(events.ClientXRequestedWith_s),
ClientSrcPort_d=toreal(events.ClientSrcPort_d),
ClientSSLProtocol_s=tostring(events.ClientSSLProtocol_s),
ClientSSLCipher_s=tostring(events.ClientSSLCipher_s),
ClientRequestUserAgent_s=tostring(events.ClientRequestUserAgent_s),
ClientRequestURI_s=tostring(events.ClientRequestURI_s),
ClientRequestReferer_s=tostring(events.ClientRequestReferer_s),
ClientRequestProtocol_s=tostring(events.ClientRequestProtocol_s),
ClientRequestPath_s=tostring(events.ClientRequestPath_s),
ClientRequestMethod_s=tostring(events.ClientRequestMethod_s),
EdgeColoCode_s=tostring(events.EdgeColoCode_s),
ClientRequestHost_s=tostring(events.ClientRequestHost_s),
ClientIPClass_s=tostring(events.ClientIPClass_s),
ClientIP_s=tostring(events.ClientIP_s),
ClientDeviceType_s=tostring(events.ClientDeviceType_s),
ClientCountry_s=tostring(events.ClientCountry_s),
ClientASN_d=toreal(events.ClientASN_d),
CacheTieredFill_b=tobool(events.CacheTieredFill_b),
CacheResponseStatus_d=toreal(events.CacheResponseStatus_d),
CacheResponseBytes_d=toreal(events.CacheResponseBytes_d),
CacheCacheStatus_s=tostring(events.CacheCacheStatus_s),
BotScoreSrc_s=tostring(events.BotScoreSrc_s),
ClientRequestBytes_d=toreal(events.ClientRequestBytes_d),
SecurityLevel_s=tostring(events.SecurityLevel_s),
EdgeColoID_d=toreal(events.EdgeColoID_d),
EdgePathingOp_s=tostring(events.EdgePathingOp_s),
ParentRayID_s=tostring(events.ParentRayID_s),
OriginSSLProtocol_s=tostring(events.OriginSSLProtocol_s),
OriginResponseTime_d=toreal(events.OriginResponseTime_d),
OriginResponseStatus_d=toreal(events.OriginResponseStatus_d),
OriginResponseHTTPLastModified_s=tostring(events.OriginResponseHTTPLastModified_s),
OriginResponseHTTPExpires_s=tostring(events.OriginResponseHTTPExpires_s),
OriginResponseBytes_d=toreal(events.OriginResponseBytes_d),
OriginIP_s=tostring(events.OriginIP_s),
FirewallMatchesSources_s=tostring(events.FirewallMatchesSources_s),
FirewallMatchesRuleIDs_s=tostring(events.FirewallMatchesRuleIDs_s),
EdgeEndTimestamp_t=todatetime(events.EdgeEndTimestamp_t),
FirewallMatchesActions_s=tostring(events.FirewallMatchesActions_s),
EdgeServerIP_s=tostring(events.EdgeServerIP_s),
EdgeResponseStatus_d=toreal(events.EdgeResponseStatus_d),
EdgeResponseContentType_s=tostring(events.EdgeResponseContentType_s),
EdgeResponseCompressionRatio_d=toreal(events.EdgeResponseCompressionRatio_d),
EdgeResponseBytes_d=toreal(events.EdgeResponseBytes_d),
EdgeRequestHost_s=tostring(events.EdgeRequestHost_s),
EdgeRateLimitID_d=toreal(events.EdgeRateLimitID_d),
EdgeRateLimitAction_s=tostring(events.EdgeRateLimitAction_s),
EdgePathingStatus_s=tostring(events.EdgePathingStatus_s),
EdgePathingSrc_s=tostring(events.EdgePathingSrc_s),
EdgeStartTimestamp_t=todatetime(events.EdgeStartTimestamp_t),
Source_s=tostring(events.Source_s),
_TimeReceived=todatetime(now())
}

.alter table Cloudflare_CL policy update @'[{"Source": "Cloudflare_CLRaw", "Query": "Cloudflare_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
