// ============================================================================
// Azure Data Explorer KQL Script for ASimProcessEventLogs_CL
// ============================================================================
// Generated: 2025-09-13 20:17:11
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table ASimProcessEventLogs_CLRaw (records:dynamic)

.alter-merge table ASimProcessEventLogs_CLRaw policy retention softdelete = 1d

.alter table ASimProcessEventLogs_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table ASimProcessEventLogs_CLRaw ingestion json mapping 'ASimProcessEventLogs_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table ASimProcessEventLogs_CL(
TimeGenerated:datetime,
AdditionalFields:dynamic,
ParentProcessGuid:string,
ParentProcessId:string,
ParentProcessInjectedAddress:string,
ParentProcessIsHidden:bool,
ParentProcessFileVersion:string,
ParentProcessFileProduct:string,
ParentProcessFileDescription:string,
ParentProcessFileCompany:string,
ParentProcessName:string,
ActingProcessFileSize:long,
ActingProcessTokenElevation:string,
ActingProcessCreationTime:datetime,
ParentProcessIntegrityLevel:string,
ActingProcessIMPHASH:string,
ActingProcessSHA256:string,
ActingProcessSHA1:string,
ActingProcessMD5:string,
ActingProcessIntegrityLevel:string,
ActingProcessGuid:string,
ActingProcessId:string,
ActingProcessInjectedAddress:string,
ActingProcessIsHidden:bool,
ActingProcessFilename:string,
ActingProcessFileOriginalName:string,
ActingProcessFileInternalName:string,
ActingProcessFileVersion:string,
ActingProcessSHA512:string,
ActingProcessFileProduct:string,
ParentProcessMD5:string,
ParentProcessSHA256:string,
TargetProcessFileSize:long,
TargetProcessTokenElevation:string,
TargetProcessCreationTime:datetime,
TargetProcessIMPHASH:string,
TargetProcessSHA512:string,
TargetProcessSHA256:string,
TargetProcessSHA1:string,
TargetProcessMD5:string,
TargetProcessIntegrityLevel:string,
TargetProcessGuid:string,
TargetProcessId:string,
TargetProcessInjectedAddress:string,
ParentProcessSHA1:string,
TargetProcessIsHidden:bool,
TargetProcessFileOriginalName:string,
TargetProcessFileInternalName:string,
TargetProcessFileVersion:string,
TargetProcessFileProduct:string,
TargetProcessFileDescription:string,
TargetProcessFileCompany:string,
TargetProcessName:string,
TargetProcessCommandLine:string,
ParentProcessTokenElevation:string,
ParentProcessCreationTime:datetime,
ParentProcessIMPHASH:string,
ParentProcessSHA512:string,
TargetProcessFilename:string,
ActingProcessFileDescription:string,
ActingProcessFileCompany:string,
ActingProcessName:string,
DvcDescription:string,
DvcFQDN:string,
DvcDomainType:string,
DvcDomain:string,
DvcHostname:string,
DvcIpAddr:string,
EventReportUrl:string,
EventOwner:string,
EventSchemaVersion:string,
EventVendor:string,
EventProductVersion:string,
EventProduct:string,
DvcId:string,
EventOriginalSeverity:string,
EventOriginalResultDetails:string,
EventOriginalSubType:string,
EventOriginalType:string,
EventOriginalUid:string,
EventResultDetails:string,
EventResult:string,
EventSubType:string,
EventType:string,
EventEndTime:datetime,
EventStartTime:datetime,
EventCount:int,
EventMessage:string,
EventSeverity:string,
DvcIdType:string,
DvcMacAddr:string,
DvcZone:string,
ActingProcessCommandLine:string,
TargetUserSessionGuid:string,
TargetUserSessionId:string,
TargetOriginalUserType:string,
TargetUserType:string,
TargetUsernameType:string,
TargetUsername:string,
TargetScope:string,
TargetScopeId:string,
TargetUserIdType:string,
TargetUserId:string,
ActorSessionId:string,
ActorOriginalUserType:string,
ActorUserType:string,
ActorUsernameType:string,
ActorUsername:string,
ActorScope:string,
ActorScopeId:string,
ActorUserIdType:string,
ActorUserId:string,
DvcScope:string,
DvcScopeId:string,
DvcInterface:string,
DvcOriginalAction:string,
DvcAction:string,
DvcOsVersion:string,
DvcOs:string,
TargetProcessCurrentDirectory:string,
TargetProcessStatusCode:string,
_TimeReceived:datetime)

.alter table ASimProcessEventLogs_CL policy caching hot = 1d

.create-or-alter function ASimProcessEventLogs_CLExpand() {
ASimProcessEventLogs_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
AdditionalFields=todynamic(events.AdditionalFields),
ParentProcessGuid=tostring(events.ParentProcessGuid),
ParentProcessId=tostring(events.ParentProcessId),
ParentProcessInjectedAddress=tostring(events.ParentProcessInjectedAddress),
ParentProcessIsHidden=tobool(events.ParentProcessIsHidden),
ParentProcessFileVersion=tostring(events.ParentProcessFileVersion),
ParentProcessFileProduct=tostring(events.ParentProcessFileProduct),
ParentProcessFileDescription=tostring(events.ParentProcessFileDescription),
ParentProcessFileCompany=tostring(events.ParentProcessFileCompany),
ParentProcessName=tostring(events.ParentProcessName),
ActingProcessFileSize=tolong(events.ActingProcessFileSize),
ActingProcessTokenElevation=tostring(events.ActingProcessTokenElevation),
ActingProcessCreationTime=todatetime(events.ActingProcessCreationTime),
ParentProcessIntegrityLevel=tostring(events.ParentProcessIntegrityLevel),
ActingProcessIMPHASH=tostring(events.ActingProcessIMPHASH),
ActingProcessSHA256=tostring(events.ActingProcessSHA256),
ActingProcessSHA1=tostring(events.ActingProcessSHA1),
ActingProcessMD5=tostring(events.ActingProcessMD5),
ActingProcessIntegrityLevel=tostring(events.ActingProcessIntegrityLevel),
ActingProcessGuid=tostring(events.ActingProcessGuid),
ActingProcessId=tostring(events.ActingProcessId),
ActingProcessInjectedAddress=tostring(events.ActingProcessInjectedAddress),
ActingProcessIsHidden=tobool(events.ActingProcessIsHidden),
ActingProcessFilename=tostring(events.ActingProcessFilename),
ActingProcessFileOriginalName=tostring(events.ActingProcessFileOriginalName),
ActingProcessFileInternalName=tostring(events.ActingProcessFileInternalName),
ActingProcessFileVersion=tostring(events.ActingProcessFileVersion),
ActingProcessSHA512=tostring(events.ActingProcessSHA512),
ActingProcessFileProduct=tostring(events.ActingProcessFileProduct),
ParentProcessMD5=tostring(events.ParentProcessMD5),
ParentProcessSHA256=tostring(events.ParentProcessSHA256),
TargetProcessFileSize=tolong(events.TargetProcessFileSize),
TargetProcessTokenElevation=tostring(events.TargetProcessTokenElevation),
TargetProcessCreationTime=todatetime(events.TargetProcessCreationTime),
TargetProcessIMPHASH=tostring(events.TargetProcessIMPHASH),
TargetProcessSHA512=tostring(events.TargetProcessSHA512),
TargetProcessSHA256=tostring(events.TargetProcessSHA256),
TargetProcessSHA1=tostring(events.TargetProcessSHA1),
TargetProcessMD5=tostring(events.TargetProcessMD5),
TargetProcessIntegrityLevel=tostring(events.TargetProcessIntegrityLevel),
TargetProcessGuid=tostring(events.TargetProcessGuid),
TargetProcessId=tostring(events.TargetProcessId),
TargetProcessInjectedAddress=tostring(events.TargetProcessInjectedAddress),
ParentProcessSHA1=tostring(events.ParentProcessSHA1),
TargetProcessIsHidden=tobool(events.TargetProcessIsHidden),
TargetProcessFileOriginalName=tostring(events.TargetProcessFileOriginalName),
TargetProcessFileInternalName=tostring(events.TargetProcessFileInternalName),
TargetProcessFileVersion=tostring(events.TargetProcessFileVersion),
TargetProcessFileProduct=tostring(events.TargetProcessFileProduct),
TargetProcessFileDescription=tostring(events.TargetProcessFileDescription),
TargetProcessFileCompany=tostring(events.TargetProcessFileCompany),
TargetProcessName=tostring(events.TargetProcessName),
TargetProcessCommandLine=tostring(events.TargetProcessCommandLine),
ParentProcessTokenElevation=tostring(events.ParentProcessTokenElevation),
ParentProcessCreationTime=todatetime(events.ParentProcessCreationTime),
ParentProcessIMPHASH=tostring(events.ParentProcessIMPHASH),
ParentProcessSHA512=tostring(events.ParentProcessSHA512),
TargetProcessFilename=tostring(events.TargetProcessFilename),
ActingProcessFileDescription=tostring(events.ActingProcessFileDescription),
ActingProcessFileCompany=tostring(events.ActingProcessFileCompany),
ActingProcessName=tostring(events.ActingProcessName),
DvcDescription=tostring(events.DvcDescription),
DvcFQDN=tostring(events.DvcFQDN),
DvcDomainType=tostring(events.DvcDomainType),
DvcDomain=tostring(events.DvcDomain),
DvcHostname=tostring(events.DvcHostname),
DvcIpAddr=tostring(events.DvcIpAddr),
EventReportUrl=tostring(events.EventReportUrl),
EventOwner=tostring(events.EventOwner),
EventSchemaVersion=tostring(events.EventSchemaVersion),
EventVendor=tostring(events.EventVendor),
EventProductVersion=tostring(events.EventProductVersion),
EventProduct=tostring(events.EventProduct),
DvcId=tostring(events.DvcId),
EventOriginalSeverity=tostring(events.EventOriginalSeverity),
EventOriginalResultDetails=tostring(events.EventOriginalResultDetails),
EventOriginalSubType=tostring(events.EventOriginalSubType),
EventOriginalType=tostring(events.EventOriginalType),
EventOriginalUid=tostring(events.EventOriginalUid),
EventResultDetails=tostring(events.EventResultDetails),
EventResult=tostring(events.EventResult),
EventSubType=tostring(events.EventSubType),
EventType=tostring(events.EventType),
EventEndTime=todatetime(events.EventEndTime),
EventStartTime=todatetime(events.EventStartTime),
EventCount=toint(events.EventCount),
EventMessage=tostring(events.EventMessage),
EventSeverity=tostring(events.EventSeverity),
DvcIdType=tostring(events.DvcIdType),
DvcMacAddr=tostring(events.DvcMacAddr),
DvcZone=tostring(events.DvcZone),
ActingProcessCommandLine=tostring(events.ActingProcessCommandLine),
TargetUserSessionGuid=tostring(events.TargetUserSessionGuid),
TargetUserSessionId=tostring(events.TargetUserSessionId),
TargetOriginalUserType=tostring(events.TargetOriginalUserType),
TargetUserType=tostring(events.TargetUserType),
TargetUsernameType=tostring(events.TargetUsernameType),
TargetUsername=tostring(events.TargetUsername),
TargetScope=tostring(events.TargetScope),
TargetScopeId=tostring(events.TargetScopeId),
TargetUserIdType=tostring(events.TargetUserIdType),
TargetUserId=tostring(events.TargetUserId),
ActorSessionId=tostring(events.ActorSessionId),
ActorOriginalUserType=tostring(events.ActorOriginalUserType),
ActorUserType=tostring(events.ActorUserType),
ActorUsernameType=tostring(events.ActorUsernameType),
ActorUsername=tostring(events.ActorUsername),
ActorScope=tostring(events.ActorScope),
ActorScopeId=tostring(events.ActorScopeId),
ActorUserIdType=tostring(events.ActorUserIdType),
ActorUserId=tostring(events.ActorUserId),
DvcScope=tostring(events.DvcScope),
DvcScopeId=tostring(events.DvcScopeId),
DvcInterface=tostring(events.DvcInterface),
DvcOriginalAction=tostring(events.DvcOriginalAction),
DvcAction=tostring(events.DvcAction),
DvcOsVersion=tostring(events.DvcOsVersion),
DvcOs=tostring(events.DvcOs),
TargetProcessCurrentDirectory=tostring(events.TargetProcessCurrentDirectory),
TargetProcessStatusCode=tostring(events.TargetProcessStatusCode),
_TimeReceived=todatetime(now())
}

.alter table ASimProcessEventLogs_CL policy update @'[{"Source": "ASimProcessEventLogs_CLRaw", "Query": "ASimProcessEventLogs_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
