// ============================================================================
// Azure Data Explorer KQL Script for darktrace_model_alerts_CL
// ============================================================================
// Generated: 2025-09-13 20:17:14
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table darktrace_model_alerts_CLRaw (records:dynamic)

.alter-merge table darktrace_model_alerts_CLRaw policy retention softdelete = 1d

.alter table darktrace_model_alerts_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table darktrace_model_alerts_CLRaw ingestion json mapping 'darktrace_model_alerts_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table darktrace_model_alerts_CL(
TimeGenerated:datetime,
dtProduct_s:string,
activityId_s:string,
identifier_s:string,
deviceId_d:real,
antigena_b:bool,
description_s:string,
blocked_b:bool,
mac_s:string,
groupingId_s:string,
cSensorID_g:guid,
timestamp_t:string,
subject_s:string,
recipients_s:string,
link_hosts_s:string,
from_s:string,
direction_s:string,
attachment_sha1s_s:string,
uuid_s:string,
anomaly_score_d:real,
groupByActivity_b:bool,
newEvent_b:bool,
details_s:string,
typeLabel_s:string,
uuid_g:guid,
last_updated_status_d:real,
last_updated_d:real,
alert_name_s:string,
priority_level_s:string,
summaryFirstSentence_s:string,
priority_d:real,
ip_address_s:string,
child_id_d:real,
Severity:real,
tags_s:string,
sid_d:real,
groupPreviousGroups_s:string,
currentGroup_s:string,
name_s:string,
longitude_d:real,
actions_s:string,
Category:string,
startTime_s:string,
mitreTechniques_s:string,
destMac_s:string,
destHost_s:string,
destPort_s:string,
destIP_s:string,
sourcePort_s:string,
endTime_s:string,
sourceMac_s:string,
SourceIP:string,
modelName_s:string,
threatID_d:real,
pid_d:real,
modelName_s:string,
breachTime_s:string,
score_d:real,
sourceHost_s:string,
cSensorID_s:string,
title_s:string,
hostname_s:string,
compliance_b:bool,
cSensor_b:bool,
Message:string,
status_s:string,
deviceIP_s:string,
time_s:string,
priority_s:string,
externalId_g:guid,
priority_code_d:real,
bestDeviceName_s:string,
groupCategory_s:string,
groupScore_d:string,
summary_s:string,
triggeredComponents_s:string,
breachUrl_s:string,
url_s:string,
friendlyName_s:string,
latitude_d:real,
_TimeReceived:datetime)

.alter table darktrace_model_alerts_CL policy caching hot = 1d

.create-or-alter function darktrace_model_alerts_CLExpand() {
darktrace_model_alerts_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
dtProduct_s=tostring(events.dtProduct_s),
activityId_s=tostring(events.activityId_s),
identifier_s=tostring(events.identifier_s),
deviceId_d=toreal(events.deviceId_d),
antigena_b=tobool(events.antigena_b),
description_s=tostring(events.description_s),
blocked_b=tobool(events.blocked_b),
mac_s=tostring(events.mac_s),
groupingId_s=tostring(events.groupingId_s),
cSensorID_g=toguid(events.cSensorID_g),
timestamp_t=tostring(events.timestamp_t),
subject_s=tostring(events.subject_s),
recipients_s=tostring(events.recipients_s),
link_hosts_s=tostring(events.link_hosts_s),
from_s=tostring(events.from_s),
direction_s=tostring(events.direction_s),
attachment_sha1s_s=tostring(events.attachment_sha1s_s),
uuid_s=tostring(events.uuid_s),
anomaly_score_d=toreal(events.anomaly_score_d),
groupByActivity_b=tobool(events.groupByActivity_b),
newEvent_b=tobool(events.newEvent_b),
details_s=tostring(events.details_s),
typeLabel_s=tostring(events.typeLabel_s),
uuid_g=toguid(events.uuid_g),
last_updated_status_d=toreal(events.last_updated_status_d),
last_updated_d=toreal(events.last_updated_d),
alert_name_s=tostring(events.alert_name_s),
priority_level_s=tostring(events.priority_level_s),
summaryFirstSentence_s=tostring(events.summaryFirstSentence_s),
priority_d=toreal(events.priority_d),
ip_address_s=tostring(events.ip_address_s),
child_id_d=toreal(events.child_id_d),
Severity=toreal(events.Severity),
tags_s=tostring(events.tags_s),
sid_d=toreal(events.sid_d),
groupPreviousGroups_s=tostring(events.groupPreviousGroups_s),
currentGroup_s=tostring(events.currentGroup_s),
name_s=tostring(events.name_s),
longitude_d=toreal(events.longitude_d),
actions_s=tostring(events.actions_s),
Category=tostring(events.Category),
startTime_s=tostring(events.startTime_s),
mitreTechniques_s=tostring(events.mitreTechniques_s),
destMac_s=tostring(events.destMac_s),
destHost_s=tostring(events.destHost_s),
destPort_s=tostring(events.destPort_s),
destIP_s=tostring(events.destIP_s),
sourcePort_s=tostring(events.sourcePort_s),
endTime_s=tostring(events.endTime_s),
sourceMac_s=tostring(events.sourceMac_s),
SourceIP=tostring(events.SourceIP),
modelName_s=tostring(events.modelName_s),
threatID_d=toreal(events.threatID_d),
pid_d=toreal(events.pid_d),
modelName_s=tostring(events.modelName_s),
breachTime_s=tostring(events.breachTime_s),
score_d=toreal(events.score_d),
sourceHost_s=tostring(events.sourceHost_s),
cSensorID_s=tostring(events.cSensorID_s),
title_s=tostring(events.title_s),
hostname_s=tostring(events.hostname_s),
compliance_b=tobool(events.compliance_b),
cSensor_b=tobool(events.cSensor_b),
Message=tostring(events.Message),
status_s=tostring(events.status_s),
deviceIP_s=tostring(events.deviceIP_s),
time_s=tostring(events.time_s),
priority_s=tostring(events.priority_s),
externalId_g=toguid(events.externalId_g),
priority_code_d=toreal(events.priority_code_d),
bestDeviceName_s=tostring(events.bestDeviceName_s),
groupCategory_s=tostring(events.groupCategory_s),
groupScore_d=tostring(events.groupScore_d),
summary_s=tostring(events.summary_s),
triggeredComponents_s=tostring(events.triggeredComponents_s),
breachUrl_s=tostring(events.breachUrl_s),
url_s=tostring(events.url_s),
friendlyName_s=tostring(events.friendlyName_s),
latitude_d=toreal(events.latitude_d),
_TimeReceived=todatetime(now())
}

.alter table darktrace_model_alerts_CL policy update @'[{"Source": "darktrace_model_alerts_CLRaw", "Query": "darktrace_model_alerts_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
