// ============================================================================
// Azure Data Explorer KQL Script for DuoSecurityTrustMonitor_CL
// ============================================================================
// Generated: 2025-09-13 20:17:14
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table DuoSecurityTrustMonitor_CLRaw (records:dynamic)

.alter-merge table DuoSecurityTrustMonitor_CLRaw policy retention softdelete = 1d

.alter table DuoSecurityTrustMonitor_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table DuoSecurityTrustMonitor_CLRaw ingestion json mapping 'DuoSecurityTrustMonitor_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table DuoSecurityTrustMonitor_CL(
TimeGenerated:datetime,
explanations_s:string,
surfaced_auth_email_s:string,
surfaced_auth_factor_s:string,
surfaced_auth_isotimestamp_t:datetime,
surfaced_auth_ood_software_s:string,
surfaced_auth_reason_s:string,
surfaced_auth_result_s:string,
surfaced_auth_timestamp_d:real,
surfaced_auth_txid_s:string,
surfaced_auth_application_name_s:string,
surfaced_auth_user_groups_s:string,
surfaced_auth_user_name_s:string,
surfaced_timestamp_d:real,
triage_event_uri_s:string,
triaged_as_interesting_b:bool,
type_s:string,
bypass_status_enabled_d:real,
enabled_by_key_s:string,
enabled_by_name_s:string,
surfaced_auth_user_key_s:string,
enabled_for_key_s:string,
surfaced_auth_application_key_s:string,
surfaced_auth_access_device_security_agents_s:string,
from_common_netblock_b:bool,
from_new_user_b:bool,
low_risk_ip_b:bool,
priority_event_b:bool,
priority_reasons_s:string,
sekey_s:string,
state_s:string,
surfaced_auth_access_device_browser_s:string,
surfaced_auth_alias_s:string,
surfaced_auth_access_device_browser_version_s:string,
surfaced_auth_access_device_is_encryption_enabled_s:string,
surfaced_auth_access_device_is_firewall_enabled_s:string,
surfaced_auth_access_device_is_password_set_s:string,
surfaced_auth_access_device_location_city_s:string,
surfaced_auth_access_device_location_country_s:string,
surfaced_auth_access_device_location_state_s:string,
surfaced_auth_access_device_os_s:string,
surfaced_auth_access_device_os_version_s:string,
surfaced_auth_access_device_ip_s:string,
enabled_for_name_s:string,
_TimeReceived:datetime)

.alter table DuoSecurityTrustMonitor_CL policy caching hot = 1d

.create-or-alter function DuoSecurityTrustMonitor_CLExpand() {
DuoSecurityTrustMonitor_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
explanations_s=tostring(events.explanations_s),
surfaced_auth_email_s=tostring(events.surfaced_auth_email_s),
surfaced_auth_factor_s=tostring(events.surfaced_auth_factor_s),
surfaced_auth_isotimestamp_t=todatetime(events.surfaced_auth_isotimestamp_t),
surfaced_auth_ood_software_s=tostring(events.surfaced_auth_ood_software_s),
surfaced_auth_reason_s=tostring(events.surfaced_auth_reason_s),
surfaced_auth_result_s=tostring(events.surfaced_auth_result_s),
surfaced_auth_timestamp_d=toreal(events.surfaced_auth_timestamp_d),
surfaced_auth_txid_s=tostring(events.surfaced_auth_txid_s),
surfaced_auth_application_name_s=tostring(events.surfaced_auth_application_name_s),
surfaced_auth_user_groups_s=tostring(events.surfaced_auth_user_groups_s),
surfaced_auth_user_name_s=tostring(events.surfaced_auth_user_name_s),
surfaced_timestamp_d=toreal(events.surfaced_timestamp_d),
triage_event_uri_s=tostring(events.triage_event_uri_s),
triaged_as_interesting_b=tobool(events.triaged_as_interesting_b),
type_s=tostring(events.type_s),
bypass_status_enabled_d=toreal(events.bypass_status_enabled_d),
enabled_by_key_s=tostring(events.enabled_by_key_s),
enabled_by_name_s=tostring(events.enabled_by_name_s),
surfaced_auth_user_key_s=tostring(events.surfaced_auth_user_key_s),
enabled_for_key_s=tostring(events.enabled_for_key_s),
surfaced_auth_application_key_s=tostring(events.surfaced_auth_application_key_s),
surfaced_auth_access_device_security_agents_s=tostring(events.surfaced_auth_access_device_security_agents_s),
from_common_netblock_b=tobool(events.from_common_netblock_b),
from_new_user_b=tobool(events.from_new_user_b),
low_risk_ip_b=tobool(events.low_risk_ip_b),
priority_event_b=tobool(events.priority_event_b),
priority_reasons_s=tostring(events.priority_reasons_s),
sekey_s=tostring(events.sekey_s),
state_s=tostring(events.state_s),
surfaced_auth_access_device_browser_s=tostring(events.surfaced_auth_access_device_browser_s),
surfaced_auth_alias_s=tostring(events.surfaced_auth_alias_s),
surfaced_auth_access_device_browser_version_s=tostring(events.surfaced_auth_access_device_browser_version_s),
surfaced_auth_access_device_is_encryption_enabled_s=tostring(events.surfaced_auth_access_device_is_encryption_enabled_s),
surfaced_auth_access_device_is_firewall_enabled_s=tostring(events.surfaced_auth_access_device_is_firewall_enabled_s),
surfaced_auth_access_device_is_password_set_s=tostring(events.surfaced_auth_access_device_is_password_set_s),
surfaced_auth_access_device_location_city_s=tostring(events.surfaced_auth_access_device_location_city_s),
surfaced_auth_access_device_location_country_s=tostring(events.surfaced_auth_access_device_location_country_s),
surfaced_auth_access_device_location_state_s=tostring(events.surfaced_auth_access_device_location_state_s),
surfaced_auth_access_device_os_s=tostring(events.surfaced_auth_access_device_os_s),
surfaced_auth_access_device_os_version_s=tostring(events.surfaced_auth_access_device_os_version_s),
surfaced_auth_access_device_ip_s=tostring(events.surfaced_auth_access_device_ip_s),
enabled_for_name_s=tostring(events.enabled_for_name_s),
_TimeReceived=todatetime(now())
}

.alter table DuoSecurityTrustMonitor_CL policy update @'[{"Source": "DuoSecurityTrustMonitor_CLRaw", "Query": "DuoSecurityTrustMonitor_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
