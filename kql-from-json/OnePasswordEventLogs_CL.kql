// ============================================================================
// Azure Data Explorer KQL Script for OnePasswordEventLogs_CL
// ============================================================================
// Generated: 2025-09-13 20:17:16
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table OnePasswordEventLogs_CLRaw (records:dynamic)

.alter-merge table OnePasswordEventLogs_CLRaw policy retention softdelete = 1d

.alter table OnePasswordEventLogs_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table OnePasswordEventLogs_CLRaw ingestion json mapping 'OnePasswordEventLogs_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table OnePasswordEventLogs_CL(
TimeGenerated:datetime,
SourceSystem:string,
item_uuid:string,
vault_uuid:string,
used_version:int,
session:dynamic,
aux_info:string,
aux_details:dynamic,
aux_uuid:string,
aux_id:int,
object_details:dynamic,
object_uuid:string,
object_Type:string,
user:dynamic,
action:string,
actor_uuid:string,
location:dynamic,
client:dynamic,
target_user:dynamic,
details:dynamic,
action_Type:string,
category:string,
country:string,
timestamp:datetime,
session_uuid:string,
uuid_s:string,
actor_details:dynamic,
log_source:string,
_TimeReceived:datetime)

.alter table OnePasswordEventLogs_CL policy caching hot = 1d

.create-or-alter function OnePasswordEventLogs_CLExpand() {
OnePasswordEventLogs_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
SourceSystem=tostring(events.SourceSystem),
item_uuid=tostring(events.item_uuid),
vault_uuid=tostring(events.vault_uuid),
used_version=toint(events.used_version),
session=todynamic(events.session),
aux_info=tostring(events.aux_info),
aux_details=todynamic(events.aux_details),
aux_uuid=tostring(events.aux_uuid),
aux_id=toint(events.aux_id),
object_details=todynamic(events.object_details),
object_uuid=tostring(events.object_uuid),
object_Type=tostring(events.object_Type),
user=todynamic(events.user),
action=tostring(events.action),
actor_uuid=tostring(events.actor_uuid),
location=todynamic(events.location),
client=todynamic(events.client),
target_user=todynamic(events.target_user),
details=todynamic(events.details),
action_Type=tostring(events.action_Type),
category=tostring(events.category),
country=tostring(events.country),
timestamp=todatetime(events.timestamp),
session_uuid=tostring(events.session_uuid),
uuid_s=tostring(events.uuid_s),
actor_details=todynamic(events.actor_details),
log_source=tostring(events.log_source),
_TimeReceived=todatetime(now())
}

.alter table OnePasswordEventLogs_CL policy update @'[{"Source": "OnePasswordEventLogs_CLRaw", "Query": "OnePasswordEventLogs_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
