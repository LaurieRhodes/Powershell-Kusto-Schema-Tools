// ============================================================================
// Azure Data Explorer KQL Script for Perimeter81_CL
// ============================================================================
// Generated: 2025-09-13 20:17:16
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table Perimeter81_CLRaw (records:dynamic)

.alter-merge table Perimeter81_CLRaw policy retention softdelete = 1d

.alter table Perimeter81_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table Perimeter81_CLRaw ingestion json mapping 'Perimeter81_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table Perimeter81_CL(
TimeGenerated:datetime,
TenantId:guid,
application_type_s:string,
application_endpoint_s:string,
application_alias_cname_s:string,
idpName_s:string,
network_name_s:string,
network_dns_s:string,
geoPoint_accuracy_radius_d:real,
geoPoint_latitude_d:real,
geoPoint_longitude_d:real,
geoPoint_metro_code_d:real,
geoPoint_time_zone_s:string,
addressCountry_s:string,
event_eventName_s:string,
event_tenantId_s:string,
event_originalTenantId_s:string,
event_releasedFrom_tenantId_s:string,
event_releasedBy_email_s:string,
ip_s:string,
releasedBy_email_s:string,
releasedFrom_tenantId_s:string,
originalTenantId_s:string,
eventName_s:string,
integrationName_s:string,
application_name_s:string,
releasedBy_firstName_s:string,
releasedBy_tenantId_s:string,
releasedFrom_company_s:string,
releasedFrom_name_s:string,
event_eventVersion_s:string,
event_integrationIdentifier_s:string,
event_ip_s:string,
releasedBy_lastName_s:string,
integrationIdentifier_s:string,
paymentInfo_s:string,
networkName_s:string,
SourceSystem:string,
MG:string,
ManagementGroupName:string,
Computer:string,
RawData:string,
emails_s:string,
enabled_b:string,
installation_installationId_g:string,
releasedBy_roleName_s:string,
role_displayName_s:string,
oldRole_displayName_s:string,
planName_s:string,
planId_s:string,
error_message_s:string,
amount_d:real,
vpnLocation_name_s:string,
account_tenantId_s:string,
group_name_s:string,
regions_s:string,
policy_name_s:string,
user_firstName_s:string,
user_lastName_s:string,
user_email_s:string,
applicationName_s:string,
user_tenantId_s:string,
newPlan_planWeight_d:string,
oldPlan_name_s:string,
oldPlan_planWeight_d:real,
installation_installationId_s:string,
account_company_s:string,
account_name_s:string,
newPlan_name_s:string,
eventVersion_s:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table Perimeter81_CL policy caching hot = 1d

.create-or-alter function Perimeter81_CLExpand() {
Perimeter81_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
application_type_s=tostring(events.application_type_s),
application_endpoint_s=tostring(events.application_endpoint_s),
application_alias_cname_s=tostring(events.application_alias_cname_s),
idpName_s=tostring(events.idpName_s),
network_name_s=tostring(events.network_name_s),
network_dns_s=tostring(events.network_dns_s),
geoPoint_accuracy_radius_d=toreal(events.geoPoint_accuracy_radius_d),
geoPoint_latitude_d=toreal(events.geoPoint_latitude_d),
geoPoint_longitude_d=toreal(events.geoPoint_longitude_d),
geoPoint_metro_code_d=toreal(events.geoPoint_metro_code_d),
geoPoint_time_zone_s=tostring(events.geoPoint_time_zone_s),
addressCountry_s=tostring(events.addressCountry_s),
event_eventName_s=tostring(events.event_eventName_s),
event_tenantId_s=tostring(events.event_tenantId_s),
event_originalTenantId_s=tostring(events.event_originalTenantId_s),
event_releasedFrom_tenantId_s=tostring(events.event_releasedFrom_tenantId_s),
event_releasedBy_email_s=tostring(events.event_releasedBy_email_s),
ip_s=tostring(events.ip_s),
releasedBy_email_s=tostring(events.releasedBy_email_s),
releasedFrom_tenantId_s=tostring(events.releasedFrom_tenantId_s),
originalTenantId_s=tostring(events.originalTenantId_s),
eventName_s=tostring(events.eventName_s),
integrationName_s=tostring(events.integrationName_s),
application_name_s=tostring(events.application_name_s),
releasedBy_firstName_s=tostring(events.releasedBy_firstName_s),
releasedBy_tenantId_s=tostring(events.releasedBy_tenantId_s),
releasedFrom_company_s=tostring(events.releasedFrom_company_s),
releasedFrom_name_s=tostring(events.releasedFrom_name_s),
event_eventVersion_s=tostring(events.event_eventVersion_s),
event_integrationIdentifier_s=tostring(events.event_integrationIdentifier_s),
event_ip_s=tostring(events.event_ip_s),
releasedBy_lastName_s=tostring(events.releasedBy_lastName_s),
integrationIdentifier_s=tostring(events.integrationIdentifier_s),
paymentInfo_s=tostring(events.paymentInfo_s),
networkName_s=tostring(events.networkName_s),
SourceSystem=tostring(events.SourceSystem),
MG=tostring(events.MG),
ManagementGroupName=tostring(events.ManagementGroupName),
Computer=tostring(events.Computer),
RawData=tostring(events.RawData),
emails_s=tostring(events.emails_s),
enabled_b=tostring(events.enabled_b),
installation_installationId_g=tostring(events.installation_installationId_g),
releasedBy_roleName_s=tostring(events.releasedBy_roleName_s),
role_displayName_s=tostring(events.role_displayName_s),
oldRole_displayName_s=tostring(events.oldRole_displayName_s),
planName_s=tostring(events.planName_s),
planId_s=tostring(events.planId_s),
error_message_s=tostring(events.error_message_s),
amount_d=toreal(events.amount_d),
vpnLocation_name_s=tostring(events.vpnLocation_name_s),
account_tenantId_s=tostring(events.account_tenantId_s),
group_name_s=tostring(events.group_name_s),
regions_s=tostring(events.regions_s),
policy_name_s=tostring(events.policy_name_s),
user_firstName_s=tostring(events.user_firstName_s),
user_lastName_s=tostring(events.user_lastName_s),
user_email_s=tostring(events.user_email_s),
applicationName_s=tostring(events.applicationName_s),
user_tenantId_s=tostring(events.user_tenantId_s),
newPlan_planWeight_d=tostring(events.newPlan_planWeight_d),
oldPlan_name_s=tostring(events.oldPlan_name_s),
oldPlan_planWeight_d=toreal(events.oldPlan_planWeight_d),
installation_installationId_s=tostring(events.installation_installationId_s),
account_company_s=tostring(events.account_company_s),
account_name_s=tostring(events.account_name_s),
newPlan_name_s=tostring(events.newPlan_name_s),
eventVersion_s=tostring(events.eventVersion_s),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table Perimeter81_CL policy update @'[{"Source": "Perimeter81_CLRaw", "Query": "Perimeter81_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
