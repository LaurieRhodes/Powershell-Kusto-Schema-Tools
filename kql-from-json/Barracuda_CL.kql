// ============================================================================
// Azure Data Explorer KQL Script for Barracuda_CL
// ============================================================================
// Generated: 2025-09-13 20:17:11
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table Barracuda_CLRaw (records:dynamic)

.alter-merge table Barracuda_CLRaw policy retention softdelete = 1d

.alter table Barracuda_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table Barracuda_CLRaw ingestion json mapping 'Barracuda_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table Barracuda_CL(
TimeGenerated:datetime,
TenantId:guid,
DestinationIP_s:string,
DestinationPort_d:real,
ActionID_s:string,
UnitName_s:string,
Protocol_s:string,
DeviceReceiptTime_s:string,
Details_s:string,
HostIP_s:string,
WAF_Serial_s:string,
ServerIP_s:string,
HTTPStatus_s:string,
Action_s:string,
ClientIP_s:string,
BytesReceived_d:real,
ServerPort_d:real,
ServicePort_d:real,
ProtocolVersion_s:string,
Cookie_s:string,
Referer_s:string,
Method_s:string,
BytesSent_d:real,
TimeTaken_d:real,
SessionID_s:string,
ClientPort_d:real,
RuleType_s:string,
AuthenticatedUser_s:string,
UserAgent_s:string,
URL_s:string,
CacheHit_d:real,
SourcePort_d:real,
ProxyIP_s:string,
SourceIP:string,
Severity_s:string,
SourceSystem:string,
MG:string,
ManagementGroupName:string,
Computer:string,
RawData:string,
ObjectName_s:string,
ObjectType_s:string,
AdminName_s:string,
ClientType_s:string,
CommandName_s:string,
LoginIP_s:string,
LoginPort_d:real,
ChangeType_s:string,
TransactionID_d:real,
NewValue_s:string,
OldValue_s:string,
Variable_s:string,
AdminRole_s:string,
EventMessage_s:string,
EventID_d:real,
host_s:string,
ident_s:string,
Message:string,
cef_version_d:real,
Vendor_s:string,
Product_s:string,
DeviceVersion_s:string,
SignatureId_s:string,
EventName_s:string,
LogType_s:string,
ProxyPort_d:real,
Type:string,
_ResourceId:string,
_ItemId:string,
_TimeReceived:datetime)

.alter table Barracuda_CL policy caching hot = 1d

.create-or-alter function Barracuda_CLExpand() {
Barracuda_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
DestinationIP_s=tostring(events.DestinationIP_s),
DestinationPort_d=toreal(events.DestinationPort_d),
ActionID_s=tostring(events.ActionID_s),
UnitName_s=tostring(events.UnitName_s),
Protocol_s=tostring(events.Protocol_s),
DeviceReceiptTime_s=tostring(events.DeviceReceiptTime_s),
Details_s=tostring(events.Details_s),
HostIP_s=tostring(events.HostIP_s),
WAF_Serial_s=tostring(events.WAF_Serial_s),
ServerIP_s=tostring(events.ServerIP_s),
HTTPStatus_s=tostring(events.HTTPStatus_s),
Action_s=tostring(events.Action_s),
ClientIP_s=tostring(events.ClientIP_s),
BytesReceived_d=toreal(events.BytesReceived_d),
ServerPort_d=toreal(events.ServerPort_d),
ServicePort_d=toreal(events.ServicePort_d),
ProtocolVersion_s=tostring(events.ProtocolVersion_s),
Cookie_s=tostring(events.Cookie_s),
Referer_s=tostring(events.Referer_s),
Method_s=tostring(events.Method_s),
BytesSent_d=toreal(events.BytesSent_d),
TimeTaken_d=toreal(events.TimeTaken_d),
SessionID_s=tostring(events.SessionID_s),
ClientPort_d=toreal(events.ClientPort_d),
RuleType_s=tostring(events.RuleType_s),
AuthenticatedUser_s=tostring(events.AuthenticatedUser_s),
UserAgent_s=tostring(events.UserAgent_s),
URL_s=tostring(events.URL_s),
CacheHit_d=toreal(events.CacheHit_d),
SourcePort_d=toreal(events.SourcePort_d),
ProxyIP_s=tostring(events.ProxyIP_s),
SourceIP=tostring(events.SourceIP),
Severity_s=tostring(events.Severity_s),
SourceSystem=tostring(events.SourceSystem),
MG=tostring(events.MG),
ManagementGroupName=tostring(events.ManagementGroupName),
Computer=tostring(events.Computer),
RawData=tostring(events.RawData),
ObjectName_s=tostring(events.ObjectName_s),
ObjectType_s=tostring(events.ObjectType_s),
AdminName_s=tostring(events.AdminName_s),
ClientType_s=tostring(events.ClientType_s),
CommandName_s=tostring(events.CommandName_s),
LoginIP_s=tostring(events.LoginIP_s),
LoginPort_d=toreal(events.LoginPort_d),
ChangeType_s=tostring(events.ChangeType_s),
TransactionID_d=toreal(events.TransactionID_d),
NewValue_s=tostring(events.NewValue_s),
OldValue_s=tostring(events.OldValue_s),
Variable_s=tostring(events.Variable_s),
AdminRole_s=tostring(events.AdminRole_s),
EventMessage_s=tostring(events.EventMessage_s),
EventID_d=toreal(events.EventID_d),
host_s=tostring(events.host_s),
ident_s=tostring(events.ident_s),
Message=tostring(events.Message),
cef_version_d=toreal(events.cef_version_d),
Vendor_s=tostring(events.Vendor_s),
Product_s=tostring(events.Product_s),
DeviceVersion_s=tostring(events.DeviceVersion_s),
SignatureId_s=tostring(events.SignatureId_s),
EventName_s=tostring(events.EventName_s),
LogType_s=tostring(events.LogType_s),
ProxyPort_d=toreal(events.ProxyPort_d),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_ItemId=tostring(events._ItemId),
_TimeReceived=todatetime(now())
}

.alter table Barracuda_CL policy update @'[{"Source": "Barracuda_CLRaw", "Query": "Barracuda_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
