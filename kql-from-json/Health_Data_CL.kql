// ============================================================================
// Azure Data Explorer KQL Script for Health_Data_CL
// ============================================================================
// Generated: 2025-09-17 06:16:03
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table Health_Data_CLRaw (records:dynamic)

.alter-merge table Health_Data_CLRaw policy retention softdelete = 1d

.alter table Health_Data_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table Health_Data_CLRaw ingestion json mapping 'Health_Data_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table Health_Data_CL(
TimeGenerated:datetime,
TenantId:guid,
hostid_artifact_counts_vmachine_info_d:real,
hostid_artifact_counts_uagent_d:real,
hostid_artifact_counts_total_d:real,
hostid_artifact_counts_static_ip_d:real,
hostid_artifact_counts_src_port_d:real,
hostid_artifact_counts_split_d:real,
hostid_artifact_counts_sentinelone_d:real,
hostid_artifact_counts_rdns_d:real,
hostid_artifact_counts_proxy_ip_d:real,
hostid_artifact_counts_netbios_d:real,
hostid_artifact_counts_mdns_d:real,
hostid_artifact_counts_kerberos_user_d:real,
hostid_artifact_counts_kerberos_d:real,
hostid_artifact_counts_invalid_d:real,
hostid_artifact_counts_idle_start_d:real,
hostid_artifact_counts_windows_defender_d:real,
hostid_artifact_counts_idle_end_d:real,
hostid_artifact_counts_zpa_user_d:real,
hostid_ip_sometimes_percent_d:real,
cpu_updated_at_s:string,
cpu_idle_percent_d:real,
cpu_system_percent_d:real,
cpu_nice_percent_d:real,
cpu_user_percent_d:real,
power_updated_at_s:string,
power_error_s:string,
power_status_s:string,
memory_updated_at_s:string,
memory_total_bytes_d:real,
memory_used_bytes_d:real,
memory_free_bytes_d:real,
memory_usage_percent_d:real,
hostid_updated_at_s:string,
hostid_ip_never_percent_d:real,
hostid_ip_always_percent_d:real,
hostid_artifact_counts_generic_edr_d:real,
hostid_artifact_counts_fireeye_d:real,
hostid_artifact_counts_end_time_d:real,
system_uptime_s:string,
sensors_s:string,
trafficdrop_updated_at_s:string,
trafficdrop_sensors_s:string,
disk_updated_at_s:string,
disk_disk_utilization_usage_percent_d:real,
disk_disk_utilization_used_bytes_d:real,
disk_disk_utilization_free_bytes_d:real,
disk_disk_utilization_total_bytes_d:real,
network_s:string,
RawData:string,
Computer:string,
ManagementGroupName:string,
MG:string,
SourceSystem:string,
system_serial_number_s:string,
system_version_last_update_s:string,
system_version_model_s:string,
system_version_mode_s:string,
hostid_artifact_counts_dns_d:real,
hostid_artifact_counts_dhcp_d:real,
hostid_artifact_counts_cybereason_d:real,
hostid_artifact_counts_crowdstrike_d:real,
hostid_artifact_counts_cookie_d:real,
hostid_artifact_counts_clear_state_d:real,
hostid_artifact_counts_cb_cloud_d:real,
connectivity_sensors_s:string,
hostid_artifact_counts_carbon_black_d:real,
hostid_artifact_counts_TestEDR_d:real,
system_updated_at_s:string,
system_version_vectra_version_s:string,
system_version_vectra_instance_type_s:string,
system_version_vm_type_s:string,
system_version_gmt_t:datetime,
system_version_cloud_bridge_s:string,
hostid_artifact_counts_arsenic_d:real,
connectivity_updated_at_s:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table Health_Data_CL policy caching hot = 1d

.create-or-alter function Health_Data_CLExpand() {
Health_Data_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
hostid_artifact_counts_vmachine_info_d=toreal(events.hostid_artifact_counts_vmachine_info_d),
hostid_artifact_counts_uagent_d=toreal(events.hostid_artifact_counts_uagent_d),
hostid_artifact_counts_total_d=toreal(events.hostid_artifact_counts_total_d),
hostid_artifact_counts_static_ip_d=toreal(events.hostid_artifact_counts_static_ip_d),
hostid_artifact_counts_src_port_d=toreal(events.hostid_artifact_counts_src_port_d),
hostid_artifact_counts_split_d=toreal(events.hostid_artifact_counts_split_d),
hostid_artifact_counts_sentinelone_d=toreal(events.hostid_artifact_counts_sentinelone_d),
hostid_artifact_counts_rdns_d=toreal(events.hostid_artifact_counts_rdns_d),
hostid_artifact_counts_proxy_ip_d=toreal(events.hostid_artifact_counts_proxy_ip_d),
hostid_artifact_counts_netbios_d=toreal(events.hostid_artifact_counts_netbios_d),
hostid_artifact_counts_mdns_d=toreal(events.hostid_artifact_counts_mdns_d),
hostid_artifact_counts_kerberos_user_d=toreal(events.hostid_artifact_counts_kerberos_user_d),
hostid_artifact_counts_kerberos_d=toreal(events.hostid_artifact_counts_kerberos_d),
hostid_artifact_counts_invalid_d=toreal(events.hostid_artifact_counts_invalid_d),
hostid_artifact_counts_idle_start_d=toreal(events.hostid_artifact_counts_idle_start_d),
hostid_artifact_counts_windows_defender_d=toreal(events.hostid_artifact_counts_windows_defender_d),
hostid_artifact_counts_idle_end_d=toreal(events.hostid_artifact_counts_idle_end_d),
hostid_artifact_counts_zpa_user_d=toreal(events.hostid_artifact_counts_zpa_user_d),
hostid_ip_sometimes_percent_d=toreal(events.hostid_ip_sometimes_percent_d),
cpu_updated_at_s=tostring(events.cpu_updated_at_s),
cpu_idle_percent_d=toreal(events.cpu_idle_percent_d),
cpu_system_percent_d=toreal(events.cpu_system_percent_d),
cpu_nice_percent_d=toreal(events.cpu_nice_percent_d),
cpu_user_percent_d=toreal(events.cpu_user_percent_d),
power_updated_at_s=tostring(events.power_updated_at_s),
power_error_s=tostring(events.power_error_s),
power_status_s=tostring(events.power_status_s),
memory_updated_at_s=tostring(events.memory_updated_at_s),
memory_total_bytes_d=toreal(events.memory_total_bytes_d),
memory_used_bytes_d=toreal(events.memory_used_bytes_d),
memory_free_bytes_d=toreal(events.memory_free_bytes_d),
memory_usage_percent_d=toreal(events.memory_usage_percent_d),
hostid_updated_at_s=tostring(events.hostid_updated_at_s),
hostid_ip_never_percent_d=toreal(events.hostid_ip_never_percent_d),
hostid_ip_always_percent_d=toreal(events.hostid_ip_always_percent_d),
hostid_artifact_counts_generic_edr_d=toreal(events.hostid_artifact_counts_generic_edr_d),
hostid_artifact_counts_fireeye_d=toreal(events.hostid_artifact_counts_fireeye_d),
hostid_artifact_counts_end_time_d=toreal(events.hostid_artifact_counts_end_time_d),
system_uptime_s=tostring(events.system_uptime_s),
sensors_s=tostring(events.sensors_s),
trafficdrop_updated_at_s=tostring(events.trafficdrop_updated_at_s),
trafficdrop_sensors_s=tostring(events.trafficdrop_sensors_s),
disk_updated_at_s=tostring(events.disk_updated_at_s),
disk_disk_utilization_usage_percent_d=toreal(events.disk_disk_utilization_usage_percent_d),
disk_disk_utilization_used_bytes_d=toreal(events.disk_disk_utilization_used_bytes_d),
disk_disk_utilization_free_bytes_d=toreal(events.disk_disk_utilization_free_bytes_d),
disk_disk_utilization_total_bytes_d=toreal(events.disk_disk_utilization_total_bytes_d),
network_s=tostring(events.network_s),
RawData=tostring(events.RawData),
Computer=tostring(events.Computer),
ManagementGroupName=tostring(events.ManagementGroupName),
MG=tostring(events.MG),
SourceSystem=tostring(events.SourceSystem),
system_serial_number_s=tostring(events.system_serial_number_s),
system_version_last_update_s=tostring(events.system_version_last_update_s),
system_version_model_s=tostring(events.system_version_model_s),
system_version_mode_s=tostring(events.system_version_mode_s),
hostid_artifact_counts_dns_d=toreal(events.hostid_artifact_counts_dns_d),
hostid_artifact_counts_dhcp_d=toreal(events.hostid_artifact_counts_dhcp_d),
hostid_artifact_counts_cybereason_d=toreal(events.hostid_artifact_counts_cybereason_d),
hostid_artifact_counts_crowdstrike_d=toreal(events.hostid_artifact_counts_crowdstrike_d),
hostid_artifact_counts_cookie_d=toreal(events.hostid_artifact_counts_cookie_d),
hostid_artifact_counts_clear_state_d=toreal(events.hostid_artifact_counts_clear_state_d),
hostid_artifact_counts_cb_cloud_d=toreal(events.hostid_artifact_counts_cb_cloud_d),
connectivity_sensors_s=tostring(events.connectivity_sensors_s),
hostid_artifact_counts_carbon_black_d=toreal(events.hostid_artifact_counts_carbon_black_d),
hostid_artifact_counts_TestEDR_d=toreal(events.hostid_artifact_counts_TestEDR_d),
system_updated_at_s=tostring(events.system_updated_at_s),
system_version_vectra_version_s=tostring(events.system_version_vectra_version_s),
system_version_vectra_instance_type_s=tostring(events.system_version_vectra_instance_type_s),
system_version_vm_type_s=tostring(events.system_version_vm_type_s),
system_version_gmt_t=todatetime(events.system_version_gmt_t),
system_version_cloud_bridge_s=tostring(events.system_version_cloud_bridge_s),
hostid_artifact_counts_arsenic_d=toreal(events.hostid_artifact_counts_arsenic_d),
connectivity_updated_at_s=tostring(events.connectivity_updated_at_s),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table Health_Data_CL policy update @'[{"Source": "Health_Data_CLRaw", "Query": "Health_Data_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
