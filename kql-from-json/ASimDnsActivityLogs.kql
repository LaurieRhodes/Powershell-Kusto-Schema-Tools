// ============================================================================
// Azure Data Explorer KQL Script for ASimDnsActivityLogs
// ============================================================================
// Generated: 2025-09-13 20:17:11
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table ASimDnsActivityLogsRaw (records:dynamic)

.alter-merge table ASimDnsActivityLogsRaw policy retention softdelete = 1d

.alter table ASimDnsActivityLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table ASimDnsActivityLogsRaw ingestion json mapping 'ASimDnsActivityLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table ASimDnsActivityLogs(
TimeGenerated:datetime,
TenantId:guid,
EventProductVersion:string,
EventOwner:string,
DnsResponseIpRegion:string,
DnsResponseIpCity:string,
DvcZone:string,
DvcMacAddr:string,
DvcIdType:string,
DvcId:string,
DvcFQDN:string,
Dvc:string,
EventSchemaVersion:string,
EventReportUrl:string,
EventOriginalUid:string,
EventMessage:string,
EventEndTime:datetime,
EventStartTime:datetime,
ThreatLastReportedTime_d:datetime,
ThreatLastReportedTime:string,
ThreatFirstReportedTime_d:datetime,
ThreatFirstReportedTime:string,
ThreatIsActive:bool,
ThreatOriginalRiskLevel:int,
ThreatOriginalRiskLevel_s:string,
ThreatRiskLevel:int,
ThreatOriginalConfidence:string,
ThreatConfidence:int,
ThreatName:string,
ThreatCategory:string,
UrlCategory:string,
EventSeverity:string,
Src:string,
SrcHostname:string,
SrcDomain:string,
DnsFlagsTruncated:bool,
DnsFlagsRecursionAvailable:bool,
DnsFlagsCheckingDisabled:bool,
DnsFlags:string,
DvcAction:string,
DstDeviceType:string,
DstDvcIdType:string,
DstDvcScopeId:string,
DstDvcId:string,
DstFQDN:string,
DstDomainType:string,
DstDomain:string,
DstHostname:string,
DstPortNumber:int,
ThreatField:string,
Dst:string,
SrcProcessId:string,
SrcProcessName:string,
SrcOriginalUserType:string,
SrcUserType:string,
SrcUsernameType:string,
SrcUsername:string,
SrcUserIdType:string,
SrcUserId:string,
SrcRiskLevel:int,
SrcDeviceType:string,
SrcDvcIdType:string,
SrcDvcId:string,
SrcFQDN:string,
SrcDomainType:string,
SrcProcessGuid:string,
ThreatIpAddr:string,
ThreatId:string,
SrcUserSessionId:string,
DnsQueryType:int,
DnsQuery:string,
DstGeoLongitude:real,
DstGeoLatitude:real,
DstGeoCity:string,
DstGeoRegion:string,
DstGeoCountry:string,
DstIpAddr:string,
SrcGeoLongitude:real,
SrcGeoLatitude:real,
SrcGeoCity:string,
SrcGeoRegion:string,
SrcGeoCountry:string,
SrcPortNumber:int,
DnsQueryTypeName:string,
SrcIpAddr:string,
DvcOsVersion:string,
DvcOs:string,
DvcDomainType:string,
DvcDomain:string,
DvcHostname:string,
DvcIpAddr:string,
EventVendor:string,
EventProduct:string,
EventOriginalType:string,
EventResultDetails:string,
EventResult:string,
EventSubType:string,
EventType:string,
EventCount:int,
AdditionalFields:dynamic,
DnsFlagsZ:bool,
DnsResponseCode:int,
TransactionIdHex:string,
SrcUserScopeId:string,
SrcUserScope:string,
SrcOriginalRiskLevel:string,
SrcDvcScopeId:string,
SrcDvcScope:string,
SrcDescription:string,
DnsSessionId:string,
DnsFlagsRecursionDesired:bool,
DnsFlagsAuthoritative:bool,
DnsFlagsAuthenticated:bool,
DnsNetworkDuration:int,
DnsQueryClassName:string,
DnsQueryClass:int,
NetworkProtocol:string,
DnsResponseName:string,
DnsResponseIpLongitude:real,
DnsResponseIpCountry:string,
RuleNumber:int,
RuleName:string,
NetworkProtocolVersion:string,
EventOriginalSeverity:string,
DvcScopeId:string,
DvcScope:string,
DvcOriginalAction:string,
DvcInterface:string,
DvcDescription:string,
DstRiskLevel:int,
DstOriginalRiskLevel:string,
DstDvcScope:string,
DstDescription:string,
DnsResponseIpLatitude:real,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table ASimDnsActivityLogs policy caching hot = 1d

.create-or-alter function ASimDnsActivityLogsExpand() {
ASimDnsActivityLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
EventProductVersion=tostring(events.EventProductVersion),
EventOwner=tostring(events.EventOwner),
DnsResponseIpRegion=tostring(events.DnsResponseIpRegion),
DnsResponseIpCity=tostring(events.DnsResponseIpCity),
DvcZone=tostring(events.DvcZone),
DvcMacAddr=tostring(events.DvcMacAddr),
DvcIdType=tostring(events.DvcIdType),
DvcId=tostring(events.DvcId),
DvcFQDN=tostring(events.DvcFQDN),
Dvc=tostring(events.Dvc),
EventSchemaVersion=tostring(events.EventSchemaVersion),
EventReportUrl=tostring(events.EventReportUrl),
EventOriginalUid=tostring(events.EventOriginalUid),
EventMessage=tostring(events.EventMessage),
EventEndTime=todatetime(events.EventEndTime),
EventStartTime=todatetime(events.EventStartTime),
ThreatLastReportedTime_d=todatetime(events.ThreatLastReportedTime_d),
ThreatLastReportedTime=tostring(events.ThreatLastReportedTime),
ThreatFirstReportedTime_d=todatetime(events.ThreatFirstReportedTime_d),
ThreatFirstReportedTime=tostring(events.ThreatFirstReportedTime),
ThreatIsActive=tobool(events.ThreatIsActive),
ThreatOriginalRiskLevel=toint(events.ThreatOriginalRiskLevel),
ThreatOriginalRiskLevel_s=tostring(events.ThreatOriginalRiskLevel_s),
ThreatRiskLevel=toint(events.ThreatRiskLevel),
ThreatOriginalConfidence=tostring(events.ThreatOriginalConfidence),
ThreatConfidence=toint(events.ThreatConfidence),
ThreatName=tostring(events.ThreatName),
ThreatCategory=tostring(events.ThreatCategory),
UrlCategory=tostring(events.UrlCategory),
EventSeverity=tostring(events.EventSeverity),
Src=tostring(events.Src),
SrcHostname=tostring(events.SrcHostname),
SrcDomain=tostring(events.SrcDomain),
DnsFlagsTruncated=tobool(events.DnsFlagsTruncated),
DnsFlagsRecursionAvailable=tobool(events.DnsFlagsRecursionAvailable),
DnsFlagsCheckingDisabled=tobool(events.DnsFlagsCheckingDisabled),
DnsFlags=tostring(events.DnsFlags),
DvcAction=tostring(events.DvcAction),
DstDeviceType=tostring(events.DstDeviceType),
DstDvcIdType=tostring(events.DstDvcIdType),
DstDvcScopeId=tostring(events.DstDvcScopeId),
DstDvcId=tostring(events.DstDvcId),
DstFQDN=tostring(events.DstFQDN),
DstDomainType=tostring(events.DstDomainType),
DstDomain=tostring(events.DstDomain),
DstHostname=tostring(events.DstHostname),
DstPortNumber=toint(events.DstPortNumber),
ThreatField=tostring(events.ThreatField),
Dst=tostring(events.Dst),
SrcProcessId=tostring(events.SrcProcessId),
SrcProcessName=tostring(events.SrcProcessName),
SrcOriginalUserType=tostring(events.SrcOriginalUserType),
SrcUserType=tostring(events.SrcUserType),
SrcUsernameType=tostring(events.SrcUsernameType),
SrcUsername=tostring(events.SrcUsername),
SrcUserIdType=tostring(events.SrcUserIdType),
SrcUserId=tostring(events.SrcUserId),
SrcRiskLevel=toint(events.SrcRiskLevel),
SrcDeviceType=tostring(events.SrcDeviceType),
SrcDvcIdType=tostring(events.SrcDvcIdType),
SrcDvcId=tostring(events.SrcDvcId),
SrcFQDN=tostring(events.SrcFQDN),
SrcDomainType=tostring(events.SrcDomainType),
SrcProcessGuid=tostring(events.SrcProcessGuid),
ThreatIpAddr=tostring(events.ThreatIpAddr),
ThreatId=tostring(events.ThreatId),
SrcUserSessionId=tostring(events.SrcUserSessionId),
DnsQueryType=toint(events.DnsQueryType),
DnsQuery=tostring(events.DnsQuery),
DstGeoLongitude=toreal(events.DstGeoLongitude),
DstGeoLatitude=toreal(events.DstGeoLatitude),
DstGeoCity=tostring(events.DstGeoCity),
DstGeoRegion=tostring(events.DstGeoRegion),
DstGeoCountry=tostring(events.DstGeoCountry),
DstIpAddr=tostring(events.DstIpAddr),
SrcGeoLongitude=toreal(events.SrcGeoLongitude),
SrcGeoLatitude=toreal(events.SrcGeoLatitude),
SrcGeoCity=tostring(events.SrcGeoCity),
SrcGeoRegion=tostring(events.SrcGeoRegion),
SrcGeoCountry=tostring(events.SrcGeoCountry),
SrcPortNumber=toint(events.SrcPortNumber),
DnsQueryTypeName=tostring(events.DnsQueryTypeName),
SrcIpAddr=tostring(events.SrcIpAddr),
DvcOsVersion=tostring(events.DvcOsVersion),
DvcOs=tostring(events.DvcOs),
DvcDomainType=tostring(events.DvcDomainType),
DvcDomain=tostring(events.DvcDomain),
DvcHostname=tostring(events.DvcHostname),
DvcIpAddr=tostring(events.DvcIpAddr),
EventVendor=tostring(events.EventVendor),
EventProduct=tostring(events.EventProduct),
EventOriginalType=tostring(events.EventOriginalType),
EventResultDetails=tostring(events.EventResultDetails),
EventResult=tostring(events.EventResult),
EventSubType=tostring(events.EventSubType),
EventType=tostring(events.EventType),
EventCount=toint(events.EventCount),
AdditionalFields=todynamic(events.AdditionalFields),
DnsFlagsZ=tobool(events.DnsFlagsZ),
DnsResponseCode=toint(events.DnsResponseCode),
TransactionIdHex=tostring(events.TransactionIdHex),
SrcUserScopeId=tostring(events.SrcUserScopeId),
SrcUserScope=tostring(events.SrcUserScope),
SrcOriginalRiskLevel=tostring(events.SrcOriginalRiskLevel),
SrcDvcScopeId=tostring(events.SrcDvcScopeId),
SrcDvcScope=tostring(events.SrcDvcScope),
SrcDescription=tostring(events.SrcDescription),
DnsSessionId=tostring(events.DnsSessionId),
DnsFlagsRecursionDesired=tobool(events.DnsFlagsRecursionDesired),
DnsFlagsAuthoritative=tobool(events.DnsFlagsAuthoritative),
DnsFlagsAuthenticated=tobool(events.DnsFlagsAuthenticated),
DnsNetworkDuration=toint(events.DnsNetworkDuration),
DnsQueryClassName=tostring(events.DnsQueryClassName),
DnsQueryClass=toint(events.DnsQueryClass),
NetworkProtocol=tostring(events.NetworkProtocol),
DnsResponseName=tostring(events.DnsResponseName),
DnsResponseIpLongitude=toreal(events.DnsResponseIpLongitude),
DnsResponseIpCountry=tostring(events.DnsResponseIpCountry),
RuleNumber=toint(events.RuleNumber),
RuleName=tostring(events.RuleName),
NetworkProtocolVersion=tostring(events.NetworkProtocolVersion),
EventOriginalSeverity=tostring(events.EventOriginalSeverity),
DvcScopeId=tostring(events.DvcScopeId),
DvcScope=tostring(events.DvcScope),
DvcOriginalAction=tostring(events.DvcOriginalAction),
DvcInterface=tostring(events.DvcInterface),
DvcDescription=tostring(events.DvcDescription),
DstRiskLevel=toint(events.DstRiskLevel),
DstOriginalRiskLevel=tostring(events.DstOriginalRiskLevel),
DstDvcScope=tostring(events.DstDvcScope),
DstDescription=tostring(events.DstDescription),
DnsResponseIpLatitude=toreal(events.DnsResponseIpLatitude),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table ASimDnsActivityLogs policy update @'[{"Source": "ASimDnsActivityLogsRaw", "Query": "ASimDnsActivityLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
