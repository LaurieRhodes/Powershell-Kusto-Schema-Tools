// ============================================================================
// Azure Data Explorer KQL Script for CrowdStrike_Additional_Events_CL
// ============================================================================
// Generated: 2025-09-17 06:16:02
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table CrowdStrike_Additional_Events_CLRaw (records:dynamic)

.alter-merge table CrowdStrike_Additional_Events_CLRaw policy retention softdelete = 1d

.alter table CrowdStrike_Additional_Events_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table CrowdStrike_Additional_Events_CLRaw ingestion json mapping 'CrowdStrike_Additional_Events_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table CrowdStrike_Additional_Events_CL(
TimeGenerated:datetime,
event_simpleName:string,
QuarantinedFileName:string,
QuarantinedFileState:string,
CommandStdErr:string,
CommandStdOut:string,
CommandName:string,
CommandSequenceNumber:string,
CommandStartTimeStamp:real,
CommandEndTimeStamp:real,
CommandCode:string,
CommandSequenceTotal:int,
CommandCloudTimeStamp:real,
FileSystemOperationType:string,
AppArchitecture:string,
AppProvider:string,
AppSource:string,
AppType:string,
InstallDate:string,
AppPath:string,
AppProductId:string,
AppUpdateIds:string,
AppPathFlag:string,
UpdateFlag:string,
AppVersion:string,
AppName:string,
AppIdentificationData:string,
FsOperationClassificationFlags:string,
TargetSHA256HashData:string,
TargetCommandLineParameters:string,
DeviceProductId:string,
CommandCount:long,
CommandCountMax:long,
FirstCommand:string,
CommandHistory:string,
ExclusionType:string,
ImageTimeStamp:real,
DriverLoadFlags:string,
EtwProviders:string,
EtwProvidersEnabled:string,
EtwProvidersError:string,
AgentLoadFlags:string,
ProvisioningDuration:string,
FileEcpBitmask:string,
HandleCreateAuthenticationId:string,
FileAttributes:string,
ShareAccess:string,
FileIdentifier:string,
Information:string,
Options:string,
RegKeyChangeType:string,
RegConfigIndex:string,
RegConfigClass:string,
RegConfigFlags:string,
RegConfigValueType:string,
MemoryDescriptionFlags:string,
LocalPort:string,
ConnectionFlags:string,
ConnectionDirection:string,
ApcContextFileName:string,
TargetThreadId:string,
RawTargetProcessId:string,
UninstallPendingUpdateIds:string,
InstalledUpdateExtendedStatus:string,
InstalledUpdateIds:string,
LastPendingUpdateInstalledTime:string,
PendingUpdateIds:string,
LastUpdateInstalledTime:string,
SpotlightBatchType:string,
BatchTimestamp:real,
File:string,
Facility:string,
RegStringValue:string,
RegClassification:string,
RegOperationType:string,
RegClassificationFlags:string,
RegClassificationIndex:string,
RegType:string,
RegValueName:string,
RegObjectName:string,
HashAlgorithm:string,
SignerInfoCount:long,
SignInfoRequestFlags:string,
ToBeSignedHash:string,
RawTargetThreadId:string,
BluetoothDeviceType:string,
FirmwareAnalysisErrorLocation:string,
FirmwareAnalysisErrorReason:string,
ImageBaseName:string,
TargetAuthenticationId:string,
TargetIntegrityLevel:string,
DriverPreventionStatusFlags:string,
ProcessExecuteFlags:string,
ReflectivePeTimestamp:real,
MaxCpuUsage:string,
AvailableDiskSpace:string,
AverageCpuUsage:string,
AverageUsedRam:string,
UsedDiskSpace:string,
MaxUsedRam:string,
ThreadStartBytes:string,
TargetDirectoryName:string,
PtCompatibilityFlags:string,
PtStatusFlags:string,
DiskParentDeviceInstanceId:string,
VolumeDriveLetter:string,
VolumeMountPoint:string,
RemediationTriggerTimeStamp:real,
DownloadPort:string,
DownloadPath:string,
DownloadServer:string,
ApcFlags:string,
InjectedThreadFlag:string,
FirmwareAnalysisErrorSource:string,
ToBeSignedAlgorithm:string,
BluetoothDeviceAddressType:string,
BluetoothDeviceName:string,
SignInfoFlagSignHashMismatch:string,
SignatureDigestEncryptAlg:string,
SubjectDN:string,
UTCTimestamp:real,
SignInfoFlagUnknownError:string,
TpmType:string,
BaseTime:real,
TpmFirmwareVersion:string,
ChassisType:string,
ComputerName:string,
AgentLocalTime:real,
SubjectSerialNumber:string,
SideChannelMitigationFlags:string,
InterfaceDescriptorName:string,
InterfaceDescriptorNumEndpoints:string,
InterfaceDescriptorAlternateSetting:string,
InterfaceDescriptorNumber:string,
ConfigurationDescriptorMaxPowerDraw:string,
ConfigurationDescriptorNumInterfaces:string,
ConfigurationDescriptorName:string,
ConfigurationDescriptorAttributes:string,
ConfigurationDescriptorValue:string,
EndpointDescriptorAttributes:string,
EndpointDescriptorAddress:string,
DcTypeOrLocation:string,
IssuerDN:string,
SubjectCN:string,
ExternalApiType:string,
RegBinaryValue:string,
RegNumericValue:string,
BillingType:string,
ProcessId:string,
MACAddress:string,
NetworkAccesses:string,
SHA256String:string,
Severity:string,
SeverityName:string,
MD5String:string,
EventUUID:string,
FilePath:string,
LocalIP:string,
FileName:string,
PatternDispositionFlags:string,
DnsRequests:string,
ProcessEndTime:real,
ProcessStartTime:real,
SHA1String:string,
OriginSourceIpAddress:string,
HostnameField:string,
StartTimestamp:real,
event_type:string,
product_type_desc:string,
SignInfoFlagSelfSigned:string,
EndpointDescriptorMaxPacketSize:string,
EndpointDescriptorInterval:string,
SourceAccountBadPasswordTime:string,
SourceAccountBadPasswordCount:long,
DeviceVersion:string,
DcPolicyFlags:string,
DeviceProtocol:string,
ParentHubPort:string,
DeviceProduct:string,
ParentHubInstanceId:string,
DeviceTimeStamp:real,
AggregationLatestTimestamp:real,
SourceAccountObjectGuid:string,
NtlmAvFlags:string,
TargetAccountType:string,
SourceAccountDomain:string,
AggregationWindowTimestamp:real,
SourceAccountObjectSid:string,
TargetAccountObjectSid:string,
AggregationEarliestTimestamp:real,
SourceAccountType:string,
ActiveDirectoryAuthenticationMethod:string,
SourceEndpointAccountObjectSid:string,
SourceAccountUserPrincipal:string,
TargetAccountObjectGuid:string,
SourceEndpointNetworkType:string,
AmsiRegistrationState:string,
AmsiStatusCode:string,
DeviceVendorId:string,
DeviceInstanceId:string,
BluetoothDeviceAddress:string,
DeviceUserSid:string,
SocketType:string,
AuthenticationFailureMsErrorCode:string,
AsepValueType:string,
AsepFlags:string,
AmsDeviceType:string,
MemoryScanFlags:string,
FileFormatString:string,
HostUrl:string,
ModuleCharacteristics:string,
SessionProcessId:string,
ObjectTypeEtw:string,
StackLimit:string,
LdapSecurityType:string,
VnodeModificationType:string,
AmsScanSubtypeId:string,
AmsStatus:string,
AmsScanTypeId:string,
DomainName:string,
DcSensorInterfaceType:string,
DcPropertyIdInterfaceType:string,
DesiredKerberosEncryptionTypes:string,
DelegatorAccountSamAccountName:string,
DelegatorAccountObjectGuid:string,
DelegatorAccountObjectSid:string,
KerberosRequestTicketValidityPeriod:string,
SourceAccountSamAccountName:string,
DeviceUserAuthenticationId:string,
AuthenticodeHashData:string,
SignatureState:string,
SHA1HashData:string,
ContentSHA256HashData:string,
OriginalContentLength:string,
RawThreadId:string,
SourceThreadId:string,
EtwRawThreadId:string,
SourceProcessId:string,
EventMax:string,
RpcNestingLevel:string,
RpcOpNum:string,
RpcClientThreadId:string,
InterfaceVersion:string,
ScriptContentName:string,
RpcClientProcessId:string,
TokenType:string,
TargetProcessId:string,
ErrorCode:string,
ServiceDisplayName:string,
AntiTamperStateFlag:string,
WmiNamespaceName:string,
WmiQuery:string,
SourceFileName:string,
EventOrigin:string,
BoundingLimitDuration:string,
TotalCount:long,
InterfaceGuid:string,
OciContainerId:string,
HostProcessType:string,
ParentCommandLine:string,
FileSigningTime:real,
RegCreateDisposition:string,
ExtendedKeyUsages:string,
RegRootObjectName:string,
RegKeyName:string,
RegPostObjectName:string,
PublicKeys:string,
KeyObject:string,
TaskExecArguments:string,
TaskAuthor:string,
TaskXml:string,
TaskExecCommand:string,
TaskName:string,
ScreenshotType:string,
OriginalFilename:string,
ScriptContentSource:string,
ScriptControlErrorCode:string,
KernelTime:real,
CallStackModuleNames:string,
ExecutableBytes:string,
ScriptContentBytes:string,
SuspectStackFlag:string,
GrandparentCommandLine:string,
GrandparentImageFileName:string,
ParentImageFileName:string,
ErrorStatus:string,
UmppaInjectionType:string,
RawProcessId:string,
WmiProviderType:string,
ContextThreadId:string,
UserCanonical:string,
UserName:string,
RemoteAccount:string,
LogonDomain:string,
LogonTime:real,
UserIsAdmin:string,
UserPrincipal:string,
LogonType:string,
TamperFilterFlags:string,
ContextTimeStamp:real,
SystemUptimeSeconds:long,
cid:string,
EffectiveTransmissionClass:string,
CrowdStrikeId:string,
Name:string,
Entitlements:string,
ConfigBuild:string,
BoundingLimitCount:long,
ContextProcessId:string,
ConfigStateHash:string,
event_platform:string,
aid:string,
aip:string,
timestamp:long,
UserSid:string,
DesiredAccess:string,
UserFlags:string,
LogonId:string,
EtwEventCount:long,
CloudErrorCode:string,
ErrorText:string,
Status:string,
TargetFileName:string,
SHA256HashData:string,
OriginalUserSid:string,
ParentAuthenticationId:string,
OriginalParentAuthenticationId:string,
ImageFileName:string,
EtwRawProcessId:string,
WmiFilterType:string,
WmiConsumerType:string,
ClientComputerName:string,
CommandLine:string,
AuthenticationIdMac:string,
AuthenticationUuid:string,
UID:string,
AuthenticationUuidAsString:string,
LoginSessionId:string,
UserLogonFlags:string,
PasswordLastSet:string,
AuthenticationId:string,
AuthenticationPackage:string,
SessionId:string,
LogonServer:string,
RegCreateOptions:string,
SignInfoFlags:string,
Certificate:string,
PhysicalAddress:string,
ConnectionType:string,
PreferredLifetime:string,
IpEntryFlags:string,
AccessType:string,
MediaType:string,
InterfaceType:string,
PermanentPhysicalAddress:string,
InterfaceFlags:string,
InterfaceIndex:string,
InterfaceAlias:string,
NetworkGuid:string,
MaxReassemblySize:string,
ValidLifetime:string,
LocalAddressIP4:string,
DeviceId:string,
PrimaryModule:string,
QuarantinedFileExtendedState:string,
IsOnRemovableDisk:string,
RemoteAddressIP4:string,
VolumeEncryptionStatus:string,
VolumeRealDeviceName:string,
VolumeSnapshotTimeStamp:real,
VolumeFileSystemDriver:string,
VolumeIsEncrypted:string,
DirectionType:string,
VolumeSnapshotName:string,
IfType:string,
CreationTimeStamp:real,
SignatureErrorState:string,
OperationFlags:string,
MajorFunction:string,
IrpFlags:string,
FileObject:string,
MinorFunction:string,
EtwTargetRawProcessId:string,
ProcessCount:long,
SuppressType:string,
Timeout:string,
MeasurementType:string,
FirmwareType:string,
ImageAnalysisRequestTimestamp:real,
FirmwareSize:string,
AssemblyFlags:string,
DotnetModuleFlags:string,
ModuleNativePath:string,
DefaultGatewayIP6:string,
LocalAddressIP6:string,
TotalDiskSpace:int,
PhysicalMediumType:string,
NetworkInterfaceGuid:string,
TunnelType:string,
PhysicalAddressLength:string,
BaseReachableTime:long,
RetransmitTime:long,
RpcOpClassification:string,
VolumeFileSystemDevice:string,
CloudRequestId:string,
OSVersionString:string,
OSVersionFileData:string,
BuildNumber:string,
CheckedBuild:string,
MinorVersion:string,
ProductType:string,
MajorVersion:string,
BuildType:string,
PlatformId:string,
SubBuildNumber:string,
ProductName:string,
PointerSize:string,
ProductSku:string,
FileVersion:string,
FixedFileVersion:string,
CompanyName:string,
VersionInfo:string,
OciContainersStartedCount:long,
OciContainersStoppedCount:long,
Size:string,
TargetAddress:string,
Object1Type:string,
FileSubType:string,
PatternHandlingErrorType:string,
OdsActionType:string,
OSVersionFileName:string,
VolumeSessionUUID:string,
IntegrityLevel:string,
Protocol:string,
AttemptNumber:string,
LfoUploadFlags:string,
PhysicalCoreCount:long,
NamedPipeOperationType:string,
MD5HashData:string,
ProcessIntegrityLevel:string,
ServiceGroup:string,
ServiceErrorControl:string,
ServiceFailureActions:string,
ServiceType:string,
ServiceStart:string,
ServiceImagePath:string,
ServiceSecurity:string,
ServiceDescription:string,
ServiceObjectName:string,
TreeId:string,
Length:string,
VolumeFileSystemType:string,
PatternDisposition:string,
VolumeSectorSize:string,
VolumeDeviceCharacteristics:string,
ByteOffset:string,
VolumeDeviceObjectFlags:string,
VolumeName:string,
VolumeDeviceType:string,
RemotePort:string,
AdditionalFields:dynamic,
_TimeReceived:datetime)

.alter table CrowdStrike_Additional_Events_CL policy caching hot = 1d

.create-or-alter function CrowdStrike_Additional_Events_CLExpand() {
CrowdStrike_Additional_Events_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
event_simpleName=tostring(events.event_simpleName),
QuarantinedFileName=tostring(events.QuarantinedFileName),
QuarantinedFileState=tostring(events.QuarantinedFileState),
CommandStdErr=tostring(events.CommandStdErr),
CommandStdOut=tostring(events.CommandStdOut),
CommandName=tostring(events.CommandName),
CommandSequenceNumber=tostring(events.CommandSequenceNumber),
CommandStartTimeStamp=toreal(events.CommandStartTimeStamp),
CommandEndTimeStamp=toreal(events.CommandEndTimeStamp),
CommandCode=tostring(events.CommandCode),
CommandSequenceTotal=toint(events.CommandSequenceTotal),
CommandCloudTimeStamp=toreal(events.CommandCloudTimeStamp),
FileSystemOperationType=tostring(events.FileSystemOperationType),
AppArchitecture=tostring(events.AppArchitecture),
AppProvider=tostring(events.AppProvider),
AppSource=tostring(events.AppSource),
AppType=tostring(events.AppType),
InstallDate=tostring(events.InstallDate),
AppPath=tostring(events.AppPath),
AppProductId=tostring(events.AppProductId),
AppUpdateIds=tostring(events.AppUpdateIds),
AppPathFlag=tostring(events.AppPathFlag),
UpdateFlag=tostring(events.UpdateFlag),
AppVersion=tostring(events.AppVersion),
AppName=tostring(events.AppName),
AppIdentificationData=tostring(events.AppIdentificationData),
FsOperationClassificationFlags=tostring(events.FsOperationClassificationFlags),
TargetSHA256HashData=tostring(events.TargetSHA256HashData),
TargetCommandLineParameters=tostring(events.TargetCommandLineParameters),
DeviceProductId=tostring(events.DeviceProductId),
CommandCount=tolong(events.CommandCount),
CommandCountMax=tolong(events.CommandCountMax),
FirstCommand=tostring(events.FirstCommand),
CommandHistory=tostring(events.CommandHistory),
ExclusionType=tostring(events.ExclusionType),
ImageTimeStamp=toreal(events.ImageTimeStamp),
DriverLoadFlags=tostring(events.DriverLoadFlags),
EtwProviders=tostring(events.EtwProviders),
EtwProvidersEnabled=tostring(events.EtwProvidersEnabled),
EtwProvidersError=tostring(events.EtwProvidersError),
AgentLoadFlags=tostring(events.AgentLoadFlags),
ProvisioningDuration=tostring(events.ProvisioningDuration),
FileEcpBitmask=tostring(events.FileEcpBitmask),
HandleCreateAuthenticationId=tostring(events.HandleCreateAuthenticationId),
FileAttributes=tostring(events.FileAttributes),
ShareAccess=tostring(events.ShareAccess),
FileIdentifier=tostring(events.FileIdentifier),
Information=tostring(events.Information),
Options=tostring(events.Options),
RegKeyChangeType=tostring(events.RegKeyChangeType),
RegConfigIndex=tostring(events.RegConfigIndex),
RegConfigClass=tostring(events.RegConfigClass),
RegConfigFlags=tostring(events.RegConfigFlags),
RegConfigValueType=tostring(events.RegConfigValueType),
MemoryDescriptionFlags=tostring(events.MemoryDescriptionFlags),
LocalPort=tostring(events.LocalPort),
ConnectionFlags=tostring(events.ConnectionFlags),
ConnectionDirection=tostring(events.ConnectionDirection),
ApcContextFileName=tostring(events.ApcContextFileName),
TargetThreadId=tostring(events.TargetThreadId),
RawTargetProcessId=tostring(events.RawTargetProcessId),
UninstallPendingUpdateIds=tostring(events.UninstallPendingUpdateIds),
InstalledUpdateExtendedStatus=tostring(events.InstalledUpdateExtendedStatus),
InstalledUpdateIds=tostring(events.InstalledUpdateIds),
LastPendingUpdateInstalledTime=tostring(events.LastPendingUpdateInstalledTime),
PendingUpdateIds=tostring(events.PendingUpdateIds),
LastUpdateInstalledTime=tostring(events.LastUpdateInstalledTime),
SpotlightBatchType=tostring(events.SpotlightBatchType),
BatchTimestamp=toreal(events.BatchTimestamp),
File=tostring(events.File),
Facility=tostring(events.Facility),
RegStringValue=tostring(events.RegStringValue),
RegClassification=tostring(events.RegClassification),
RegOperationType=tostring(events.RegOperationType),
RegClassificationFlags=tostring(events.RegClassificationFlags),
RegClassificationIndex=tostring(events.RegClassificationIndex),
RegType=tostring(events.RegType),
RegValueName=tostring(events.RegValueName),
RegObjectName=tostring(events.RegObjectName),
HashAlgorithm=tostring(events.HashAlgorithm),
SignerInfoCount=tolong(events.SignerInfoCount),
SignInfoRequestFlags=tostring(events.SignInfoRequestFlags),
ToBeSignedHash=tostring(events.ToBeSignedHash),
RawTargetThreadId=tostring(events.RawTargetThreadId),
BluetoothDeviceType=tostring(events.BluetoothDeviceType),
FirmwareAnalysisErrorLocation=tostring(events.FirmwareAnalysisErrorLocation),
FirmwareAnalysisErrorReason=tostring(events.FirmwareAnalysisErrorReason),
ImageBaseName=tostring(events.ImageBaseName),
TargetAuthenticationId=tostring(events.TargetAuthenticationId),
TargetIntegrityLevel=tostring(events.TargetIntegrityLevel),
DriverPreventionStatusFlags=tostring(events.DriverPreventionStatusFlags),
ProcessExecuteFlags=tostring(events.ProcessExecuteFlags),
ReflectivePeTimestamp=toreal(events.ReflectivePeTimestamp),
MaxCpuUsage=tostring(events.MaxCpuUsage),
AvailableDiskSpace=tostring(events.AvailableDiskSpace),
AverageCpuUsage=tostring(events.AverageCpuUsage),
AverageUsedRam=tostring(events.AverageUsedRam),
UsedDiskSpace=tostring(events.UsedDiskSpace),
MaxUsedRam=tostring(events.MaxUsedRam),
ThreadStartBytes=tostring(events.ThreadStartBytes),
TargetDirectoryName=tostring(events.TargetDirectoryName),
PtCompatibilityFlags=tostring(events.PtCompatibilityFlags),
PtStatusFlags=tostring(events.PtStatusFlags),
DiskParentDeviceInstanceId=tostring(events.DiskParentDeviceInstanceId),
VolumeDriveLetter=tostring(events.VolumeDriveLetter),
VolumeMountPoint=tostring(events.VolumeMountPoint),
RemediationTriggerTimeStamp=toreal(events.RemediationTriggerTimeStamp),
DownloadPort=tostring(events.DownloadPort),
DownloadPath=tostring(events.DownloadPath),
DownloadServer=tostring(events.DownloadServer),
ApcFlags=tostring(events.ApcFlags),
InjectedThreadFlag=tostring(events.InjectedThreadFlag),
FirmwareAnalysisErrorSource=tostring(events.FirmwareAnalysisErrorSource),
ToBeSignedAlgorithm=tostring(events.ToBeSignedAlgorithm),
BluetoothDeviceAddressType=tostring(events.BluetoothDeviceAddressType),
BluetoothDeviceName=tostring(events.BluetoothDeviceName),
SignInfoFlagSignHashMismatch=tostring(events.SignInfoFlagSignHashMismatch),
SignatureDigestEncryptAlg=tostring(events.SignatureDigestEncryptAlg),
SubjectDN=tostring(events.SubjectDN),
UTCTimestamp=toreal(events.UTCTimestamp),
SignInfoFlagUnknownError=tostring(events.SignInfoFlagUnknownError),
TpmType=tostring(events.TpmType),
BaseTime=toreal(events.BaseTime),
TpmFirmwareVersion=tostring(events.TpmFirmwareVersion),
ChassisType=tostring(events.ChassisType),
ComputerName=tostring(events.ComputerName),
AgentLocalTime=toreal(events.AgentLocalTime),
SubjectSerialNumber=tostring(events.SubjectSerialNumber),
SideChannelMitigationFlags=tostring(events.SideChannelMitigationFlags),
InterfaceDescriptorName=tostring(events.InterfaceDescriptorName),
InterfaceDescriptorNumEndpoints=tostring(events.InterfaceDescriptorNumEndpoints),
InterfaceDescriptorAlternateSetting=tostring(events.InterfaceDescriptorAlternateSetting),
InterfaceDescriptorNumber=tostring(events.InterfaceDescriptorNumber),
ConfigurationDescriptorMaxPowerDraw=tostring(events.ConfigurationDescriptorMaxPowerDraw),
ConfigurationDescriptorNumInterfaces=tostring(events.ConfigurationDescriptorNumInterfaces),
ConfigurationDescriptorName=tostring(events.ConfigurationDescriptorName),
ConfigurationDescriptorAttributes=tostring(events.ConfigurationDescriptorAttributes),
ConfigurationDescriptorValue=tostring(events.ConfigurationDescriptorValue),
EndpointDescriptorAttributes=tostring(events.EndpointDescriptorAttributes),
EndpointDescriptorAddress=tostring(events.EndpointDescriptorAddress),
DcTypeOrLocation=tostring(events.DcTypeOrLocation),
IssuerDN=tostring(events.IssuerDN),
SubjectCN=tostring(events.SubjectCN),
ExternalApiType=tostring(events.ExternalApiType),
RegBinaryValue=tostring(events.RegBinaryValue),
RegNumericValue=tostring(events.RegNumericValue),
BillingType=tostring(events.BillingType),
ProcessId=tostring(events.ProcessId),
MACAddress=tostring(events.MACAddress),
NetworkAccesses=tostring(events.NetworkAccesses),
SHA256String=tostring(events.SHA256String),
Severity=tostring(events.Severity),
SeverityName=tostring(events.SeverityName),
MD5String=tostring(events.MD5String),
EventUUID=tostring(events.EventUUID),
FilePath=tostring(events.FilePath),
LocalIP=tostring(events.LocalIP),
FileName=tostring(events.FileName),
PatternDispositionFlags=tostring(events.PatternDispositionFlags),
DnsRequests=tostring(events.DnsRequests),
ProcessEndTime=toreal(events.ProcessEndTime),
ProcessStartTime=toreal(events.ProcessStartTime),
SHA1String=tostring(events.SHA1String),
OriginSourceIpAddress=tostring(events.OriginSourceIpAddress),
HostnameField=tostring(events.HostnameField),
StartTimestamp=toreal(events.StartTimestamp),
event_type=tostring(events.event_type),
product_type_desc=tostring(events.product_type_desc),
SignInfoFlagSelfSigned=tostring(events.SignInfoFlagSelfSigned),
EndpointDescriptorMaxPacketSize=tostring(events.EndpointDescriptorMaxPacketSize),
EndpointDescriptorInterval=tostring(events.EndpointDescriptorInterval),
SourceAccountBadPasswordTime=tostring(events.SourceAccountBadPasswordTime),
SourceAccountBadPasswordCount=tolong(events.SourceAccountBadPasswordCount),
DeviceVersion=tostring(events.DeviceVersion),
DcPolicyFlags=tostring(events.DcPolicyFlags),
DeviceProtocol=tostring(events.DeviceProtocol),
ParentHubPort=tostring(events.ParentHubPort),
DeviceProduct=tostring(events.DeviceProduct),
ParentHubInstanceId=tostring(events.ParentHubInstanceId),
DeviceTimeStamp=toreal(events.DeviceTimeStamp),
AggregationLatestTimestamp=toreal(events.AggregationLatestTimestamp),
SourceAccountObjectGuid=tostring(events.SourceAccountObjectGuid),
NtlmAvFlags=tostring(events.NtlmAvFlags),
TargetAccountType=tostring(events.TargetAccountType),
SourceAccountDomain=tostring(events.SourceAccountDomain),
AggregationWindowTimestamp=toreal(events.AggregationWindowTimestamp),
SourceAccountObjectSid=tostring(events.SourceAccountObjectSid),
TargetAccountObjectSid=tostring(events.TargetAccountObjectSid),
AggregationEarliestTimestamp=toreal(events.AggregationEarliestTimestamp),
SourceAccountType=tostring(events.SourceAccountType),
ActiveDirectoryAuthenticationMethod=tostring(events.ActiveDirectoryAuthenticationMethod),
SourceEndpointAccountObjectSid=tostring(events.SourceEndpointAccountObjectSid),
SourceAccountUserPrincipal=tostring(events.SourceAccountUserPrincipal),
TargetAccountObjectGuid=tostring(events.TargetAccountObjectGuid),
SourceEndpointNetworkType=tostring(events.SourceEndpointNetworkType),
AmsiRegistrationState=tostring(events.AmsiRegistrationState),
AmsiStatusCode=tostring(events.AmsiStatusCode),
DeviceVendorId=tostring(events.DeviceVendorId),
DeviceInstanceId=tostring(events.DeviceInstanceId),
BluetoothDeviceAddress=tostring(events.BluetoothDeviceAddress),
DeviceUserSid=tostring(events.DeviceUserSid),
SocketType=tostring(events.SocketType),
AuthenticationFailureMsErrorCode=tostring(events.AuthenticationFailureMsErrorCode),
AsepValueType=tostring(events.AsepValueType),
AsepFlags=tostring(events.AsepFlags),
AmsDeviceType=tostring(events.AmsDeviceType),
MemoryScanFlags=tostring(events.MemoryScanFlags),
FileFormatString=tostring(events.FileFormatString),
HostUrl=tostring(events.HostUrl),
ModuleCharacteristics=tostring(events.ModuleCharacteristics),
SessionProcessId=tostring(events.SessionProcessId),
ObjectTypeEtw=tostring(events.ObjectTypeEtw),
StackLimit=tostring(events.StackLimit),
LdapSecurityType=tostring(events.LdapSecurityType),
VnodeModificationType=tostring(events.VnodeModificationType),
AmsScanSubtypeId=tostring(events.AmsScanSubtypeId),
AmsStatus=tostring(events.AmsStatus),
AmsScanTypeId=tostring(events.AmsScanTypeId),
DomainName=tostring(events.DomainName),
DcSensorInterfaceType=tostring(events.DcSensorInterfaceType),
DcPropertyIdInterfaceType=tostring(events.DcPropertyIdInterfaceType),
DesiredKerberosEncryptionTypes=tostring(events.DesiredKerberosEncryptionTypes),
DelegatorAccountSamAccountName=tostring(events.DelegatorAccountSamAccountName),
DelegatorAccountObjectGuid=tostring(events.DelegatorAccountObjectGuid),
DelegatorAccountObjectSid=tostring(events.DelegatorAccountObjectSid),
KerberosRequestTicketValidityPeriod=tostring(events.KerberosRequestTicketValidityPeriod),
SourceAccountSamAccountName=tostring(events.SourceAccountSamAccountName),
DeviceUserAuthenticationId=tostring(events.DeviceUserAuthenticationId),
AuthenticodeHashData=tostring(events.AuthenticodeHashData),
SignatureState=tostring(events.SignatureState),
SHA1HashData=tostring(events.SHA1HashData),
ContentSHA256HashData=tostring(events.ContentSHA256HashData),
OriginalContentLength=tostring(events.OriginalContentLength),
RawThreadId=tostring(events.RawThreadId),
SourceThreadId=tostring(events.SourceThreadId),
EtwRawThreadId=tostring(events.EtwRawThreadId),
SourceProcessId=tostring(events.SourceProcessId),
EventMax=tostring(events.EventMax),
RpcNestingLevel=tostring(events.RpcNestingLevel),
RpcOpNum=tostring(events.RpcOpNum),
RpcClientThreadId=tostring(events.RpcClientThreadId),
InterfaceVersion=tostring(events.InterfaceVersion),
ScriptContentName=tostring(events.ScriptContentName),
RpcClientProcessId=tostring(events.RpcClientProcessId),
TokenType=tostring(events.TokenType),
TargetProcessId=tostring(events.TargetProcessId),
ErrorCode=tostring(events.ErrorCode),
ServiceDisplayName=tostring(events.ServiceDisplayName),
AntiTamperStateFlag=tostring(events.AntiTamperStateFlag),
WmiNamespaceName=tostring(events.WmiNamespaceName),
WmiQuery=tostring(events.WmiQuery),
SourceFileName=tostring(events.SourceFileName),
EventOrigin=tostring(events.EventOrigin),
BoundingLimitDuration=tostring(events.BoundingLimitDuration),
TotalCount=tolong(events.TotalCount),
InterfaceGuid=tostring(events.InterfaceGuid),
OciContainerId=tostring(events.OciContainerId),
HostProcessType=tostring(events.HostProcessType),
ParentCommandLine=tostring(events.ParentCommandLine),
FileSigningTime=toreal(events.FileSigningTime),
RegCreateDisposition=tostring(events.RegCreateDisposition),
ExtendedKeyUsages=tostring(events.ExtendedKeyUsages),
RegRootObjectName=tostring(events.RegRootObjectName),
RegKeyName=tostring(events.RegKeyName),
RegPostObjectName=tostring(events.RegPostObjectName),
PublicKeys=tostring(events.PublicKeys),
KeyObject=tostring(events.KeyObject),
TaskExecArguments=tostring(events.TaskExecArguments),
TaskAuthor=tostring(events.TaskAuthor),
TaskXml=tostring(events.TaskXml),
TaskExecCommand=tostring(events.TaskExecCommand),
TaskName=tostring(events.TaskName),
ScreenshotType=tostring(events.ScreenshotType),
OriginalFilename=tostring(events.OriginalFilename),
ScriptContentSource=tostring(events.ScriptContentSource),
ScriptControlErrorCode=tostring(events.ScriptControlErrorCode),
KernelTime=toreal(events.KernelTime),
CallStackModuleNames=tostring(events.CallStackModuleNames),
ExecutableBytes=tostring(events.ExecutableBytes),
ScriptContentBytes=tostring(events.ScriptContentBytes),
SuspectStackFlag=tostring(events.SuspectStackFlag),
GrandparentCommandLine=tostring(events.GrandparentCommandLine),
GrandparentImageFileName=tostring(events.GrandparentImageFileName),
ParentImageFileName=tostring(events.ParentImageFileName),
ErrorStatus=tostring(events.ErrorStatus),
UmppaInjectionType=tostring(events.UmppaInjectionType),
RawProcessId=tostring(events.RawProcessId),
WmiProviderType=tostring(events.WmiProviderType),
ContextThreadId=tostring(events.ContextThreadId),
UserCanonical=tostring(events.UserCanonical),
UserName=tostring(events.UserName),
RemoteAccount=tostring(events.RemoteAccount),
LogonDomain=tostring(events.LogonDomain),
LogonTime=toreal(events.LogonTime),
UserIsAdmin=tostring(events.UserIsAdmin),
UserPrincipal=tostring(events.UserPrincipal),
LogonType=tostring(events.LogonType),
TamperFilterFlags=tostring(events.TamperFilterFlags),
ContextTimeStamp=toreal(events.ContextTimeStamp),
SystemUptimeSeconds=tolong(events.SystemUptimeSeconds),
cid=tostring(events.cid),
EffectiveTransmissionClass=tostring(events.EffectiveTransmissionClass),
CrowdStrikeId=tostring(events.CrowdStrikeId),
Name=tostring(events.Name),
Entitlements=tostring(events.Entitlements),
ConfigBuild=tostring(events.ConfigBuild),
BoundingLimitCount=tolong(events.BoundingLimitCount),
ContextProcessId=tostring(events.ContextProcessId),
ConfigStateHash=tostring(events.ConfigStateHash),
event_platform=tostring(events.event_platform),
aid=tostring(events.aid),
aip=tostring(events.aip),
timestamp=tolong(events.timestamp),
UserSid=tostring(events.UserSid),
DesiredAccess=tostring(events.DesiredAccess),
UserFlags=tostring(events.UserFlags),
LogonId=tostring(events.LogonId),
EtwEventCount=tolong(events.EtwEventCount),
CloudErrorCode=tostring(events.CloudErrorCode),
ErrorText=tostring(events.ErrorText),
Status=tostring(events.Status),
TargetFileName=tostring(events.TargetFileName),
SHA256HashData=tostring(events.SHA256HashData),
OriginalUserSid=tostring(events.OriginalUserSid),
ParentAuthenticationId=tostring(events.ParentAuthenticationId),
OriginalParentAuthenticationId=tostring(events.OriginalParentAuthenticationId),
ImageFileName=tostring(events.ImageFileName),
EtwRawProcessId=tostring(events.EtwRawProcessId),
WmiFilterType=tostring(events.WmiFilterType),
WmiConsumerType=tostring(events.WmiConsumerType),
ClientComputerName=tostring(events.ClientComputerName),
CommandLine=tostring(events.CommandLine),
AuthenticationIdMac=tostring(events.AuthenticationIdMac),
AuthenticationUuid=tostring(events.AuthenticationUuid),
UID=tostring(events.UID),
AuthenticationUuidAsString=tostring(events.AuthenticationUuidAsString),
LoginSessionId=tostring(events.LoginSessionId),
UserLogonFlags=tostring(events.UserLogonFlags),
PasswordLastSet=tostring(events.PasswordLastSet),
AuthenticationId=tostring(events.AuthenticationId),
AuthenticationPackage=tostring(events.AuthenticationPackage),
SessionId=tostring(events.SessionId),
LogonServer=tostring(events.LogonServer),
RegCreateOptions=tostring(events.RegCreateOptions),
SignInfoFlags=tostring(events.SignInfoFlags),
Certificate=tostring(events.Certificate),
PhysicalAddress=tostring(events.PhysicalAddress),
ConnectionType=tostring(events.ConnectionType),
PreferredLifetime=tostring(events.PreferredLifetime),
IpEntryFlags=tostring(events.IpEntryFlags),
AccessType=tostring(events.AccessType),
MediaType=tostring(events.MediaType),
InterfaceType=tostring(events.InterfaceType),
PermanentPhysicalAddress=tostring(events.PermanentPhysicalAddress),
InterfaceFlags=tostring(events.InterfaceFlags),
InterfaceIndex=tostring(events.InterfaceIndex),
InterfaceAlias=tostring(events.InterfaceAlias),
NetworkGuid=tostring(events.NetworkGuid),
MaxReassemblySize=tostring(events.MaxReassemblySize),
ValidLifetime=tostring(events.ValidLifetime),
LocalAddressIP4=tostring(events.LocalAddressIP4),
DeviceId=tostring(events.DeviceId),
PrimaryModule=tostring(events.PrimaryModule),
QuarantinedFileExtendedState=tostring(events.QuarantinedFileExtendedState),
IsOnRemovableDisk=tostring(events.IsOnRemovableDisk),
RemoteAddressIP4=tostring(events.RemoteAddressIP4),
VolumeEncryptionStatus=tostring(events.VolumeEncryptionStatus),
VolumeRealDeviceName=tostring(events.VolumeRealDeviceName),
VolumeSnapshotTimeStamp=toreal(events.VolumeSnapshotTimeStamp),
VolumeFileSystemDriver=tostring(events.VolumeFileSystemDriver),
VolumeIsEncrypted=tostring(events.VolumeIsEncrypted),
DirectionType=tostring(events.DirectionType),
VolumeSnapshotName=tostring(events.VolumeSnapshotName),
IfType=tostring(events.IfType),
CreationTimeStamp=toreal(events.CreationTimeStamp),
SignatureErrorState=tostring(events.SignatureErrorState),
OperationFlags=tostring(events.OperationFlags),
MajorFunction=tostring(events.MajorFunction),
IrpFlags=tostring(events.IrpFlags),
FileObject=tostring(events.FileObject),
MinorFunction=tostring(events.MinorFunction),
EtwTargetRawProcessId=tostring(events.EtwTargetRawProcessId),
ProcessCount=tolong(events.ProcessCount),
SuppressType=tostring(events.SuppressType),
Timeout=tostring(events.Timeout),
MeasurementType=tostring(events.MeasurementType),
FirmwareType=tostring(events.FirmwareType),
ImageAnalysisRequestTimestamp=toreal(events.ImageAnalysisRequestTimestamp),
FirmwareSize=tostring(events.FirmwareSize),
AssemblyFlags=tostring(events.AssemblyFlags),
DotnetModuleFlags=tostring(events.DotnetModuleFlags),
ModuleNativePath=tostring(events.ModuleNativePath),
DefaultGatewayIP6=tostring(events.DefaultGatewayIP6),
LocalAddressIP6=tostring(events.LocalAddressIP6),
TotalDiskSpace=toint(events.TotalDiskSpace),
PhysicalMediumType=tostring(events.PhysicalMediumType),
NetworkInterfaceGuid=tostring(events.NetworkInterfaceGuid),
TunnelType=tostring(events.TunnelType),
PhysicalAddressLength=tostring(events.PhysicalAddressLength),
BaseReachableTime=tolong(events.BaseReachableTime),
RetransmitTime=tolong(events.RetransmitTime),
RpcOpClassification=tostring(events.RpcOpClassification),
VolumeFileSystemDevice=tostring(events.VolumeFileSystemDevice),
CloudRequestId=tostring(events.CloudRequestId),
OSVersionString=tostring(events.OSVersionString),
OSVersionFileData=tostring(events.OSVersionFileData),
BuildNumber=tostring(events.BuildNumber),
CheckedBuild=tostring(events.CheckedBuild),
MinorVersion=tostring(events.MinorVersion),
ProductType=tostring(events.ProductType),
MajorVersion=tostring(events.MajorVersion),
BuildType=tostring(events.BuildType),
PlatformId=tostring(events.PlatformId),
SubBuildNumber=tostring(events.SubBuildNumber),
ProductName=tostring(events.ProductName),
PointerSize=tostring(events.PointerSize),
ProductSku=tostring(events.ProductSku),
FileVersion=tostring(events.FileVersion),
FixedFileVersion=tostring(events.FixedFileVersion),
CompanyName=tostring(events.CompanyName),
VersionInfo=tostring(events.VersionInfo),
OciContainersStartedCount=tolong(events.OciContainersStartedCount),
OciContainersStoppedCount=tolong(events.OciContainersStoppedCount),
Size=tostring(events.Size),
TargetAddress=tostring(events.TargetAddress),
Object1Type=tostring(events.Object1Type),
FileSubType=tostring(events.FileSubType),
PatternHandlingErrorType=tostring(events.PatternHandlingErrorType),
OdsActionType=tostring(events.OdsActionType),
OSVersionFileName=tostring(events.OSVersionFileName),
VolumeSessionUUID=tostring(events.VolumeSessionUUID),
IntegrityLevel=tostring(events.IntegrityLevel),
Protocol=tostring(events.Protocol),
AttemptNumber=tostring(events.AttemptNumber),
LfoUploadFlags=tostring(events.LfoUploadFlags),
PhysicalCoreCount=tolong(events.PhysicalCoreCount),
NamedPipeOperationType=tostring(events.NamedPipeOperationType),
MD5HashData=tostring(events.MD5HashData),
ProcessIntegrityLevel=tostring(events.ProcessIntegrityLevel),
ServiceGroup=tostring(events.ServiceGroup),
ServiceErrorControl=tostring(events.ServiceErrorControl),
ServiceFailureActions=tostring(events.ServiceFailureActions),
ServiceType=tostring(events.ServiceType),
ServiceStart=tostring(events.ServiceStart),
ServiceImagePath=tostring(events.ServiceImagePath),
ServiceSecurity=tostring(events.ServiceSecurity),
ServiceDescription=tostring(events.ServiceDescription),
ServiceObjectName=tostring(events.ServiceObjectName),
TreeId=tostring(events.TreeId),
Length=tostring(events.Length),
VolumeFileSystemType=tostring(events.VolumeFileSystemType),
PatternDisposition=tostring(events.PatternDisposition),
VolumeSectorSize=tostring(events.VolumeSectorSize),
VolumeDeviceCharacteristics=tostring(events.VolumeDeviceCharacteristics),
ByteOffset=tostring(events.ByteOffset),
VolumeDeviceObjectFlags=tostring(events.VolumeDeviceObjectFlags),
VolumeName=tostring(events.VolumeName),
VolumeDeviceType=tostring(events.VolumeDeviceType),
RemotePort=tostring(events.RemotePort),
AdditionalFields=todynamic(events.AdditionalFields),
_TimeReceived=todatetime(now())
}

.alter table CrowdStrike_Additional_Events_CL policy update @'[{"Source": "CrowdStrike_Additional_Events_CLRaw", "Query": "CrowdStrike_Additional_Events_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
