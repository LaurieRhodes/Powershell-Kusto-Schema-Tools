// ============================================================================
// Azure Data Explorer KQL Script for InformationProtectionLogs_CL
// ============================================================================
// Generated: 2025-09-17 06:16:04
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table InformationProtectionLogs_CLRaw (records:dynamic)

.alter-merge table InformationProtectionLogs_CLRaw policy retention softdelete = 1d

.alter table InformationProtectionLogs_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table InformationProtectionLogs_CLRaw ingestion json mapping 'InformationProtectionLogs_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table InformationProtectionLogs_CL(
TimeGenerated:datetime,
TenantId:guid,
LabelName_s:string,
AadTenantId_g:string,
DeviceId_g:string,
ActionSource_s:string,
MachineId_s:string,
DeviceRisk_s:string,
InformationTypesAbove95_s:string,
ParentLabelName_s:string,
InformationTypesAbove85_s:string,
InformationTypesAbove65_s:string,
InformationTypesAbove55_s:string,
DiscoveredInformationTypes_s:string,
InformationTypes_s:string,
DeviceId_s:string,
ProcessVersion_s:string,
ProtectionTime_t:datetime,
InformationTypesAbove75_s:string,
UserId_s:string,
MachineName_s:string,
Version_s:string,
LogId_g:string,
ProductVersion_s:string,
IsProtectionChanged_b:bool,
IsLabelChanged_b:bool,
DataState_s:string,
ApplicationId_g:string,
Location_s:string,
Activity_s:string,
Platform_s:string,
ProtectedBeforeAction_b:bool,
Protected_b:bool,
LabelId_g:string,
ObjectId_s:string,
Operation_s:string,
ApplicationName_s:string,
ProcessName_s:string,
Workload_s:string,
ContentId_g:string,
ProtectionOwner_s:string,
ProtectionType_s:string,
TemplateId_g:string,
AadTenantId_g_g:string,
ProcessVersion_s_s:string,
ProtectionTime_t_UTC__s:string,
ContentId_g_g:string,
ProtectionOwner_s_s:string,
ProtectionType_s_s:string,
TemplateId_g_g:string,
TimeGenerated_UTC__s:string,
TimeGenerated_s:string,
Protected_s:string,
ProtectionTime_s:string,
PK_LA___Content_Types__xml_MN_0_H_nY_t_Q_Ic_g_b_2p_J_6_oE_V_P_t_3_vX_I_u_p_e_nd_z_Q_Q_K_oH_X_U_s:string,
RawData:string,
Computer:string,
ManagementGroupName:string,
MG:string,
SourceSystem:string,
UserId_s_s:string,
ActionId_g:string,
Version_s_s:string,
ProcessName_s_s:string,
ActionIdBefore_g:string,
LabelNameBefore_s:string,
SensitivityChange_s:string,
LabelIdBeforeAction_g:string,
ParentLabelNameBefore_s:string,
TemplateIdBefore_g:string,
ProtectionTypeBefore_s:string,
MatchedLabelName_s:string,
MatchedLabelId_g:string,
IPv4_s_s:string,
LogId_g_g:string,
DataState_s_s:string,
Activity_s_s:string,
Platform_s_s:string,
Protected_b_s:string,
Operation_s_s:string,
ApplicationName_s_s:string,
Workload_s_s:string,
IPv4_s:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table InformationProtectionLogs_CL policy caching hot = 1d

.create-or-alter function InformationProtectionLogs_CLExpand() {
InformationProtectionLogs_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
LabelName_s=tostring(events.LabelName_s),
AadTenantId_g=tostring(events.AadTenantId_g),
DeviceId_g=tostring(events.DeviceId_g),
ActionSource_s=tostring(events.ActionSource_s),
MachineId_s=tostring(events.MachineId_s),
DeviceRisk_s=tostring(events.DeviceRisk_s),
InformationTypesAbove95_s=tostring(events.InformationTypesAbove95_s),
ParentLabelName_s=tostring(events.ParentLabelName_s),
InformationTypesAbove85_s=tostring(events.InformationTypesAbove85_s),
InformationTypesAbove65_s=tostring(events.InformationTypesAbove65_s),
InformationTypesAbove55_s=tostring(events.InformationTypesAbove55_s),
DiscoveredInformationTypes_s=tostring(events.DiscoveredInformationTypes_s),
InformationTypes_s=tostring(events.InformationTypes_s),
DeviceId_s=tostring(events.DeviceId_s),
ProcessVersion_s=tostring(events.ProcessVersion_s),
ProtectionTime_t=todatetime(events.ProtectionTime_t),
InformationTypesAbove75_s=tostring(events.InformationTypesAbove75_s),
UserId_s=tostring(events.UserId_s),
MachineName_s=tostring(events.MachineName_s),
Version_s=tostring(events.Version_s),
LogId_g=tostring(events.LogId_g),
ProductVersion_s=tostring(events.ProductVersion_s),
IsProtectionChanged_b=tobool(events.IsProtectionChanged_b),
IsLabelChanged_b=tobool(events.IsLabelChanged_b),
DataState_s=tostring(events.DataState_s),
ApplicationId_g=tostring(events.ApplicationId_g),
Location_s=tostring(events.Location_s),
Activity_s=tostring(events.Activity_s),
Platform_s=tostring(events.Platform_s),
ProtectedBeforeAction_b=tobool(events.ProtectedBeforeAction_b),
Protected_b=tobool(events.Protected_b),
LabelId_g=tostring(events.LabelId_g),
ObjectId_s=tostring(events.ObjectId_s),
Operation_s=tostring(events.Operation_s),
ApplicationName_s=tostring(events.ApplicationName_s),
ProcessName_s=tostring(events.ProcessName_s),
Workload_s=tostring(events.Workload_s),
ContentId_g=tostring(events.ContentId_g),
ProtectionOwner_s=tostring(events.ProtectionOwner_s),
ProtectionType_s=tostring(events.ProtectionType_s),
TemplateId_g=tostring(events.TemplateId_g),
AadTenantId_g_g=tostring(events.AadTenantId_g_g),
ProcessVersion_s_s=tostring(events.ProcessVersion_s_s),
ProtectionTime_t_UTC__s=tostring(events.ProtectionTime_t_UTC__s),
ContentId_g_g=tostring(events.ContentId_g_g),
ProtectionOwner_s_s=tostring(events.ProtectionOwner_s_s),
ProtectionType_s_s=tostring(events.ProtectionType_s_s),
TemplateId_g_g=tostring(events.TemplateId_g_g),
TimeGenerated_UTC__s=tostring(events.TimeGenerated_UTC__s),
TimeGenerated_s=tostring(events.TimeGenerated_s),
Protected_s=tostring(events.Protected_s),
ProtectionTime_s=tostring(events.ProtectionTime_s),
PK_LA___Content_Types__xml_MN_0_H_nY_t_Q_Ic_g_b_2p_J_6_oE_V_P_t_3_vX_I_u_p_e_nd_z_Q_Q_K_oH_X_U_s=tostring(events.PK_LA___Content_Types__xml_MN_0_H_nY_t_Q_Ic_g_b_2p_J_6_oE_V_P_t_3_vX_I_u_p_e_nd_z_Q_Q_K_oH_X_U_s),
RawData=tostring(events.RawData),
Computer=tostring(events.Computer),
ManagementGroupName=tostring(events.ManagementGroupName),
MG=tostring(events.MG),
SourceSystem=tostring(events.SourceSystem),
UserId_s_s=tostring(events.UserId_s_s),
ActionId_g=tostring(events.ActionId_g),
Version_s_s=tostring(events.Version_s_s),
ProcessName_s_s=tostring(events.ProcessName_s_s),
ActionIdBefore_g=tostring(events.ActionIdBefore_g),
LabelNameBefore_s=tostring(events.LabelNameBefore_s),
SensitivityChange_s=tostring(events.SensitivityChange_s),
LabelIdBeforeAction_g=tostring(events.LabelIdBeforeAction_g),
ParentLabelNameBefore_s=tostring(events.ParentLabelNameBefore_s),
TemplateIdBefore_g=tostring(events.TemplateIdBefore_g),
ProtectionTypeBefore_s=tostring(events.ProtectionTypeBefore_s),
MatchedLabelName_s=tostring(events.MatchedLabelName_s),
MatchedLabelId_g=tostring(events.MatchedLabelId_g),
IPv4_s_s=tostring(events.IPv4_s_s),
LogId_g_g=tostring(events.LogId_g_g),
DataState_s_s=tostring(events.DataState_s_s),
Activity_s_s=tostring(events.Activity_s_s),
Platform_s_s=tostring(events.Platform_s_s),
Protected_b_s=tostring(events.Protected_b_s),
Operation_s_s=tostring(events.Operation_s_s),
ApplicationName_s_s=tostring(events.ApplicationName_s_s),
Workload_s_s=tostring(events.Workload_s_s),
IPv4_s=tostring(events.IPv4_s),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table InformationProtectionLogs_CL policy update @'[{"Source": "InformationProtectionLogs_CLRaw", "Query": "InformationProtectionLogs_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
