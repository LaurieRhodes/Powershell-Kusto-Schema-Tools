// ============================================================================
// Azure Data Explorer KQL Script for VMware_VECO_EventLogs_CL
// ============================================================================
// Generated: 2025-09-13 20:17:17
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table VMware_VECO_EventLogs_CLRaw (records:dynamic)

.alter-merge table VMware_VECO_EventLogs_CLRaw policy retention softdelete = 1d

.alter table VMware_VECO_EventLogs_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table VMware_VECO_EventLogs_CLRaw ingestion json mapping 'VMware_VECO_EventLogs_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table VMware_VECO_EventLogs_CL(
TimeGenerated:datetime,
category:string,
detail:string,
event:string,
eventTime:datetime,
message:string,
severity:string,
_TimeReceived:datetime)

.alter table VMware_VECO_EventLogs_CL policy caching hot = 1d

.create-or-alter function VMware_VECO_EventLogs_CLExpand() {
VMware_VECO_EventLogs_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
category=tostring(events.category),
detail=tostring(events.detail),
event=tostring(events.event),
eventTime=todatetime(events.eventTime),
message=tostring(events.message),
severity=tostring(events.severity),
_TimeReceived=todatetime(now())
}

.alter table VMware_VECO_EventLogs_CL policy update @'[{"Source": "VMware_VECO_EventLogs_CLRaw", "Query": "VMware_VECO_EventLogs_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
