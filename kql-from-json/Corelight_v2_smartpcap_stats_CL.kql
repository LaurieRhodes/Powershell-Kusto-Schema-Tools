// ============================================================================
// Azure Data Explorer KQL Script for Corelight_v2_smartpcap_stats_CL
// ============================================================================
// Generated: 2025-09-17 06:16:00
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table Corelight_v2_smartpcap_stats_CLRaw (records:dynamic)

.alter-merge table Corelight_v2_smartpcap_stats_CLRaw policy retention softdelete = 1d

.alter table Corelight_v2_smartpcap_stats_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table Corelight_v2_smartpcap_stats_CLRaw ingestion json mapping 'Corelight_v2_smartpcap_stats_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table Corelight_v2_smartpcap_stats_CL(
TimeGenerated:datetime,
ts_t:datetime,
uncap_flows_buflimit_d:real,
lever_failures_d:real,
lever_triggers_d:real,
unknown_bytes_d:real,
unknown_packets_d:real,
socket_connects_d:real,
socket_writes_d:real,
byte_writes_d:real,
packet_writes_d:real,
byte_drops_d:real,
flow_resumes_d:real,
flow_pauses_d:real,
socket_closes_d:real,
socket_timeouts_d:real,
packet_drops_d:real,
socket_errors_d:real,
flows_buffered_d:real,
cap_flows_d:real,
cap_bytes_d:real,
uncap_flows_closed_d:real,
rule_stats_s:string,
_path_s:string,
_system_name_s:string,
_write_ts_t:datetime,
_TimeReceived:datetime)

.alter table Corelight_v2_smartpcap_stats_CL policy caching hot = 1d

.create-or-alter function Corelight_v2_smartpcap_stats_CLExpand() {
Corelight_v2_smartpcap_stats_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
ts_t=todatetime(events.ts_t),
uncap_flows_buflimit_d=toreal(events.uncap_flows_buflimit_d),
lever_failures_d=toreal(events.lever_failures_d),
lever_triggers_d=toreal(events.lever_triggers_d),
unknown_bytes_d=toreal(events.unknown_bytes_d),
unknown_packets_d=toreal(events.unknown_packets_d),
socket_connects_d=toreal(events.socket_connects_d),
socket_writes_d=toreal(events.socket_writes_d),
byte_writes_d=toreal(events.byte_writes_d),
packet_writes_d=toreal(events.packet_writes_d),
byte_drops_d=toreal(events.byte_drops_d),
flow_resumes_d=toreal(events.flow_resumes_d),
flow_pauses_d=toreal(events.flow_pauses_d),
socket_closes_d=toreal(events.socket_closes_d),
socket_timeouts_d=toreal(events.socket_timeouts_d),
packet_drops_d=toreal(events.packet_drops_d),
socket_errors_d=toreal(events.socket_errors_d),
flows_buffered_d=toreal(events.flows_buffered_d),
cap_flows_d=toreal(events.cap_flows_d),
cap_bytes_d=toreal(events.cap_bytes_d),
uncap_flows_closed_d=toreal(events.uncap_flows_closed_d),
rule_stats_s=tostring(events.rule_stats_s),
_path_s=tostring(events._path_s),
_system_name_s=tostring(events._system_name_s),
_write_ts_t=todatetime(events._write_ts_t),
_TimeReceived=todatetime(now())
}

.alter table Corelight_v2_smartpcap_stats_CL policy update @'[{"Source": "Corelight_v2_smartpcap_stats_CLRaw", "Query": "Corelight_v2_smartpcap_stats_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
