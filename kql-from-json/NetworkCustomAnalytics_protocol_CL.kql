// ============================================================================
// Azure Data Explorer KQL Script for NetworkCustomAnalytics_protocol_CL
// ============================================================================
// Generated: 2025-09-13 20:17:15
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table NetworkCustomAnalytics_protocol_CLRaw (records:dynamic)

.alter-merge table NetworkCustomAnalytics_protocol_CLRaw policy retention softdelete = 1d

.alter table NetworkCustomAnalytics_protocol_CLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table NetworkCustomAnalytics_protocol_CLRaw ingestion json mapping 'NetworkCustomAnalytics_protocol_CLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table NetworkCustomAnalytics_protocol_CL(
TimeGenerated:datetime,
EventTime_t:datetime,
NetworkProtocol_s:string,
DstPortNumber_d:int,
DstAppName_s:string,
NetworkDirection_s:string,
DvcAction_s:string,
count__d:int,
_TimeReceived:datetime)

.alter table NetworkCustomAnalytics_protocol_CL policy caching hot = 1d

.create-or-alter function NetworkCustomAnalytics_protocol_CLExpand() {
NetworkCustomAnalytics_protocol_CLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
EventTime_t=todatetime(events.EventTime_t),
NetworkProtocol_s=tostring(events.NetworkProtocol_s),
DstPortNumber_d=toint(events.DstPortNumber_d),
DstAppName_s=tostring(events.DstAppName_s),
NetworkDirection_s=tostring(events.NetworkDirection_s),
DvcAction_s=tostring(events.DvcAction_s),
count__d=toint(events.count__d),
_TimeReceived=todatetime(now())
}

.alter table NetworkCustomAnalytics_protocol_CL policy update @'[{"Source": "NetworkCustomAnalytics_protocol_CLRaw", "Query": "NetworkCustomAnalytics_protocol_CLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
