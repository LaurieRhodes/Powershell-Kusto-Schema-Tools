// ============================================================================
// Azure Data Explorer KQL Script for ASimRegistryEventLogs
// ============================================================================
// Generated: 2025-09-17 06:15:55
// Table type: Custom (presumed for JSON exports)
// Schema imported from JSON export file
// ============================================================================

.create-merge table ASimRegistryEventLogsRaw (records:dynamic)

.alter-merge table ASimRegistryEventLogsRaw policy retention softdelete = 1d

.alter table ASimRegistryEventLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table ASimRegistryEventLogsRaw ingestion json mapping 'ASimRegistryEventLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table ASimRegistryEventLogs(
TimeGenerated:datetime,
TenantId:guid,
ActingProcessGuid:string,
ActingProcessCommandLine:string,
ActingProcessId:string,
ActingProcessName:string,
ActorSessionId:string,
ActorOriginalUserType:string,
ActorUserType:string,
ParentProcessName:string,
ActorUsernameType:string,
ActorScope:string,
ActorScopeId:string,
ActorUserSid:string,
ActorUserAadId:string,
DvcScope:string,
DvcScopeId:string,
DvcInterface:string,
ActorUsername:string,
ParentProcessId:string,
ParentProcessCommandLine:string,
ParentProcessGuid:string,
EventEndTime:datetime,
EventStartTime:datetime,
EventSchemaVersion:string,
EventSchema:string,
ThreatLastReportedTime:datetime,
ThreatFirstReportedTime:datetime,
ThreatIsActive:bool,
ThreatOriginalConfidence:string,
ThreatConfidence:int,
ThreatField:string,
ThreatOriginalRiskLevel:string,
ThreatRiskLevel:int,
ThreatCategory:string,
ThreatName:string,
ThreatId:string,
RuleNumber:int,
RuleName:string,
DvcOriginalAction:string,
AdditionalFields:dynamic,
DvcOsVersion:string,
DvcZone:string,
EventResultDetails:string,
ActorUserIdType:string,
ActorUserId:string,
RegistryPreviousValueData:string,
RegistryPreviousValueType:string,
RegistryPreviousValue:string,
RegistryPreviousKey:string,
DvcIpAddr:string,
RegistryValueData:string,
RegistryValue:string,
RegistryKey:string,
EventType:string,
EventSeverity:string,
EventResult:string,
EventVendor:string,
EventProduct:string,
RegistryValueType:string,
DvcHostname:string,
DvcDomain:string,
DvcDomainType:string,
DvcMacAddr:string,
EventReportUrl:string,
EventOwner:string,
EventProductVersion:string,
EventOriginalSeverity:string,
EventOriginalResultDetails:string,
EventOriginalSubType:string,
EventOriginalType:string,
EventOriginalUid:string,
EventSubType:string,
EventCount:int,
EventMessage:string,
DvcAction:string,
DvcIdType:string,
DvcId:string,
DvcDescription:string,
DvcFQDN:string,
DvcOs:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table ASimRegistryEventLogs policy caching hot = 1d

.create-or-alter function ASimRegistryEventLogsExpand() {
ASimRegistryEventLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ActingProcessGuid=tostring(events.ActingProcessGuid),
ActingProcessCommandLine=tostring(events.ActingProcessCommandLine),
ActingProcessId=tostring(events.ActingProcessId),
ActingProcessName=tostring(events.ActingProcessName),
ActorSessionId=tostring(events.ActorSessionId),
ActorOriginalUserType=tostring(events.ActorOriginalUserType),
ActorUserType=tostring(events.ActorUserType),
ParentProcessName=tostring(events.ParentProcessName),
ActorUsernameType=tostring(events.ActorUsernameType),
ActorScope=tostring(events.ActorScope),
ActorScopeId=tostring(events.ActorScopeId),
ActorUserSid=tostring(events.ActorUserSid),
ActorUserAadId=tostring(events.ActorUserAadId),
DvcScope=tostring(events.DvcScope),
DvcScopeId=tostring(events.DvcScopeId),
DvcInterface=tostring(events.DvcInterface),
ActorUsername=tostring(events.ActorUsername),
ParentProcessId=tostring(events.ParentProcessId),
ParentProcessCommandLine=tostring(events.ParentProcessCommandLine),
ParentProcessGuid=tostring(events.ParentProcessGuid),
EventEndTime=todatetime(events.EventEndTime),
EventStartTime=todatetime(events.EventStartTime),
EventSchemaVersion=tostring(events.EventSchemaVersion),
EventSchema=tostring(events.EventSchema),
ThreatLastReportedTime=todatetime(events.ThreatLastReportedTime),
ThreatFirstReportedTime=todatetime(events.ThreatFirstReportedTime),
ThreatIsActive=tobool(events.ThreatIsActive),
ThreatOriginalConfidence=tostring(events.ThreatOriginalConfidence),
ThreatConfidence=toint(events.ThreatConfidence),
ThreatField=tostring(events.ThreatField),
ThreatOriginalRiskLevel=tostring(events.ThreatOriginalRiskLevel),
ThreatRiskLevel=toint(events.ThreatRiskLevel),
ThreatCategory=tostring(events.ThreatCategory),
ThreatName=tostring(events.ThreatName),
ThreatId=tostring(events.ThreatId),
RuleNumber=toint(events.RuleNumber),
RuleName=tostring(events.RuleName),
DvcOriginalAction=tostring(events.DvcOriginalAction),
AdditionalFields=todynamic(events.AdditionalFields),
DvcOsVersion=tostring(events.DvcOsVersion),
DvcZone=tostring(events.DvcZone),
EventResultDetails=tostring(events.EventResultDetails),
ActorUserIdType=tostring(events.ActorUserIdType),
ActorUserId=tostring(events.ActorUserId),
RegistryPreviousValueData=tostring(events.RegistryPreviousValueData),
RegistryPreviousValueType=tostring(events.RegistryPreviousValueType),
RegistryPreviousValue=tostring(events.RegistryPreviousValue),
RegistryPreviousKey=tostring(events.RegistryPreviousKey),
DvcIpAddr=tostring(events.DvcIpAddr),
RegistryValueData=tostring(events.RegistryValueData),
RegistryValue=tostring(events.RegistryValue),
RegistryKey=tostring(events.RegistryKey),
EventType=tostring(events.EventType),
EventSeverity=tostring(events.EventSeverity),
EventResult=tostring(events.EventResult),
EventVendor=tostring(events.EventVendor),
EventProduct=tostring(events.EventProduct),
RegistryValueType=tostring(events.RegistryValueType),
DvcHostname=tostring(events.DvcHostname),
DvcDomain=tostring(events.DvcDomain),
DvcDomainType=tostring(events.DvcDomainType),
DvcMacAddr=tostring(events.DvcMacAddr),
EventReportUrl=tostring(events.EventReportUrl),
EventOwner=tostring(events.EventOwner),
EventProductVersion=tostring(events.EventProductVersion),
EventOriginalSeverity=tostring(events.EventOriginalSeverity),
EventOriginalResultDetails=tostring(events.EventOriginalResultDetails),
EventOriginalSubType=tostring(events.EventOriginalSubType),
EventOriginalType=tostring(events.EventOriginalType),
EventOriginalUid=tostring(events.EventOriginalUid),
EventSubType=tostring(events.EventSubType),
EventCount=toint(events.EventCount),
EventMessage=tostring(events.EventMessage),
DvcAction=tostring(events.DvcAction),
DvcIdType=tostring(events.DvcIdType),
DvcId=tostring(events.DvcId),
DvcDescription=tostring(events.DvcDescription),
DvcFQDN=tostring(events.DvcFQDN),
DvcOs=tostring(events.DvcOs),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table ASimRegistryEventLogs policy update @'[{"Source": "ASimRegistryEventLogsRaw", "Query": "ASimRegistryEventLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
