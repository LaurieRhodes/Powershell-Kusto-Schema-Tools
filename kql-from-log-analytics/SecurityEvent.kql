// ============================================================================
// Azure Data Explorer KQL Script for SecurityEvent - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:28:57
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 234, Final columns: 234
// ============================================================================

.create-merge table SecurityEventRaw (records:dynamic)

.alter-merge table SecurityEventRaw policy retention softdelete = 1d

.alter table SecurityEventRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table SecurityEventRaw ingestion json mapping 'SecurityEventRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table SecurityEvent(
TimeGenerated:datetime,
TenantId:guid,
PrimaryGroupId:string,
PrivateKeyUsageCount:string,
PrivilegeList:string,
Process:string,
ProcessId:string,
ProcessName:string,
Properties:string,
ProfilePath:string,
ProtocolSequence:string,
ProxyPolicyName:string,
QuarantineHelpURL:string,
QuarantineSessionID:string,
QuarantineSessionIdentifier:string,
QuarantineState:string,
QuarantineSystemHealthResult:string,
RelativeTargetName:string,
RemoteIpAddress:string,
RemotePort:string,
Requester:string,
RequestId:string,
RestrictedAdminMode:string,
RowsDeleted:string,
SamAccountName:string,
ScriptPath:string,
SecurityDescriptor:string,
PreviousTime:string,
ServiceAccount:string,
PreviousDate:string,
PasswordLastSet:string,
NewDate:string,
NewMaxUsers:string,
NewProcessId:string,
NewProcessName:string,
NewRemark:string,
NewShareFlags:string,
NewTime:string,
NewUacValue:string,
NewValue:string,
NewValueType:string,
ObjectName:string,
ObjectServer:string,
ObjectType:string,
ObjectValueName:string,
OemInformation:string,
OldMaxUsers:string,
OldRemark:string,
OldShareFlags:string,
OldUacValue:string,
OldValue:string,
OldValueType:string,
OperationType:string,
PackageName:string,
ParentProcessName:string,
PasswordHistoryLength:string,
PasswordProperties:string,
NetworkPolicyName:string,
ServiceFileName:string,
ServiceStartType:int,
TargetUser:string,
TargetUserName:string,
TargetUserSid:string,
TemplateContent:string,
TemplateDSObjectFQDN:string,
TemplateInternalName:string,
TemplateOID:string,
TemplateSchemaVersion:string,
TemplateVersion:string,
TokenElevationType:string,
TransmittedServices:string,
UserAccountControl:string,
UserParameters:string,
UserPrincipalName:string,
UserWorkstations:string,
VirtualAccount:string,
VendorIds:string,
Workstation:string,
WorkstationName:string,
SystemUserId:string,
Version:int,
Opcode:string,
Keywords:string,
Correlation:string,
SystemProcessId:int,
TargetSid:string,
ServiceName:string,
TargetServerName:string,
TargetOutboundDomainName:string,
ServiceType:string,
SessionName:string,
ShareLocalPath:string,
ShareName:string,
SidHistory:string,
Status:string,
SubjectAccount:string,
SubcategoryGuid:guid,
SubcategoryId:string,
Subject:string,
SubjectDomainName:string,
SubjectKeyIdentifier:string,
SubjectLogonId:string,
SubjectMachineName:string,
SubjectMachineSID:string,
SubjectUserName:string,
SubjectUserSid:string,
SubStatus:string,
TableId:string,
TargetAccount:string,
TargetDomainName:string,
TargetInfo:string,
TargetLinkedLogonId:string,
TargetLogonGuid:guid,
TargetLogonId:string,
TargetOutboundUserName:string,
SystemThreadId:int,
NASPortType:string,
NASIPv6Address:string,
AdditionalInfo:string,
AdditionalInfo2:string,
AllowedToDelegateTo:string,
Attributes:string,
AuditPolicyChanges:string,
AuditsDiscarded:int,
AuthenticationLevel:int,
AuthenticationPackageName:string,
AuthenticationProvider:string,
AuthenticationServer:string,
AuthenticationService:int,
AuthenticationType:string,
CACertificateHash:string,
CalledStationID:string,
CallerProcessId:string,
CallerProcessName:string,
CallingStationID:string,
CAPublicKeyHash:string,
CategoryId:string,
CertificateDatabaseHash:string,
ClassId:string,
ClassName:string,
ClientAddress:string,
ClientIPAddress:string,
ClientName:string,
AccountSessionIdentifier:string,
CommandLine:string,
AccountName:string,
AccountDomain:string,
SourceSystem:string,
Account:string,
AccountType:string,
Computer:string,
EventSourceName:string,
Channel:string,
Task:int,
Level:string,
EventLevelName:string,
EventData:string,
EventID:int,
Activity:string,
SourceComputerId:guid,
EventOriginId:string,
MG:guid,
TimeCollected:datetime,
ManagementGroupName:string,
PartitionKey:string,
RowKey:string,
StorageAccount:string,
AzureDeploymentID:string,
AzureTableName:string,
AccessList:string,
AccessMask:string,
AccessReason:string,
AccountExpires:string,
NASPort:string,
CompatibleIds:string,
DeviceDescription:string,
KeyLength:int,
LmPackageName:string,
LocationInformation:string,
LockoutDuration:string,
LockoutObservationWindow:string,
LockoutThreshold:string,
LoggingResult:string,
LogonGuid:guid,
LogonHours:string,
LogonID:string,
LogonProcessName:string,
LogonType:int,
LogonTypeName:string,
MachineAccountQuota:string,
MachineInventory:string,
MachineLogon:string,
MandatoryLabel:string,
MaxPasswordAge:string,
MemberName:string,
MemberSid:string,
MinPasswordAge:string,
MinPasswordLength:string,
MixedDomainMode:string,
NASIdentifier:string,
NASIPv4Address:string,
IpPort:string,
DCDNSName:string,
IpAddress:string,
ImpersonationLevel:string,
DeviceId:string,
DisplayName:string,
Disposition:string,
DomainBehaviorVersion:string,
DomainName:string,
DomainPolicyChanged:string,
DomainSid:string,
EAPType:string,
ElevatedToken:string,
ErrorCode:int,
ExtendedQuarantineState:string,
FailureReason:string,
FileHash:string,
FilePath:string,
FilePathNoUser:string,
Filter:string,
ForceLogoff:string,
Fqbn:string,
FullyQualifiedSubjectMachineName:string,
FullyQualifiedSubjectUserName:string,
GroupMembership:string,
HandleId:string,
HardwareIds:string,
HomeDirectory:string,
HomePath:string,
InterfaceUuid:guid,
EventRecordId:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table SecurityEvent policy caching hot = 1d

.create-or-alter function SecurityEventExpand() {
SecurityEventRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
PrimaryGroupId=tostring(events.PrimaryGroupId),
PrivateKeyUsageCount=tostring(events.PrivateKeyUsageCount),
PrivilegeList=tostring(events.PrivilegeList),
Process=tostring(events.Process),
ProcessId=tostring(events.ProcessId),
ProcessName=tostring(events.ProcessName),
Properties=tostring(events.Properties),
ProfilePath=tostring(events.ProfilePath),
ProtocolSequence=tostring(events.ProtocolSequence),
ProxyPolicyName=tostring(events.ProxyPolicyName),
QuarantineHelpURL=tostring(events.QuarantineHelpURL),
QuarantineSessionID=tostring(events.QuarantineSessionID),
QuarantineSessionIdentifier=tostring(events.QuarantineSessionIdentifier),
QuarantineState=tostring(events.QuarantineState),
QuarantineSystemHealthResult=tostring(events.QuarantineSystemHealthResult),
RelativeTargetName=tostring(events.RelativeTargetName),
RemoteIpAddress=tostring(events.RemoteIpAddress),
RemotePort=tostring(events.RemotePort),
Requester=tostring(events.Requester),
RequestId=tostring(events.RequestId),
RestrictedAdminMode=tostring(events.RestrictedAdminMode),
RowsDeleted=tostring(events.RowsDeleted),
SamAccountName=tostring(events.SamAccountName),
ScriptPath=tostring(events.ScriptPath),
SecurityDescriptor=tostring(events.SecurityDescriptor),
PreviousTime=tostring(events.PreviousTime),
ServiceAccount=tostring(events.ServiceAccount),
PreviousDate=tostring(events.PreviousDate),
PasswordLastSet=tostring(events.PasswordLastSet),
NewDate=tostring(events.NewDate),
NewMaxUsers=tostring(events.NewMaxUsers),
NewProcessId=tostring(events.NewProcessId),
NewProcessName=tostring(events.NewProcessName),
NewRemark=tostring(events.NewRemark),
NewShareFlags=tostring(events.NewShareFlags),
NewTime=tostring(events.NewTime),
NewUacValue=tostring(events.NewUacValue),
NewValue=tostring(events.NewValue),
NewValueType=tostring(events.NewValueType),
ObjectName=tostring(events.ObjectName),
ObjectServer=tostring(events.ObjectServer),
ObjectType=tostring(events.ObjectType),
ObjectValueName=tostring(events.ObjectValueName),
OemInformation=tostring(events.OemInformation),
OldMaxUsers=tostring(events.OldMaxUsers),
OldRemark=tostring(events.OldRemark),
OldShareFlags=tostring(events.OldShareFlags),
OldUacValue=tostring(events.OldUacValue),
OldValue=tostring(events.OldValue),
OldValueType=tostring(events.OldValueType),
OperationType=tostring(events.OperationType),
PackageName=tostring(events.PackageName),
ParentProcessName=tostring(events.ParentProcessName),
PasswordHistoryLength=tostring(events.PasswordHistoryLength),
PasswordProperties=tostring(events.PasswordProperties),
NetworkPolicyName=tostring(events.NetworkPolicyName),
ServiceFileName=tostring(events.ServiceFileName),
ServiceStartType=toint(events.ServiceStartType),
TargetUser=tostring(events.TargetUser),
TargetUserName=tostring(events.TargetUserName),
TargetUserSid=tostring(events.TargetUserSid),
TemplateContent=tostring(events.TemplateContent),
TemplateDSObjectFQDN=tostring(events.TemplateDSObjectFQDN),
TemplateInternalName=tostring(events.TemplateInternalName),
TemplateOID=tostring(events.TemplateOID),
TemplateSchemaVersion=tostring(events.TemplateSchemaVersion),
TemplateVersion=tostring(events.TemplateVersion),
TokenElevationType=tostring(events.TokenElevationType),
TransmittedServices=tostring(events.TransmittedServices),
UserAccountControl=tostring(events.UserAccountControl),
UserParameters=tostring(events.UserParameters),
UserPrincipalName=tostring(events.UserPrincipalName),
UserWorkstations=tostring(events.UserWorkstations),
VirtualAccount=tostring(events.VirtualAccount),
VendorIds=tostring(events.VendorIds),
Workstation=tostring(events.Workstation),
WorkstationName=tostring(events.WorkstationName),
SystemUserId=tostring(events.SystemUserId),
Version=toint(events.Version),
Opcode=tostring(events.Opcode),
Keywords=tostring(events.Keywords),
Correlation=tostring(events.Correlation),
SystemProcessId=toint(events.SystemProcessId),
TargetSid=tostring(events.TargetSid),
ServiceName=tostring(events.ServiceName),
TargetServerName=tostring(events.TargetServerName),
TargetOutboundDomainName=tostring(events.TargetOutboundDomainName),
ServiceType=tostring(events.ServiceType),
SessionName=tostring(events.SessionName),
ShareLocalPath=tostring(events.ShareLocalPath),
ShareName=tostring(events.ShareName),
SidHistory=tostring(events.SidHistory),
Status=tostring(events.Status),
SubjectAccount=tostring(events.SubjectAccount),
SubcategoryGuid=toguid(events.SubcategoryGuid),
SubcategoryId=tostring(events.SubcategoryId),
Subject=tostring(events.Subject),
SubjectDomainName=tostring(events.SubjectDomainName),
SubjectKeyIdentifier=tostring(events.SubjectKeyIdentifier),
SubjectLogonId=tostring(events.SubjectLogonId),
SubjectMachineName=tostring(events.SubjectMachineName),
SubjectMachineSID=tostring(events.SubjectMachineSID),
SubjectUserName=tostring(events.SubjectUserName),
SubjectUserSid=tostring(events.SubjectUserSid),
SubStatus=tostring(events.SubStatus),
TableId=tostring(events.TableId),
TargetAccount=tostring(events.TargetAccount),
TargetDomainName=tostring(events.TargetDomainName),
TargetInfo=tostring(events.TargetInfo),
TargetLinkedLogonId=tostring(events.TargetLinkedLogonId),
TargetLogonGuid=toguid(events.TargetLogonGuid),
TargetLogonId=tostring(events.TargetLogonId),
TargetOutboundUserName=tostring(events.TargetOutboundUserName),
SystemThreadId=toint(events.SystemThreadId),
NASPortType=tostring(events.NASPortType),
NASIPv6Address=tostring(events.NASIPv6Address),
AdditionalInfo=tostring(events.AdditionalInfo),
AdditionalInfo2=tostring(events.AdditionalInfo2),
AllowedToDelegateTo=tostring(events.AllowedToDelegateTo),
Attributes=tostring(events.Attributes),
AuditPolicyChanges=tostring(events.AuditPolicyChanges),
AuditsDiscarded=toint(events.AuditsDiscarded),
AuthenticationLevel=toint(events.AuthenticationLevel),
AuthenticationPackageName=tostring(events.AuthenticationPackageName),
AuthenticationProvider=tostring(events.AuthenticationProvider),
AuthenticationServer=tostring(events.AuthenticationServer),
AuthenticationService=toint(events.AuthenticationService),
AuthenticationType=tostring(events.AuthenticationType),
CACertificateHash=tostring(events.CACertificateHash),
CalledStationID=tostring(events.CalledStationID),
CallerProcessId=tostring(events.CallerProcessId),
CallerProcessName=tostring(events.CallerProcessName),
CallingStationID=tostring(events.CallingStationID),
CAPublicKeyHash=tostring(events.CAPublicKeyHash),
CategoryId=tostring(events.CategoryId),
CertificateDatabaseHash=tostring(events.CertificateDatabaseHash),
ClassId=tostring(events.ClassId),
ClassName=tostring(events.ClassName),
ClientAddress=tostring(events.ClientAddress),
ClientIPAddress=tostring(events.ClientIPAddress),
ClientName=tostring(events.ClientName),
AccountSessionIdentifier=tostring(events.AccountSessionIdentifier),
CommandLine=tostring(events.CommandLine),
AccountName=tostring(events.AccountName),
AccountDomain=tostring(events.AccountDomain),
SourceSystem=tostring(events.SourceSystem),
Account=tostring(events.Account),
AccountType=tostring(events.AccountType),
Computer=tostring(events.Computer),
EventSourceName=tostring(events.EventSourceName),
Channel=tostring(events.Channel),
Task=toint(events.Task),
Level=tostring(events.Level),
EventLevelName=tostring(events.EventLevelName),
EventData=tostring(events.EventData),
EventID=toint(events.EventID),
Activity=tostring(events.Activity),
SourceComputerId=toguid(events.SourceComputerId),
EventOriginId=tostring(events.EventOriginId),
MG=toguid(events.MG),
TimeCollected=todatetime(events.TimeCollected),
ManagementGroupName=tostring(events.ManagementGroupName),
PartitionKey=tostring(events.PartitionKey),
RowKey=tostring(events.RowKey),
StorageAccount=tostring(events.StorageAccount),
AzureDeploymentID=tostring(events.AzureDeploymentID),
AzureTableName=tostring(events.AzureTableName),
AccessList=tostring(events.AccessList),
AccessMask=tostring(events.AccessMask),
AccessReason=tostring(events.AccessReason),
AccountExpires=tostring(events.AccountExpires),
NASPort=tostring(events.NASPort),
CompatibleIds=tostring(events.CompatibleIds),
DeviceDescription=tostring(events.DeviceDescription),
KeyLength=toint(events.KeyLength),
LmPackageName=tostring(events.LmPackageName),
LocationInformation=tostring(events.LocationInformation),
LockoutDuration=tostring(events.LockoutDuration),
LockoutObservationWindow=tostring(events.LockoutObservationWindow),
LockoutThreshold=tostring(events.LockoutThreshold),
LoggingResult=tostring(events.LoggingResult),
LogonGuid=toguid(events.LogonGuid),
LogonHours=tostring(events.LogonHours),
LogonID=tostring(events.LogonID),
LogonProcessName=tostring(events.LogonProcessName),
LogonType=toint(events.LogonType),
LogonTypeName=tostring(events.LogonTypeName),
MachineAccountQuota=tostring(events.MachineAccountQuota),
MachineInventory=tostring(events.MachineInventory),
MachineLogon=tostring(events.MachineLogon),
MandatoryLabel=tostring(events.MandatoryLabel),
MaxPasswordAge=tostring(events.MaxPasswordAge),
MemberName=tostring(events.MemberName),
MemberSid=tostring(events.MemberSid),
MinPasswordAge=tostring(events.MinPasswordAge),
MinPasswordLength=tostring(events.MinPasswordLength),
MixedDomainMode=tostring(events.MixedDomainMode),
NASIdentifier=tostring(events.NASIdentifier),
NASIPv4Address=tostring(events.NASIPv4Address),
IpPort=tostring(events.IpPort),
DCDNSName=tostring(events.DCDNSName),
IpAddress=tostring(events.IpAddress),
ImpersonationLevel=tostring(events.ImpersonationLevel),
DeviceId=tostring(events.DeviceId),
DisplayName=tostring(events.DisplayName),
Disposition=tostring(events.Disposition),
DomainBehaviorVersion=tostring(events.DomainBehaviorVersion),
DomainName=tostring(events.DomainName),
DomainPolicyChanged=tostring(events.DomainPolicyChanged),
DomainSid=tostring(events.DomainSid),
EAPType=tostring(events.EAPType),
ElevatedToken=tostring(events.ElevatedToken),
ErrorCode=toint(events.ErrorCode),
ExtendedQuarantineState=tostring(events.ExtendedQuarantineState),
FailureReason=tostring(events.FailureReason),
FileHash=tostring(events.FileHash),
FilePath=tostring(events.FilePath),
FilePathNoUser=tostring(events.FilePathNoUser),
Filter=tostring(events.Filter),
ForceLogoff=tostring(events.ForceLogoff),
Fqbn=tostring(events.Fqbn),
FullyQualifiedSubjectMachineName=tostring(events.FullyQualifiedSubjectMachineName),
FullyQualifiedSubjectUserName=tostring(events.FullyQualifiedSubjectUserName),
GroupMembership=tostring(events.GroupMembership),
HandleId=tostring(events.HandleId),
HardwareIds=tostring(events.HardwareIds),
HomeDirectory=tostring(events.HomeDirectory),
HomePath=tostring(events.HomePath),
InterfaceUuid=toguid(events.InterfaceUuid),
EventRecordId=tostring(events.EventRecordId),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table SecurityEvent policy update @'[{"Source": "SecurityEventRaw", "Query": "SecurityEventExpand()", "IsEnabled": "True", "IsTransactional": true}]'
