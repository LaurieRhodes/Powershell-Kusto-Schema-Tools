// ============================================================================
// Azure Data Explorer KQL Script for DnsAuditEvents - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:23:58
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 97, Final columns: 97
// ============================================================================

.create-merge table DnsAuditEventsRaw (records:dynamic)

.alter-merge table DnsAuditEventsRaw policy retention softdelete = 1d

.alter table DnsAuditEventsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table DnsAuditEventsRaw ingestion json mapping 'DnsAuditEventsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table DnsAuditEvents(
TimeGenerated:datetime,
TenantId:guid,
RecursionScope:string,
RDATA:string,
PropertyKey:string,
PropagationTime:int,
ProcessingOrder:int,
Policy:string,
ParentHasSecureDelegation:string,
OldPropertyValues:string,
NSec3UserSalt:string,
NSec3RandomSaltLength:int,
NSec3OptOut:string,
NSec3Iterations:int,
NSec3HashAlgorithm:int,
NodeName:string,
NextRolloverTime:datetime,
NextRolloverAction:string,
NextKey:string,
NewValue:string,
NewPropertyValues:string,
ReplicationScope:string,
RolloverPeriod:int,
RolloverType:string,
ScavengeServers:string,
ZoneSignatureValidityPeriod:int,
ZoneScope:string,
ZoneName:string,
ZoneFile:string,
Zone:string,
WithWithout:string,
WithNewKeys:string,
VirtualizationID:string,
TTL:int,
NameServer:string,
SubTreeAging:string,
StandbyKey:string,
Source:string,
SignatureInceptionOffset:int,
Setting:string,
ServerName:string,
SeizedOrTransferred:string,
SecureDelegationPollingPeriod:int,
Scopes:string,
Scope:string,
StoreKeysInAD:string,
Name:string,
MasterServer:string,
LookupValue:string,
DnsQueryType:int,
DnsQuery:string,
DnsKeySignatureValidityPeriod:int,
DnsKeyRecordSetTtl:int,
DistributeTrustAnchor:string,
DigestType:string,
Digest:string,
DenialOfExistence:string,
CurrentState:string,
DSRecordGenerationAlgorithm:string,
CurrentRolloverStatus:string,
Criteria:string,
Condition:string,
ClientSubnetRecord:string,
ClientSubnetList:string,
ChildZone:string,
BufferSize:int,
Base64Data:string,
ActiveKey:string,
Action:string,
CryptoAlgorithm:string,
AdditionalData:dynamic,
DSRecordSetTtl:int,
EnableRfc5011KeyRollover:string,
ListenAddresses:string,
LastRolloverTime:datetime,
KskOrZsk:string,
KeyType:string,
KeyTag:int,
KeyStorageProvider:string,
KeyProtocol:string,
KeyOrZone:string,
KeyMasterServer:string,
DSSignatureValidityPeriod:int,
KeyLength:int,
IsKeyMasterServer:string,
IsEnabled:string,
InitialRolloverOffset:int,
Forwarders:string,
FilePath:string,
EventType:string,
EventString:string,
EventId:string,
EventGuid:string,
KeyId:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table DnsAuditEvents policy caching hot = 1d

.create-or-alter function DnsAuditEventsExpand() {
DnsAuditEventsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
RecursionScope=tostring(events.RecursionScope),
RDATA=tostring(events.RDATA),
PropertyKey=tostring(events.PropertyKey),
PropagationTime=toint(events.PropagationTime),
ProcessingOrder=toint(events.ProcessingOrder),
Policy=tostring(events.Policy),
ParentHasSecureDelegation=tostring(events.ParentHasSecureDelegation),
OldPropertyValues=tostring(events.OldPropertyValues),
NSec3UserSalt=tostring(events.NSec3UserSalt),
NSec3RandomSaltLength=toint(events.NSec3RandomSaltLength),
NSec3OptOut=tostring(events.NSec3OptOut),
NSec3Iterations=toint(events.NSec3Iterations),
NSec3HashAlgorithm=toint(events.NSec3HashAlgorithm),
NodeName=tostring(events.NodeName),
NextRolloverTime=todatetime(events.NextRolloverTime),
NextRolloverAction=tostring(events.NextRolloverAction),
NextKey=tostring(events.NextKey),
NewValue=tostring(events.NewValue),
NewPropertyValues=tostring(events.NewPropertyValues),
ReplicationScope=tostring(events.ReplicationScope),
RolloverPeriod=toint(events.RolloverPeriod),
RolloverType=tostring(events.RolloverType),
ScavengeServers=tostring(events.ScavengeServers),
ZoneSignatureValidityPeriod=toint(events.ZoneSignatureValidityPeriod),
ZoneScope=tostring(events.ZoneScope),
ZoneName=tostring(events.ZoneName),
ZoneFile=tostring(events.ZoneFile),
Zone=tostring(events.Zone),
WithWithout=tostring(events.WithWithout),
WithNewKeys=tostring(events.WithNewKeys),
VirtualizationID=tostring(events.VirtualizationID),
TTL=toint(events.TTL),
NameServer=tostring(events.NameServer),
SubTreeAging=tostring(events.SubTreeAging),
StandbyKey=tostring(events.StandbyKey),
Source=tostring(events.Source),
SignatureInceptionOffset=toint(events.SignatureInceptionOffset),
Setting=tostring(events.Setting),
ServerName=tostring(events.ServerName),
SeizedOrTransferred=tostring(events.SeizedOrTransferred),
SecureDelegationPollingPeriod=toint(events.SecureDelegationPollingPeriod),
Scopes=tostring(events.Scopes),
Scope=tostring(events.Scope),
StoreKeysInAD=tostring(events.StoreKeysInAD),
Name=tostring(events.Name),
MasterServer=tostring(events.MasterServer),
LookupValue=tostring(events.LookupValue),
DnsQueryType=toint(events.DnsQueryType),
DnsQuery=tostring(events.DnsQuery),
DnsKeySignatureValidityPeriod=toint(events.DnsKeySignatureValidityPeriod),
DnsKeyRecordSetTtl=toint(events.DnsKeyRecordSetTtl),
DistributeTrustAnchor=tostring(events.DistributeTrustAnchor),
DigestType=tostring(events.DigestType),
Digest=tostring(events.Digest),
DenialOfExistence=tostring(events.DenialOfExistence),
CurrentState=tostring(events.CurrentState),
DSRecordGenerationAlgorithm=tostring(events.DSRecordGenerationAlgorithm),
CurrentRolloverStatus=tostring(events.CurrentRolloverStatus),
Criteria=tostring(events.Criteria),
Condition=tostring(events.Condition),
ClientSubnetRecord=tostring(events.ClientSubnetRecord),
ClientSubnetList=tostring(events.ClientSubnetList),
ChildZone=tostring(events.ChildZone),
BufferSize=toint(events.BufferSize),
Base64Data=tostring(events.Base64Data),
ActiveKey=tostring(events.ActiveKey),
Action=tostring(events.Action),
CryptoAlgorithm=tostring(events.CryptoAlgorithm),
AdditionalData=todynamic(events.AdditionalData),
DSRecordSetTtl=toint(events.DSRecordSetTtl),
EnableRfc5011KeyRollover=tostring(events.EnableRfc5011KeyRollover),
ListenAddresses=tostring(events.ListenAddresses),
LastRolloverTime=todatetime(events.LastRolloverTime),
KskOrZsk=tostring(events.KskOrZsk),
KeyType=tostring(events.KeyType),
KeyTag=toint(events.KeyTag),
KeyStorageProvider=tostring(events.KeyStorageProvider),
KeyProtocol=tostring(events.KeyProtocol),
KeyOrZone=tostring(events.KeyOrZone),
KeyMasterServer=tostring(events.KeyMasterServer),
DSSignatureValidityPeriod=toint(events.DSSignatureValidityPeriod),
KeyLength=toint(events.KeyLength),
IsKeyMasterServer=tostring(events.IsKeyMasterServer),
IsEnabled=tostring(events.IsEnabled),
InitialRolloverOffset=toint(events.InitialRolloverOffset),
Forwarders=tostring(events.Forwarders),
FilePath=tostring(events.FilePath),
EventType=tostring(events.EventType),
EventString=tostring(events.EventString),
EventId=tostring(events.EventId),
EventGuid=tostring(events.EventGuid),
KeyId=tostring(events.KeyId),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table DnsAuditEvents policy update @'[{"Source": "DnsAuditEventsRaw", "Query": "DnsAuditEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
