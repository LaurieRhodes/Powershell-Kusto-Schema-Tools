// ============================================================================
// Azure Data Explorer KQL Script for MDCDetectionProcessV2Events - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:26:43
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 32, Final columns: 32
// ============================================================================

.create-merge table MDCDetectionProcessV2EventsRaw (records:dynamic)

.alter-merge table MDCDetectionProcessV2EventsRaw policy retention softdelete = 1d

.alter table MDCDetectionProcessV2EventsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table MDCDetectionProcessV2EventsRaw ingestion json mapping 'MDCDetectionProcessV2EventsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table MDCDetectionProcessV2Events(
TimeGenerated:datetime,
TenantId:guid,
AdditionalData:dynamic,
UpperLayer:bool,
Memfd:bool,
Group:string,
User:string,
DriftAction:string,
Namespace:string,
PodName:string,
Success:string,
Exe:string,
Pname:string,
Comm:string,
Auid:string,
Gid:string,
Uid:string,
Computer:string,
AgentId:string,
Ses:string,
Ppid:string,
Pid:string,
Cwd:string,
Cmdline:string,
ContainerName:string,
ContainerID:string,
Digest:string,
Tag:string,
Repository:string,
PodLabels:dynamic,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table MDCDetectionProcessV2Events policy caching hot = 1d

.create-or-alter function MDCDetectionProcessV2EventsExpand() {
MDCDetectionProcessV2EventsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
AdditionalData=todynamic(events.AdditionalData),
UpperLayer=tobool(events.UpperLayer),
Memfd=tobool(events.Memfd),
Group=tostring(events.Group),
User=tostring(events.User),
DriftAction=tostring(events.DriftAction),
Namespace=tostring(events.Namespace),
PodName=tostring(events.PodName),
Success=tostring(events.Success),
Exe=tostring(events.Exe),
Pname=tostring(events.Pname),
Comm=tostring(events.Comm),
Auid=tostring(events.Auid),
Gid=tostring(events.Gid),
Uid=tostring(events.Uid),
Computer=tostring(events.Computer),
AgentId=tostring(events.AgentId),
Ses=tostring(events.Ses),
Ppid=tostring(events.Ppid),
Pid=tostring(events.Pid),
Cwd=tostring(events.Cwd),
Cmdline=tostring(events.Cmdline),
ContainerName=tostring(events.ContainerName),
ContainerID=tostring(events.ContainerID),
Digest=tostring(events.Digest),
Tag=tostring(events.Tag),
Repository=tostring(events.Repository),
PodLabels=todynamic(events.PodLabels),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table MDCDetectionProcessV2Events policy update @'[{"Source": "MDCDetectionProcessV2EventsRaw", "Query": "MDCDetectionProcessV2EventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
