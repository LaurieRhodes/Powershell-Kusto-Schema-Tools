// ============================================================================
// Azure Data Explorer KQL Script for HDInsightAmbariClusterAlerts - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:25:06
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 27, Final columns: 27
// ============================================================================

.create-merge table HDInsightAmbariClusterAlertsRaw (records:dynamic)

.alter-merge table HDInsightAmbariClusterAlertsRaw policy retention softdelete = 1d

.alter table HDInsightAmbariClusterAlertsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table HDInsightAmbariClusterAlertsRaw ingestion json mapping 'HDInsightAmbariClusterAlertsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table HDInsightAmbariClusterAlerts(
TimeGenerated:datetime,
TenantId:guid,
Text:string,
State:string,
ServiceName:string,
Scope:string,
RepeatToleranceRemaining:int,
RepeatTolerance:int,
Occurences:int,
MaintenanceState:string,
OriginalTimestamp:long,
LatestTimestamp:long,
Label:string,
AlertInstance:string,
AlertID:int,
HostName:string,
HostFQDN:string,
AlertFirmness:string,
DefinitionName:string,
DefinitionId:int,
ComponentName:string,
ClusterName:string,
ReferenceURI:string,
ClusterType:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table HDInsightAmbariClusterAlerts policy caching hot = 1d

.create-or-alter function HDInsightAmbariClusterAlertsExpand() {
HDInsightAmbariClusterAlertsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Text=tostring(events.Text),
State=tostring(events.State),
ServiceName=tostring(events.ServiceName),
Scope=tostring(events.Scope),
RepeatToleranceRemaining=toint(events.RepeatToleranceRemaining),
RepeatTolerance=toint(events.RepeatTolerance),
Occurences=toint(events.Occurences),
MaintenanceState=tostring(events.MaintenanceState),
OriginalTimestamp=tolong(events.OriginalTimestamp),
LatestTimestamp=tolong(events.LatestTimestamp),
Label=tostring(events.Label),
AlertInstance=tostring(events.AlertInstance),
AlertID=toint(events.AlertID),
HostName=tostring(events.HostName),
HostFQDN=tostring(events.HostFQDN),
AlertFirmness=tostring(events.AlertFirmness),
DefinitionName=tostring(events.DefinitionName),
DefinitionId=toint(events.DefinitionId),
ComponentName=tostring(events.ComponentName),
ClusterName=tostring(events.ClusterName),
ReferenceURI=tostring(events.ReferenceURI),
ClusterType=tostring(events.ClusterType),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table HDInsightAmbariClusterAlerts policy update @'[{"Source": "HDInsightAmbariClusterAlertsRaw", "Query": "HDInsightAmbariClusterAlertsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
