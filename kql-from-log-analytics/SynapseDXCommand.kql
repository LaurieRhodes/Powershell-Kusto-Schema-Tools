// ============================================================================
// Azure Data Explorer KQL Script for SynapseDXCommand - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:29:49
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 22, Final columns: 22
// ============================================================================

.create-merge table SynapseDXCommandRaw (records:dynamic)

.alter-merge table SynapseDXCommandRaw policy retention softdelete = 1d

.alter table SynapseDXCommandRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table SynapseDXCommandRaw ingestion json mapping 'SynapseDXCommandRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table SynapseDXCommand(
TimeGenerated:datetime,
TenantId:guid,
WorkloadGroup:string,
Principal:string,
User:string,
Duration:string,
ResourceUtilization:dynamic,
ApplicationName:string,
CommandType:string,
Text:string,
TotalCPU:string,
State:string,
DatabaseName:string,
LastUpdatedOn:datetime,
StartedOn:datetime,
RootActivityId:string,
CorrelationId:string,
Category:string,
FailureReason:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table SynapseDXCommand policy caching hot = 1d

.create-or-alter function SynapseDXCommandExpand() {
SynapseDXCommandRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
WorkloadGroup=tostring(events.WorkloadGroup),
Principal=tostring(events.Principal),
User=tostring(events.User),
Duration=tostring(events.Duration),
ResourceUtilization=todynamic(events.ResourceUtilization),
ApplicationName=tostring(events.ApplicationName),
CommandType=tostring(events.CommandType),
Text=tostring(events.Text),
TotalCPU=tostring(events.TotalCPU),
State=tostring(events.State),
DatabaseName=tostring(events.DatabaseName),
LastUpdatedOn=todatetime(events.LastUpdatedOn),
StartedOn=todatetime(events.StartedOn),
RootActivityId=tostring(events.RootActivityId),
CorrelationId=tostring(events.CorrelationId),
Category=tostring(events.Category),
FailureReason=tostring(events.FailureReason),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table SynapseDXCommand policy update @'[{"Source": "SynapseDXCommandRaw", "Query": "SynapseDXCommandExpand()", "IsEnabled": "True", "IsTransactional": true}]'
