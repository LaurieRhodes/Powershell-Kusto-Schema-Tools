// ============================================================================
// Azure Data Explorer KQL Script for GKEHPADecision - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:24:58
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 32, Final columns: 32
// ============================================================================

.create-merge table GKEHPADecisionRaw (records:dynamic)

.alter-merge table GKEHPADecisionRaw policy retention softdelete = 1d

.alter table GKEHPADecisionRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table GKEHPADecisionRaw ingestion json mapping 'GKEHPADecisionRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table GKEHPADecision(
TimeGenerated:datetime,
TenantId:guid,
TopLevelLimit:string,
TargetRefName:string,
TargetRefKind:string,
TargetRefAPIVersion:string,
StartTime:datetime,
Replicas:int,
LeadingMetricIndex:int,
HPA:string,
ConfiguredSize:int,
ActuationTime:datetime,
ActuationLatencySeconds:real,
Zone:string,
VMName:string,
ComputeResourceName:string,
ProjectID:string,
Location:string,
ComponentName:string,
ComponentLocation:string,
ClusterName:string,
ReceiveTimestamp:datetime,
SourceLine:string,
SourceFile:string,
Severity:string,
LogName:string,
Labels:dynamic,
Message:string,
InsertId:string,
TopLevelOverride:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table GKEHPADecision policy caching hot = 1d

.create-or-alter function GKEHPADecisionExpand() {
GKEHPADecisionRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
TopLevelLimit=tostring(events.TopLevelLimit),
TargetRefName=tostring(events.TargetRefName),
TargetRefKind=tostring(events.TargetRefKind),
TargetRefAPIVersion=tostring(events.TargetRefAPIVersion),
StartTime=todatetime(events.StartTime),
Replicas=toint(events.Replicas),
LeadingMetricIndex=toint(events.LeadingMetricIndex),
HPA=tostring(events.HPA),
ConfiguredSize=toint(events.ConfiguredSize),
ActuationTime=todatetime(events.ActuationTime),
ActuationLatencySeconds=toreal(events.ActuationLatencySeconds),
Zone=tostring(events.Zone),
VMName=tostring(events.VMName),
ComputeResourceName=tostring(events.ComputeResourceName),
ProjectID=tostring(events.ProjectID),
Location=tostring(events.Location),
ComponentName=tostring(events.ComponentName),
ComponentLocation=tostring(events.ComponentLocation),
ClusterName=tostring(events.ClusterName),
ReceiveTimestamp=todatetime(events.ReceiveTimestamp),
SourceLine=tostring(events.SourceLine),
SourceFile=tostring(events.SourceFile),
Severity=tostring(events.Severity),
LogName=tostring(events.LogName),
Labels=todynamic(events.Labels),
Message=tostring(events.Message),
InsertId=tostring(events.InsertId),
TopLevelOverride=tostring(events.TopLevelOverride),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table GKEHPADecision policy update @'[{"Source": "GKEHPADecisionRaw", "Query": "GKEHPADecisionExpand()", "IsEnabled": "True", "IsTransactional": true}]'
