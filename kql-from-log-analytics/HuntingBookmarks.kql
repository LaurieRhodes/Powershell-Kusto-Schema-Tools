// ============================================================================
// Azure Data Explorer KQL Script for HuntingBookmarks - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:26:01
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 22, Final columns: 22
// ============================================================================

.create-merge table HuntingBookmarksRaw (records:dynamic)

.alter-merge table HuntingBookmarksRaw policy retention softdelete = 1d

.alter table HuntingBookmarksRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table HuntingBookmarksRaw ingestion json mapping 'HuntingBookmarksRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table HuntingBookmarks(
TimeGenerated:datetime,
TenantId:guid,
Notes:string,
QueryResultRow:string,
QueryText:string,
EventTimeUtc:datetime,
LastUpdatedTimeUtc:datetime,
CreatedTimeUtc:datetime,
UpdatedBy:string,
CreatedBy:string,
SoftDeleted:bool,
BookmarkType:string,
BookmarkId:string,
CorrelationId:string,
ResultDescription:string,
ResultType:string,
Category:string,
OperationName:string,
ResourceId:string,
SourceSystem:string,
BookmarkName:string,
Tags:string,
_TimeReceived:datetime)

.alter table HuntingBookmarks policy caching hot = 1d

.create-or-alter function HuntingBookmarksExpand() {
HuntingBookmarksRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Notes=tostring(events.Notes),
QueryResultRow=tostring(events.QueryResultRow),
QueryText=tostring(events.QueryText),
EventTimeUtc=todatetime(events.EventTimeUtc),
LastUpdatedTimeUtc=todatetime(events.LastUpdatedTimeUtc),
CreatedTimeUtc=todatetime(events.CreatedTimeUtc),
UpdatedBy=tostring(events.UpdatedBy),
CreatedBy=tostring(events.CreatedBy),
SoftDeleted=tobool(events.SoftDeleted),
BookmarkType=tostring(events.BookmarkType),
BookmarkId=tostring(events.BookmarkId),
CorrelationId=tostring(events.CorrelationId),
ResultDescription=tostring(events.ResultDescription),
ResultType=tostring(events.ResultType),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
ResourceId=tostring(events.ResourceId),
SourceSystem=tostring(events.SourceSystem),
BookmarkName=tostring(events.BookmarkName),
Tags=tostring(events.Tags),
_TimeReceived=todatetime(now())
}

.alter table HuntingBookmarks policy update @'[{"Source": "HuntingBookmarksRaw", "Query": "HuntingBookmarksExpand()", "IsEnabled": "True", "IsTransactional": true}]'
