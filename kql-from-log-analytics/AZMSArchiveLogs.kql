// ============================================================================
// Azure Data Explorer KQL Script for AZMSArchiveLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:20:22
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 15, Final columns: 15
// ============================================================================

.create-merge table AZMSArchiveLogsRaw (records:dynamic)

.alter-merge table AZMSArchiveLogsRaw policy retention softdelete = 1d

.alter table AZMSArchiveLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AZMSArchiveLogsRaw ingestion json mapping 'AZMSArchiveLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AZMSArchiveLogs(
TimeGenerated:datetime,
TenantId:guid,
TaskName:string,
ActivityId:string,
TrackingId:string,
EventhubName:string,
PartitionId:int,
ArchiveStep:string,
Failures:int,
DurationMs:int,
Message:string,
Provider:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AZMSArchiveLogs policy caching hot = 1d

.create-or-alter function AZMSArchiveLogsExpand() {
AZMSArchiveLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
TaskName=tostring(events.TaskName),
ActivityId=tostring(events.ActivityId),
TrackingId=tostring(events.TrackingId),
EventhubName=tostring(events.EventhubName),
PartitionId=toint(events.PartitionId),
ArchiveStep=tostring(events.ArchiveStep),
Failures=toint(events.Failures),
DurationMs=toint(events.DurationMs),
Message=tostring(events.Message),
Provider=tostring(events.Provider),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AZMSArchiveLogs policy update @'[{"Source": "AZMSArchiveLogsRaw", "Query": "AZMSArchiveLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
