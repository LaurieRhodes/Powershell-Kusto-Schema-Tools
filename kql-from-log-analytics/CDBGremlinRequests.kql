// ============================================================================
// Azure Data Explorer KQL Script for CDBGremlinRequests - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:20:59
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 23, Final columns: 23
// ============================================================================

.create-merge table CDBGremlinRequestsRaw (records:dynamic)

.alter-merge table CDBGremlinRequestsRaw policy retention softdelete = 1d

.alter table CDBGremlinRequestsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table CDBGremlinRequestsRaw ingestion json mapping 'CDBGremlinRequestsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table CDBGremlinRequests(
TimeGenerated:datetime,
TenantId:guid,
RegionName:string,
ResponseLength:real,
RequestLength:real,
RequestCharge:real,
DurationMs:real,
CollectionName:string,
DatabaseName:string,
RetriedDueToRateLimiting:bool,
RateLimitingDelayMs:real,
PIICommandText:string,
Address:string,
RetryCount:int,
AuthorizationTokenType:string,
ErrorCode:string,
UserAgent:string,
OperationName:string,
AccountName:string,
ActivityId:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table CDBGremlinRequests policy caching hot = 1d

.create-or-alter function CDBGremlinRequestsExpand() {
CDBGremlinRequestsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
RegionName=tostring(events.RegionName),
ResponseLength=toreal(events.ResponseLength),
RequestLength=toreal(events.RequestLength),
RequestCharge=toreal(events.RequestCharge),
DurationMs=toreal(events.DurationMs),
CollectionName=tostring(events.CollectionName),
DatabaseName=tostring(events.DatabaseName),
RetriedDueToRateLimiting=tobool(events.RetriedDueToRateLimiting),
RateLimitingDelayMs=toreal(events.RateLimitingDelayMs),
PIICommandText=tostring(events.PIICommandText),
Address=tostring(events.Address),
RetryCount=toint(events.RetryCount),
AuthorizationTokenType=tostring(events.AuthorizationTokenType),
ErrorCode=tostring(events.ErrorCode),
UserAgent=tostring(events.UserAgent),
OperationName=tostring(events.OperationName),
AccountName=tostring(events.AccountName),
ActivityId=tostring(events.ActivityId),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table CDBGremlinRequests policy update @'[{"Source": "CDBGremlinRequestsRaw", "Query": "CDBGremlinRequestsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
