// ============================================================================
// Azure Data Explorer KQL Script for AmlComputeClusterNodeEvent - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:17:18
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 46, Final columns: 46
// ============================================================================

.create-merge table AmlComputeClusterNodeEventRaw (records:dynamic)

.alter-merge table AmlComputeClusterNodeEventRaw policy retention softdelete = 1d

.alter table AmlComputeClusterNodeEventRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AmlComputeClusterNodeEventRaw ingestion json mapping 'AmlComputeClusterNodeEventRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AmlComputeClusterNodeEvent(
TimeGenerated:datetime,
TenantId:guid,
Publisher:string,
Offer:string,
Sku:string,
Version:string,
ClusterCreationTime:string,
ResizeStartTime:datetime,
ResizeEndTime:datetime,
NodeAllocationTime:datetime,
VmPriority:string,
NodeBootTime:datetime,
StartTaskEndTime:datetime,
TotalE2ETimeInSeconds:string,
InternalOperationName:string,
Node:string,
EnvNamespace:string,
Pod:string,
Container:string,
Host:string,
StartTaskStartTime:datetime,
VmFamilyName:string,
VmSize:string,
NodeId:string,
SourceSystem:string,
stream:string,
docker:string,
kubernetes:string,
tag:string,
LogEpochTimestamp:real,
OperationVersion:string,
ResultType:string,
ResultSignature:string,
ResultDescription:string,
DurationMs:real,
CallerIpAddress:string,
CorrelationId:string,
Identity:string,
Level:string,
Location:string,
OperationName:string,
Category:string,
ClusterName:string,
env_time:datetime,
FluentdIngestTimestamp:real,
Type:string,
_TimeReceived:datetime)

.alter table AmlComputeClusterNodeEvent policy caching hot = 1d

.create-or-alter function AmlComputeClusterNodeEventExpand() {
AmlComputeClusterNodeEventRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Publisher=tostring(events.Publisher),
Offer=tostring(events.Offer),
Sku=tostring(events.Sku),
Version=tostring(events.Version),
ClusterCreationTime=tostring(events.ClusterCreationTime),
ResizeStartTime=todatetime(events.ResizeStartTime),
ResizeEndTime=todatetime(events.ResizeEndTime),
NodeAllocationTime=todatetime(events.NodeAllocationTime),
VmPriority=tostring(events.VmPriority),
NodeBootTime=todatetime(events.NodeBootTime),
StartTaskEndTime=todatetime(events.StartTaskEndTime),
TotalE2ETimeInSeconds=tostring(events.TotalE2ETimeInSeconds),
InternalOperationName=tostring(events.InternalOperationName),
Node=tostring(events.Node),
EnvNamespace=tostring(events.EnvNamespace),
Pod=tostring(events.Pod),
Container=tostring(events.Container),
Host=tostring(events.Host),
StartTaskStartTime=todatetime(events.StartTaskStartTime),
VmFamilyName=tostring(events.VmFamilyName),
VmSize=tostring(events.VmSize),
NodeId=tostring(events.NodeId),
SourceSystem=tostring(events.SourceSystem),
stream=tostring(events.stream),
docker=tostring(events.docker),
kubernetes=tostring(events.kubernetes),
tag=tostring(events.tag),
LogEpochTimestamp=toreal(events.LogEpochTimestamp),
OperationVersion=tostring(events.OperationVersion),
ResultType=tostring(events.ResultType),
ResultSignature=tostring(events.ResultSignature),
ResultDescription=tostring(events.ResultDescription),
DurationMs=toreal(events.DurationMs),
CallerIpAddress=tostring(events.CallerIpAddress),
CorrelationId=tostring(events.CorrelationId),
Identity=tostring(events.Identity),
Level=tostring(events.Level),
Location=tostring(events.Location),
OperationName=tostring(events.OperationName),
Category=tostring(events.Category),
ClusterName=tostring(events.ClusterName),
env_time=todatetime(events.env_time),
FluentdIngestTimestamp=toreal(events.FluentdIngestTimestamp),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table AmlComputeClusterNodeEvent policy update @'[{"Source": "AmlComputeClusterNodeEventRaw", "Query": "AmlComputeClusterNodeEventExpand()", "IsEnabled": "True", "IsTransactional": true}]'
