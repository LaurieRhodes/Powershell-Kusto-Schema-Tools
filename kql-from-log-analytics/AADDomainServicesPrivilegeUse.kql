// ============================================================================
// Azure Data Explorer KQL Script for AADDomainServicesPrivilegeUse - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:14:29
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 23, Final columns: 23
// ============================================================================

.create-merge table AADDomainServicesPrivilegeUseRaw (records:dynamic)

.alter-merge table AADDomainServicesPrivilegeUseRaw policy retention softdelete = 1d

.alter table AADDomainServicesPrivilegeUseRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AADDomainServicesPrivilegeUseRaw ingestion json mapping 'AADDomainServicesPrivilegeUseRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AADDomainServicesPrivilegeUse(
TimeGenerated:datetime,
TenantId:guid,
NewState:int,
TransactionId:string,
ProcessName:string,
ProcessId:string,
aadds_RecordId:string,
aadds_ResourceManager:string,
aadds_NewState:int,
aadds_TransactionId:string,
aadds_ProcessName:string,
aadds_ProcessId:string,
CorrelationId:string,
ResultDescription:string,
ResultType:string,
Category:string,
OperationName:string,
ResourceId:string,
SourceSystem:string,
ResourceManager:string,
RecordId:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AADDomainServicesPrivilegeUse policy caching hot = 1d

.create-or-alter function AADDomainServicesPrivilegeUseExpand() {
AADDomainServicesPrivilegeUseRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
NewState=toint(events.NewState),
TransactionId=tostring(events.TransactionId),
ProcessName=tostring(events.ProcessName),
ProcessId=tostring(events.ProcessId),
aadds_RecordId=tostring(events.aadds_RecordId),
aadds_ResourceManager=tostring(events.aadds_ResourceManager),
aadds_NewState=toint(events.aadds_NewState),
aadds_TransactionId=tostring(events.aadds_TransactionId),
aadds_ProcessName=tostring(events.aadds_ProcessName),
aadds_ProcessId=tostring(events.aadds_ProcessId),
CorrelationId=tostring(events.CorrelationId),
ResultDescription=tostring(events.ResultDescription),
ResultType=tostring(events.ResultType),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
ResourceId=tostring(events.ResourceId),
SourceSystem=tostring(events.SourceSystem),
ResourceManager=tostring(events.ResourceManager),
RecordId=tostring(events.RecordId),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AADDomainServicesPrivilegeUse policy update @'[{"Source": "AADDomainServicesPrivilegeUseRaw", "Query": "AADDomainServicesPrivilegeUseExpand()", "IsEnabled": "True", "IsTransactional": true}]'
