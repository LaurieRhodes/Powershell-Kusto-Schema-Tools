// ============================================================================
// Azure Data Explorer KQL Script for CrowdStrikeDetections - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:21:44
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 27, Final columns: 27
// ============================================================================

.create-merge table CrowdStrikeDetectionsRaw (records:dynamic)

.alter-merge table CrowdStrikeDetectionsRaw policy retention softdelete = 1d

.alter table CrowdStrikeDetectionsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table CrowdStrikeDetectionsRaw ingestion json mapping 'CrowdStrikeDetectionsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table CrowdStrikeDetections(
TimeGenerated:datetime,
TenantId:guid,
ShowInUi:bool,
SecondsToTriaged:int,
SecondsToResolved:int,
QuarantinedFiles:dynamic,
OverwatchNotes:string,
MaxSeverityDisplayName:string,
MaxSeverity:int,
MaxConfidence:int,
LastBehavior:datetime,
HostInfo:dynamic,
Status:string,
FirstBehaviorTime:datetime,
Device:dynamic,
DetectionId:string,
DateUpdated:string,
CreatedTimestamp:datetime,
Cid:string,
BehaviorsProcessed:dynamic,
Behaviors:dynamic,
AssignedToUid:string,
AssignedToName:string,
AdversaryIds:dynamic,
EmailSent:bool,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table CrowdStrikeDetections policy caching hot = 1d

.create-or-alter function CrowdStrikeDetectionsExpand() {
CrowdStrikeDetectionsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ShowInUi=tobool(events.ShowInUi),
SecondsToTriaged=toint(events.SecondsToTriaged),
SecondsToResolved=toint(events.SecondsToResolved),
QuarantinedFiles=todynamic(events.QuarantinedFiles),
OverwatchNotes=tostring(events.OverwatchNotes),
MaxSeverityDisplayName=tostring(events.MaxSeverityDisplayName),
MaxSeverity=toint(events.MaxSeverity),
MaxConfidence=toint(events.MaxConfidence),
LastBehavior=todatetime(events.LastBehavior),
HostInfo=todynamic(events.HostInfo),
Status=tostring(events.Status),
FirstBehaviorTime=todatetime(events.FirstBehaviorTime),
Device=todynamic(events.Device),
DetectionId=tostring(events.DetectionId),
DateUpdated=tostring(events.DateUpdated),
CreatedTimestamp=todatetime(events.CreatedTimestamp),
Cid=tostring(events.Cid),
BehaviorsProcessed=todynamic(events.BehaviorsProcessed),
Behaviors=todynamic(events.Behaviors),
AssignedToUid=tostring(events.AssignedToUid),
AssignedToName=tostring(events.AssignedToName),
AdversaryIds=todynamic(events.AdversaryIds),
EmailSent=tobool(events.EmailSent),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table CrowdStrikeDetections policy update @'[{"Source": "CrowdStrikeDetectionsRaw", "Query": "CrowdStrikeDetectionsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
