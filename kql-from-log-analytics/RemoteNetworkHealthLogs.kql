// ============================================================================
// Azure Data Explorer KQL Script for RemoteNetworkHealthLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:28:47
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 14, Final columns: 14
// ============================================================================

.create-merge table RemoteNetworkHealthLogsRaw (records:dynamic)

.alter-merge table RemoteNetworkHealthLogsRaw policy retention softdelete = 1d

.alter table RemoteNetworkHealthLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table RemoteNetworkHealthLogsRaw ingestion json mapping 'RemoteNetworkHealthLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table RemoteNetworkHealthLogs(
TimeGenerated:datetime,
TenantId:guid,
CreatedDateTime:datetime,
Id:string,
RemoteNetworkId:string,
SourceIp:string,
DestinationIp:string,
Description:string,
BgpRoutesAdvertisedCount:int,
SentBytes:long,
ReceivedBytes:long,
Status:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table RemoteNetworkHealthLogs policy caching hot = 1d

.create-or-alter function RemoteNetworkHealthLogsExpand() {
RemoteNetworkHealthLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
CreatedDateTime=todatetime(events.CreatedDateTime),
Id=tostring(events.Id),
RemoteNetworkId=tostring(events.RemoteNetworkId),
SourceIp=tostring(events.SourceIp),
DestinationIp=tostring(events.DestinationIp),
Description=tostring(events.Description),
BgpRoutesAdvertisedCount=toint(events.BgpRoutesAdvertisedCount),
SentBytes=tolong(events.SentBytes),
ReceivedBytes=tolong(events.ReceivedBytes),
Status=tostring(events.Status),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table RemoteNetworkHealthLogs policy update @'[{"Source": "RemoteNetworkHealthLogsRaw", "Query": "RemoteNetworkHealthLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
