// ============================================================================
// Azure Data Explorer KQL Script for SecurityRegulatoryCompliance - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:06:05
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 19, Final columns: 19
// ============================================================================

.create-merge table SecurityRegulatoryComplianceRaw (records:dynamic)

.alter-merge table SecurityRegulatoryComplianceRaw policy retention softdelete = 1d

.alter table SecurityRegulatoryComplianceRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table SecurityRegulatoryComplianceRaw ingestion json mapping 'SecurityRegulatoryComplianceRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table SecurityRegulatoryCompliance(
TimeGenerated:datetime,
TenantId:guid,
RegulatoryComplianceSubscriptionId:string,
AssessedResourceId:string,
RecommendationId:string,
RecommendationName:string,
ComplianceStandard:string,
ComplianceControl:string,
SkippedResources:int,
PassedResources:int,
FailedResources:int,
State:string,
ResourceProviderType:string,
RecommendationLink:string,
IsSnapshot:bool,
Properties:dynamic,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table SecurityRegulatoryCompliance policy caching hot = 1d

.create-or-alter function SecurityRegulatoryComplianceExpand() {
SecurityRegulatoryComplianceRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
RegulatoryComplianceSubscriptionId=tostring(events.RegulatoryComplianceSubscriptionId),
AssessedResourceId=tostring(events.AssessedResourceId),
RecommendationId=tostring(events.RecommendationId),
RecommendationName=tostring(events.RecommendationName),
ComplianceStandard=tostring(events.ComplianceStandard),
ComplianceControl=tostring(events.ComplianceControl),
SkippedResources=toint(events.SkippedResources),
PassedResources=toint(events.PassedResources),
FailedResources=toint(events.FailedResources),
State=tostring(events.State),
ResourceProviderType=tostring(events.ResourceProviderType),
RecommendationLink=tostring(events.RecommendationLink),
IsSnapshot=tobool(events.IsSnapshot),
Properties=todynamic(events.Properties),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table SecurityRegulatoryCompliance policy update @'[{"Source": "SecurityRegulatoryComplianceRaw", "Query": "SecurityRegulatoryComplianceExpand()", "IsEnabled": "True", "IsTransactional": true}]'
