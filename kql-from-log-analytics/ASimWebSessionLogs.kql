// ============================================================================
// Azure Data Explorer KQL Script for ASimWebSessionLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:19:04
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 147, Final columns: 147
// ============================================================================

.create-merge table ASimWebSessionLogsRaw (records:dynamic)

.alter-merge table ASimWebSessionLogsRaw policy retention softdelete = 1d

.alter table ASimWebSessionLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table ASimWebSessionLogsRaw ingestion json mapping 'ASimWebSessionLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table ASimWebSessionLogs(
TimeGenerated:datetime,
TenantId:guid,
SrcDeviceType:string,
SrcGeoCountry:string,
SrcGeoRegion:string,
SrcGeoCity:string,
SrcGeoLatitude:real,
SrcGeoLongitude:real,
SrcDvcIdType:string,
SrcUserId:string,
SrcUsername:string,
SrcUsernameType:string,
SrcUserType:string,
SrcOriginalUserType:string,
Url:string,
UrlCategory:string,
SrcUserIdType:string,
UrlOriginal:string,
SrcDvcId:string,
SrcDomainType:string,
ThreatIsActive:bool,
ThreatFirstReportedTime:datetime,
ThreatLastReportedTime:datetime,
DstNatIpAddr:string,
DstNatPortNumber:int,
SrcNatIpAddr:string,
SrcFQDN:string,
SrcNatPortNumber:int,
SrcAppId:string,
SrcAppType:string,
SrcIpAddr:string,
SrcPortNumber:int,
SrcHostname:string,
SrcDomain:string,
SrcAppName:string,
ThreatOriginalConfidence:string,
HttpVersion:string,
HttpContentType:string,
ThreatCategory:string,
ThreatRiskLevel:int,
HttpHost:string,
EventOwner:string,
SrcProcessName:string,
SrcProcessId:string,
ThreatName:string,
SrcProcessGuid:string,
SrcUserScopeId:string,
SrcDvcScopeId:string,
SrcDvcScope:string,
DstDvcScopeId:string,
DstDvcScope:string,
SrcMacAddr:string,
SrcUserScope:string,
HttpRequestMethod:string,
ThreatId:string,
RuleNumber:int,
HttpContentFormat:string,
HttpReferrer:string,
HttpUserAgent:string,
HttpRequestXff:string,
HttpRequestTime:int,
HttpResponseTime:int,
Rule:string,
FileName:string,
FileSHA1:string,
FileSHA256:string,
FileSHA512:string,
FileSize:int,
FileContentType:string,
RuleName:string,
FileMD5:string,
ThreatConfidence:int,
ThreatField:string,
ThreatIpAddr:string,
EventOriginalUid:string,
EventOriginalType:string,
EventOriginalSubType:string,
EventOriginalResultDetails:string,
EventSeverity:string,
EventOriginalSeverity:string,
EventResultDetails:string,
EventProduct:string,
EventVendor:string,
EventSchemaVersion:string,
EventReportUrl:string,
AdditionalFields:dynamic,
DstAppName:string,
DstAppId:string,
EventProductVersion:string,
DstAppType:string,
EventResult:string,
EventType:string,
Dvc:string,
DvcIpAddr:string,
DvcHostname:string,
DvcDomain:string,
DvcDomainType:string,
DvcFQDN:string,
EventSubType:string,
DvcId:string,
DvcAction:string,
DvcOriginalAction:string,
EventMessage:string,
EventCount:int,
EventStartTime:datetime,
EventEndTime:datetime,
DvcIdType:string,
DstIpAddr:string,
DstPortNumber:int,
DstHostname:string,
NetworkProtocolVersion:string,
NetworkDirection:string,
NetworkDuration:int,
NetworkIcmpType:string,
NetworkIcmpCode:int,
NetworkConnectionHistory:string,
NetworkProtocol:string,
DstBytes:long,
NetworkBytes:long,
DstPackets:long,
SrcPackets:long,
NetworkPackets:long,
NetworkSessionId:string,
ThreatOriginalRiskLevel:string,
SrcBytes:long,
NetworkApplicationProtocol:string,
DstOriginalUserType:string,
DstUserType:string,
DstDomain:string,
DstDomainType:string,
DstFQDN:string,
DstDvcId:string,
DstDvcIdType:string,
DstDeviceType:string,
DstGeoCountry:string,
DstGeoRegion:string,
DstGeoCity:string,
DstGeoLatitude:real,
DstGeoLongitude:real,
DstUserId:string,
DstUserIdType:string,
DstUsername:string,
DstUsernameType:string,
DstMacAddr:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table ASimWebSessionLogs policy caching hot = 1d

.create-or-alter function ASimWebSessionLogsExpand() {
ASimWebSessionLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
SrcDeviceType=tostring(events.SrcDeviceType),
SrcGeoCountry=tostring(events.SrcGeoCountry),
SrcGeoRegion=tostring(events.SrcGeoRegion),
SrcGeoCity=tostring(events.SrcGeoCity),
SrcGeoLatitude=toreal(events.SrcGeoLatitude),
SrcGeoLongitude=toreal(events.SrcGeoLongitude),
SrcDvcIdType=tostring(events.SrcDvcIdType),
SrcUserId=tostring(events.SrcUserId),
SrcUsername=tostring(events.SrcUsername),
SrcUsernameType=tostring(events.SrcUsernameType),
SrcUserType=tostring(events.SrcUserType),
SrcOriginalUserType=tostring(events.SrcOriginalUserType),
Url=tostring(events.Url),
UrlCategory=tostring(events.UrlCategory),
SrcUserIdType=tostring(events.SrcUserIdType),
UrlOriginal=tostring(events.UrlOriginal),
SrcDvcId=tostring(events.SrcDvcId),
SrcDomainType=tostring(events.SrcDomainType),
ThreatIsActive=tobool(events.ThreatIsActive),
ThreatFirstReportedTime=todatetime(events.ThreatFirstReportedTime),
ThreatLastReportedTime=todatetime(events.ThreatLastReportedTime),
DstNatIpAddr=tostring(events.DstNatIpAddr),
DstNatPortNumber=toint(events.DstNatPortNumber),
SrcNatIpAddr=tostring(events.SrcNatIpAddr),
SrcFQDN=tostring(events.SrcFQDN),
SrcNatPortNumber=toint(events.SrcNatPortNumber),
SrcAppId=tostring(events.SrcAppId),
SrcAppType=tostring(events.SrcAppType),
SrcIpAddr=tostring(events.SrcIpAddr),
SrcPortNumber=toint(events.SrcPortNumber),
SrcHostname=tostring(events.SrcHostname),
SrcDomain=tostring(events.SrcDomain),
SrcAppName=tostring(events.SrcAppName),
ThreatOriginalConfidence=tostring(events.ThreatOriginalConfidence),
HttpVersion=tostring(events.HttpVersion),
HttpContentType=tostring(events.HttpContentType),
ThreatCategory=tostring(events.ThreatCategory),
ThreatRiskLevel=toint(events.ThreatRiskLevel),
HttpHost=tostring(events.HttpHost),
EventOwner=tostring(events.EventOwner),
SrcProcessName=tostring(events.SrcProcessName),
SrcProcessId=tostring(events.SrcProcessId),
ThreatName=tostring(events.ThreatName),
SrcProcessGuid=tostring(events.SrcProcessGuid),
SrcUserScopeId=tostring(events.SrcUserScopeId),
SrcDvcScopeId=tostring(events.SrcDvcScopeId),
SrcDvcScope=tostring(events.SrcDvcScope),
DstDvcScopeId=tostring(events.DstDvcScopeId),
DstDvcScope=tostring(events.DstDvcScope),
SrcMacAddr=tostring(events.SrcMacAddr),
SrcUserScope=tostring(events.SrcUserScope),
HttpRequestMethod=tostring(events.HttpRequestMethod),
ThreatId=tostring(events.ThreatId),
RuleNumber=toint(events.RuleNumber),
HttpContentFormat=tostring(events.HttpContentFormat),
HttpReferrer=tostring(events.HttpReferrer),
HttpUserAgent=tostring(events.HttpUserAgent),
HttpRequestXff=tostring(events.HttpRequestXff),
HttpRequestTime=toint(events.HttpRequestTime),
HttpResponseTime=toint(events.HttpResponseTime),
Rule=tostring(events.Rule),
FileName=tostring(events.FileName),
FileSHA1=tostring(events.FileSHA1),
FileSHA256=tostring(events.FileSHA256),
FileSHA512=tostring(events.FileSHA512),
FileSize=toint(events.FileSize),
FileContentType=tostring(events.FileContentType),
RuleName=tostring(events.RuleName),
FileMD5=tostring(events.FileMD5),
ThreatConfidence=toint(events.ThreatConfidence),
ThreatField=tostring(events.ThreatField),
ThreatIpAddr=tostring(events.ThreatIpAddr),
EventOriginalUid=tostring(events.EventOriginalUid),
EventOriginalType=tostring(events.EventOriginalType),
EventOriginalSubType=tostring(events.EventOriginalSubType),
EventOriginalResultDetails=tostring(events.EventOriginalResultDetails),
EventSeverity=tostring(events.EventSeverity),
EventOriginalSeverity=tostring(events.EventOriginalSeverity),
EventResultDetails=tostring(events.EventResultDetails),
EventProduct=tostring(events.EventProduct),
EventVendor=tostring(events.EventVendor),
EventSchemaVersion=tostring(events.EventSchemaVersion),
EventReportUrl=tostring(events.EventReportUrl),
AdditionalFields=todynamic(events.AdditionalFields),
DstAppName=tostring(events.DstAppName),
DstAppId=tostring(events.DstAppId),
EventProductVersion=tostring(events.EventProductVersion),
DstAppType=tostring(events.DstAppType),
EventResult=tostring(events.EventResult),
EventType=tostring(events.EventType),
Dvc=tostring(events.Dvc),
DvcIpAddr=tostring(events.DvcIpAddr),
DvcHostname=tostring(events.DvcHostname),
DvcDomain=tostring(events.DvcDomain),
DvcDomainType=tostring(events.DvcDomainType),
DvcFQDN=tostring(events.DvcFQDN),
EventSubType=tostring(events.EventSubType),
DvcId=tostring(events.DvcId),
DvcAction=tostring(events.DvcAction),
DvcOriginalAction=tostring(events.DvcOriginalAction),
EventMessage=tostring(events.EventMessage),
EventCount=toint(events.EventCount),
EventStartTime=todatetime(events.EventStartTime),
EventEndTime=todatetime(events.EventEndTime),
DvcIdType=tostring(events.DvcIdType),
DstIpAddr=tostring(events.DstIpAddr),
DstPortNumber=toint(events.DstPortNumber),
DstHostname=tostring(events.DstHostname),
NetworkProtocolVersion=tostring(events.NetworkProtocolVersion),
NetworkDirection=tostring(events.NetworkDirection),
NetworkDuration=toint(events.NetworkDuration),
NetworkIcmpType=tostring(events.NetworkIcmpType),
NetworkIcmpCode=toint(events.NetworkIcmpCode),
NetworkConnectionHistory=tostring(events.NetworkConnectionHistory),
NetworkProtocol=tostring(events.NetworkProtocol),
DstBytes=tolong(events.DstBytes),
NetworkBytes=tolong(events.NetworkBytes),
DstPackets=tolong(events.DstPackets),
SrcPackets=tolong(events.SrcPackets),
NetworkPackets=tolong(events.NetworkPackets),
NetworkSessionId=tostring(events.NetworkSessionId),
ThreatOriginalRiskLevel=tostring(events.ThreatOriginalRiskLevel),
SrcBytes=tolong(events.SrcBytes),
NetworkApplicationProtocol=tostring(events.NetworkApplicationProtocol),
DstOriginalUserType=tostring(events.DstOriginalUserType),
DstUserType=tostring(events.DstUserType),
DstDomain=tostring(events.DstDomain),
DstDomainType=tostring(events.DstDomainType),
DstFQDN=tostring(events.DstFQDN),
DstDvcId=tostring(events.DstDvcId),
DstDvcIdType=tostring(events.DstDvcIdType),
DstDeviceType=tostring(events.DstDeviceType),
DstGeoCountry=tostring(events.DstGeoCountry),
DstGeoRegion=tostring(events.DstGeoRegion),
DstGeoCity=tostring(events.DstGeoCity),
DstGeoLatitude=toreal(events.DstGeoLatitude),
DstGeoLongitude=toreal(events.DstGeoLongitude),
DstUserId=tostring(events.DstUserId),
DstUserIdType=tostring(events.DstUserIdType),
DstUsername=tostring(events.DstUsername),
DstUsernameType=tostring(events.DstUsernameType),
DstMacAddr=tostring(events.DstMacAddr),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table ASimWebSessionLogs policy update @'[{"Source": "ASimWebSessionLogsRaw", "Query": "ASimWebSessionLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
