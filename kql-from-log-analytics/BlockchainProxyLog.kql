// ============================================================================
// Azure Data Explorer KQL Script for BlockchainProxyLog - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:20:47
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 23, Final columns: 23
// ============================================================================

.create-merge table BlockchainProxyLogRaw (records:dynamic)

.alter-merge table BlockchainProxyLogRaw policy retention softdelete = 1d

.alter table BlockchainProxyLogRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table BlockchainProxyLogRaw ingestion json mapping 'BlockchainProxyLogRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table BlockchainProxyLog(
TimeGenerated:datetime,
TenantId:guid,
Tenant:string,
RequestSize:int,
Remote:string,
Consortium:string,
BlockchainMemberName:string,
RequestMethodName:string,
NodeHost:string,
Code:string,
Agent:string,
EthMethod:string,
BlockchainNodeName:string,
NodeLocation:string,
LogLevel:string,
Category:string,
OperationName:string,
ResourceId:string,
SourceSystem:string,
PublicUser:string,
RequestTime:real,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table BlockchainProxyLog policy caching hot = 1d

.create-or-alter function BlockchainProxyLogExpand() {
BlockchainProxyLogRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Tenant=tostring(events.Tenant),
RequestSize=toint(events.RequestSize),
Remote=tostring(events.Remote),
Consortium=tostring(events.Consortium),
BlockchainMemberName=tostring(events.BlockchainMemberName),
RequestMethodName=tostring(events.RequestMethodName),
NodeHost=tostring(events.NodeHost),
Code=tostring(events.Code),
Agent=tostring(events.Agent),
EthMethod=tostring(events.EthMethod),
BlockchainNodeName=tostring(events.BlockchainNodeName),
NodeLocation=tostring(events.NodeLocation),
LogLevel=tostring(events.LogLevel),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
ResourceId=tostring(events.ResourceId),
SourceSystem=tostring(events.SourceSystem),
PublicUser=tostring(events.PublicUser),
RequestTime=toreal(events.RequestTime),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table BlockchainProxyLog policy update @'[{"Source": "BlockchainProxyLogRaw", "Query": "BlockchainProxyLogExpand()", "IsEnabled": "True", "IsTransactional": true}]'
