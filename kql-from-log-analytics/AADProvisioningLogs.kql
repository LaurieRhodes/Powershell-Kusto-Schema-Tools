// ============================================================================
// Azure Data Explorer KQL Script for AADProvisioningLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:14:37
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 28, Final columns: 28
// ============================================================================

.create-merge table AADProvisioningLogsRaw (records:dynamic)

.alter-merge table AADProvisioningLogsRaw policy retention softdelete = 1d

.alter table AADProvisioningLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AADProvisioningLogsRaw ingestion json mapping 'AADProvisioningLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AADProvisioningLogs(
TimeGenerated:datetime,
TenantId:guid,
TargetSystem:string,
TargetIdentity:string,
StatusInfo:string,
SourceSystem:string,
SourceIdentity:string,
ServicePrincipal:string,
ProvisioningSteps:string,
ModifiedProperties:string,
JobId:string,
InitiatedBy:string,
Id:string,
CycleId:string,
ChangeId:string,
Action:string,
CorrelationId:string,
DurationMs:long,
ResultDescription:string,
ResultSignature:string,
ResultType:string,
Category:string,
OperationVersion:string,
OperationName:string,
AADTenantId:string,
ProvisioningAction:string,
ProvisioningStatusInfo:string,
Type:string,
_TimeReceived:datetime)

.alter table AADProvisioningLogs policy caching hot = 1d

.create-or-alter function AADProvisioningLogsExpand() {
AADProvisioningLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
TargetSystem=tostring(events.TargetSystem),
TargetIdentity=tostring(events.TargetIdentity),
StatusInfo=tostring(events.StatusInfo),
SourceSystem=tostring(events.SourceSystem),
SourceIdentity=tostring(events.SourceIdentity),
ServicePrincipal=tostring(events.ServicePrincipal),
ProvisioningSteps=tostring(events.ProvisioningSteps),
ModifiedProperties=tostring(events.ModifiedProperties),
JobId=tostring(events.JobId),
InitiatedBy=tostring(events.InitiatedBy),
Id=tostring(events.Id),
CycleId=tostring(events.CycleId),
ChangeId=tostring(events.ChangeId),
Action=tostring(events.Action),
CorrelationId=tostring(events.CorrelationId),
DurationMs=tolong(events.DurationMs),
ResultDescription=tostring(events.ResultDescription),
ResultSignature=tostring(events.ResultSignature),
ResultType=tostring(events.ResultType),
Category=tostring(events.Category),
OperationVersion=tostring(events.OperationVersion),
OperationName=tostring(events.OperationName),
AADTenantId=tostring(events.AADTenantId),
ProvisioningAction=tostring(events.ProvisioningAction),
ProvisioningStatusInfo=tostring(events.ProvisioningStatusInfo),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table AADProvisioningLogs policy update @'[{"Source": "AADProvisioningLogsRaw", "Query": "AADProvisioningLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
