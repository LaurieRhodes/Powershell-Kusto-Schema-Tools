// ============================================================================
// Azure Data Explorer KQL Script for UserAccessAnalytics - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:08:04
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 18, Final columns: 18
// ============================================================================

.create-merge table UserAccessAnalyticsRaw (records:dynamic)

.alter-merge table UserAccessAnalyticsRaw policy retention softdelete = 1d

.alter table UserAccessAnalyticsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table UserAccessAnalyticsRaw ingestion json mapping 'UserAccessAnalyticsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table UserAccessAnalytics(
TimeGenerated:datetime,
TenantId:guid,
AADTenantId:string,
SourceEntityType:string,
SourceEntityId:string,
SourceEntityName:string,
TargetEntityType:string,
TargetEntityId:string,
TargetEntityName:string,
AccessLevel:string,
AccessType:string,
AccessStartTime:datetime,
AccessEndTime:datetime,
AccessEndReason:string,
AccessId:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table UserAccessAnalytics policy caching hot = 1d

.create-or-alter function UserAccessAnalyticsExpand() {
UserAccessAnalyticsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
AADTenantId=tostring(events.AADTenantId),
SourceEntityType=tostring(events.SourceEntityType),
SourceEntityId=tostring(events.SourceEntityId),
SourceEntityName=tostring(events.SourceEntityName),
TargetEntityType=tostring(events.TargetEntityType),
TargetEntityId=tostring(events.TargetEntityId),
TargetEntityName=tostring(events.TargetEntityName),
AccessLevel=tostring(events.AccessLevel),
AccessType=tostring(events.AccessType),
AccessStartTime=todatetime(events.AccessStartTime),
AccessEndTime=todatetime(events.AccessEndTime),
AccessEndReason=tostring(events.AccessEndReason),
AccessId=tostring(events.AccessId),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table UserAccessAnalytics policy update @'[{"Source": "UserAccessAnalyticsRaw", "Query": "UserAccessAnalyticsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
