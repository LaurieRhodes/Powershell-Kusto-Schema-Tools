// ============================================================================
// Azure Data Explorer KQL Script for AZFWNetworkRuleAggregation - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:20:07
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 17, Final columns: 17
// ============================================================================

.create-merge table AZFWNetworkRuleAggregationRaw (records:dynamic)

.alter-merge table AZFWNetworkRuleAggregationRaw policy retention softdelete = 1d

.alter table AZFWNetworkRuleAggregationRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AZFWNetworkRuleAggregationRaw ingestion json mapping 'AZFWNetworkRuleAggregationRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AZFWNetworkRuleAggregation(
TimeGenerated:datetime,
TenantId:guid,
Protocol:string,
SourceIp:string,
DestinationIp:string,
DestinationPort:int,
Action:string,
ActionReason:string,
Policy:string,
RuleCollectionGroup:string,
RuleCollection:string,
Rule:string,
IsDefaultRule:bool,
NetworkRuleCount:int,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AZFWNetworkRuleAggregation policy caching hot = 1d

.create-or-alter function AZFWNetworkRuleAggregationExpand() {
AZFWNetworkRuleAggregationRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Protocol=tostring(events.Protocol),
SourceIp=tostring(events.SourceIp),
DestinationIp=tostring(events.DestinationIp),
DestinationPort=toint(events.DestinationPort),
Action=tostring(events.Action),
ActionReason=tostring(events.ActionReason),
Policy=tostring(events.Policy),
RuleCollectionGroup=tostring(events.RuleCollectionGroup),
RuleCollection=tostring(events.RuleCollection),
Rule=tostring(events.Rule),
IsDefaultRule=tobool(events.IsDefaultRule),
NetworkRuleCount=toint(events.NetworkRuleCount),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AZFWNetworkRuleAggregation policy update @'[{"Source": "AZFWNetworkRuleAggregationRaw", "Query": "AZFWNetworkRuleAggregationExpand()", "IsEnabled": "True", "IsTransactional": true}]'
