// ============================================================================
// Azure Data Explorer KQL Script for DevCenterConnectionLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:23:29
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 23, Final columns: 23
// ============================================================================

.create-merge table DevCenterConnectionLogsRaw (records:dynamic)

.alter-merge table DevCenterConnectionLogsRaw policy retention softdelete = 1d

.alter table DevCenterConnectionLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table DevCenterConnectionLogsRaw ingestion json mapping 'DevCenterConnectionLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table DevCenterConnectionLogs(
TimeGenerated:datetime,
TenantId:guid,
SubnetResourceId:string,
DevBoxName:string,
CloudPcId:string,
ResultType:string,
UdpType:string,
SessionHostOSVersion:string,
SessionHostOSDescription:string,
SessionHostAgentVersion:string,
SessionHostPoolType:string,
ClientVersion:string,
ClientOS:string,
ClientType:string,
State:string,
SessionHostResourceId:string,
SessionHostName:string,
OperationName:string,
ActivityId:string,
NicResourceId:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table DevCenterConnectionLogs policy caching hot = 1d

.create-or-alter function DevCenterConnectionLogsExpand() {
DevCenterConnectionLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
SubnetResourceId=tostring(events.SubnetResourceId),
DevBoxName=tostring(events.DevBoxName),
CloudPcId=tostring(events.CloudPcId),
ResultType=tostring(events.ResultType),
UdpType=tostring(events.UdpType),
SessionHostOSVersion=tostring(events.SessionHostOSVersion),
SessionHostOSDescription=tostring(events.SessionHostOSDescription),
SessionHostAgentVersion=tostring(events.SessionHostAgentVersion),
SessionHostPoolType=tostring(events.SessionHostPoolType),
ClientVersion=tostring(events.ClientVersion),
ClientOS=tostring(events.ClientOS),
ClientType=tostring(events.ClientType),
State=tostring(events.State),
SessionHostResourceId=tostring(events.SessionHostResourceId),
SessionHostName=tostring(events.SessionHostName),
OperationName=tostring(events.OperationName),
ActivityId=tostring(events.ActivityId),
NicResourceId=tostring(events.NicResourceId),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table DevCenterConnectionLogs policy update @'[{"Source": "DevCenterConnectionLogsRaw", "Query": "DevCenterConnectionLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
