// ============================================================================
// Azure Data Explorer KQL Script for ADFSSISPackageEventMessages - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:16:01
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 27, Final columns: 27
// ============================================================================

.create-merge table ADFSSISPackageEventMessagesRaw (records:dynamic)

.alter-merge table ADFSSISPackageEventMessagesRaw policy retention softdelete = 1d

.alter table ADFSSISPackageEventMessagesRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table ADFSSISPackageEventMessagesRaw ingestion json mapping 'ADFSSISPackageEventMessagesRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table ADFSSISPackageEventMessages(
TimeGenerated:datetime,
TenantId:guid,
MessageCode:int,
ThreadId:int,
ExecutionPath:string,
PackagePath:string,
SubcomponentName:string,
MessageSourceId:string,
MessageSourceName:string,
EventName:string,
PackageName:string,
ExtendedInfoId:long,
Message:string,
MessageSourceType:int,
MessageType:int,
MessageTime:datetime,
OperationId:long,
Level:string,
IntegrationRuntimeName:string,
DataFactoryName:string,
CorrelationId:string,
Category:string,
OperationName:string,
EventMessageGuid:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table ADFSSISPackageEventMessages policy caching hot = 1d

.create-or-alter function ADFSSISPackageEventMessagesExpand() {
ADFSSISPackageEventMessagesRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
MessageCode=toint(events.MessageCode),
ThreadId=toint(events.ThreadId),
ExecutionPath=tostring(events.ExecutionPath),
PackagePath=tostring(events.PackagePath),
SubcomponentName=tostring(events.SubcomponentName),
MessageSourceId=tostring(events.MessageSourceId),
MessageSourceName=tostring(events.MessageSourceName),
EventName=tostring(events.EventName),
PackageName=tostring(events.PackageName),
ExtendedInfoId=tolong(events.ExtendedInfoId),
Message=tostring(events.Message),
MessageSourceType=toint(events.MessageSourceType),
MessageType=toint(events.MessageType),
MessageTime=todatetime(events.MessageTime),
OperationId=tolong(events.OperationId),
Level=tostring(events.Level),
IntegrationRuntimeName=tostring(events.IntegrationRuntimeName),
DataFactoryName=tostring(events.DataFactoryName),
CorrelationId=tostring(events.CorrelationId),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
EventMessageGuid=tostring(events.EventMessageGuid),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table ADFSSISPackageEventMessages policy update @'[{"Source": "ADFSSISPackageEventMessagesRaw", "Query": "ADFSSISPackageEventMessagesExpand()", "IsEnabled": "True", "IsTransactional": true}]'
