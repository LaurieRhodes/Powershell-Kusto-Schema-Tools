// ============================================================================
// Azure Data Explorer KQL Script for AOIDigestion - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:17:55
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 9, Final columns: 9
// ============================================================================

.create-merge table AOIDigestionRaw (records:dynamic)

.alter-merge table AOIDigestionRaw policy retention softdelete = 1d

.alter table AOIDigestionRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AOIDigestionRaw ingestion json mapping 'AOIDigestionRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AOIDigestion(
TimeGenerated:datetime,
TenantId:guid,
Level:string,
Message:string,
FilePath:string,
Datatype:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AOIDigestion policy caching hot = 1d

.create-or-alter function AOIDigestionExpand() {
AOIDigestionRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Level=tostring(events.Level),
Message=tostring(events.Message),
FilePath=tostring(events.FilePath),
Datatype=tostring(events.Datatype),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AOIDigestion policy update @'[{"Source": "AOIDigestionRaw", "Query": "AOIDigestionExpand()", "IsEnabled": "True", "IsTransactional": true}]'
