// ============================================================================
// Azure Data Explorer KQL Script for TSIIngress - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:30:47
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 15, Final columns: 15
// ============================================================================

.create-merge table TSIIngressRaw (records:dynamic)

.alter-merge table TSIIngressRaw policy retention softdelete = 1d

.alter table TSIIngressRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table TSIIngressRaw ingestion json mapping 'TSIIngressRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table TSIIngress(
TimeGenerated:datetime,
TenantId:guid,
Location:string,
Category:string,
OperationName:string,
CorrelationId:string,
Level:string,
ResultDescription:string,
Message:string,
ErrorCode:string,
EventSourceType:string,
EventSourceProperties:dynamic,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table TSIIngress policy caching hot = 1d

.create-or-alter function TSIIngressExpand() {
TSIIngressRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Location=tostring(events.Location),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
CorrelationId=tostring(events.CorrelationId),
Level=tostring(events.Level),
ResultDescription=tostring(events.ResultDescription),
Message=tostring(events.Message),
ErrorCode=tostring(events.ErrorCode),
EventSourceType=tostring(events.EventSourceType),
EventSourceProperties=todynamic(events.EventSourceProperties),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table TSIIngress policy update @'[{"Source": "TSIIngressRaw", "Query": "TSIIngressExpand()", "IsEnabled": "True", "IsTransactional": true}]'
