// ============================================================================
// Azure Data Explorer KQL Script for AppPageViews - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:18:17
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 36, Final columns: 36
// ============================================================================

.create-merge table AppPageViewsRaw (records:dynamic)

.alter-merge table AppPageViewsRaw policy retention softdelete = 1d

.alter table AppPageViewsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AppPageViewsRaw ingestion json mapping 'AppPageViewsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AppPageViews(
TimeGenerated:datetime,
TenantId:guid,
ItemCount:int,
SDKVersion:string,
IKey:string,
ResourceGUID:string,
ClientBrowser:string,
ClientCountryOrRegion:string,
ClientStateOrProvince:string,
ClientCity:string,
ClientIP:string,
ClientOS:string,
ClientModel:string,
ClientType:string,
AppRoleInstance:string,
AppRoleName:string,
SourceSystem:string,
AppVersion:string,
UserAuthenticatedId:string,
UserId:string,
SessionId:string,
SyntheticSource:string,
ParentId:string,
OperationId:string,
OperationName:string,
Measurements:dynamic,
Properties:dynamic,
PerformanceBucket:string,
DurationMs:real,
Url:string,
Name:string,
PageViewId:string,
UserAccountId:string,
Id:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AppPageViews policy caching hot = 1d

.create-or-alter function AppPageViewsExpand() {
AppPageViewsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ItemCount=toint(events.ItemCount),
SDKVersion=tostring(events.SDKVersion),
IKey=tostring(events.IKey),
ResourceGUID=tostring(events.ResourceGUID),
ClientBrowser=tostring(events.ClientBrowser),
ClientCountryOrRegion=tostring(events.ClientCountryOrRegion),
ClientStateOrProvince=tostring(events.ClientStateOrProvince),
ClientCity=tostring(events.ClientCity),
ClientIP=tostring(events.ClientIP),
ClientOS=tostring(events.ClientOS),
ClientModel=tostring(events.ClientModel),
ClientType=tostring(events.ClientType),
AppRoleInstance=tostring(events.AppRoleInstance),
AppRoleName=tostring(events.AppRoleName),
SourceSystem=tostring(events.SourceSystem),
AppVersion=tostring(events.AppVersion),
UserAuthenticatedId=tostring(events.UserAuthenticatedId),
UserId=tostring(events.UserId),
SessionId=tostring(events.SessionId),
SyntheticSource=tostring(events.SyntheticSource),
ParentId=tostring(events.ParentId),
OperationId=tostring(events.OperationId),
OperationName=tostring(events.OperationName),
Measurements=todynamic(events.Measurements),
Properties=todynamic(events.Properties),
PerformanceBucket=tostring(events.PerformanceBucket),
DurationMs=toreal(events.DurationMs),
Url=tostring(events.Url),
Name=tostring(events.Name),
PageViewId=tostring(events.PageViewId),
UserAccountId=tostring(events.UserAccountId),
Id=tostring(events.Id),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AppPageViews policy update @'[{"Source": "AppPageViewsRaw", "Query": "AppPageViewsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
