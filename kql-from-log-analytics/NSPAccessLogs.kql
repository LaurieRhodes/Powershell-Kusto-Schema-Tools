// ============================================================================
// Azure Data Explorer KQL Script for NSPAccessLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:27:28
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 37, Final columns: 37
// ============================================================================

.create-merge table NSPAccessLogsRaw (records:dynamic)

.alter-merge table NSPAccessLogsRaw policy retention softdelete = 1d

.alter table NSPAccessLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table NSPAccessLogsRaw ingestion json mapping 'NSPAccessLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table NSPAccessLogs(
TimeGenerated:datetime,
TenantId:guid,
RuleType:string,
ResultAction:string,
ResultDirection:string,
AccessRuleVersion:string,
DestinationPhoneNumber:string,
DestinationEmailAddress:string,
DestinationProtocol:string,
DestinationPort:string,
DestinationParameters:string,
DestinationFqdn:string,
DestinationResourceId:string,
SourceParameters:string,
SourceAppId:string,
SourcePerimeterGuids:string,
SourceProtocol:string,
SourcePort:string,
SourceIpAddress:string,
TimeGeneratedEndTime:datetime,
Count:int,
OperationName:string,
OperationVersion:string,
Category:string,
Location:string,
TrafficType:string,
ResultDescription:string,
Parameters:string,
ServiceResourceId:string,
ServiceFqdn:string,
AppId:string,
MatchedRule:string,
SourceResourceId:string,
Profile:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table NSPAccessLogs policy caching hot = 1d

.create-or-alter function NSPAccessLogsExpand() {
NSPAccessLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
RuleType=tostring(events.RuleType),
ResultAction=tostring(events.ResultAction),
ResultDirection=tostring(events.ResultDirection),
AccessRuleVersion=tostring(events.AccessRuleVersion),
DestinationPhoneNumber=tostring(events.DestinationPhoneNumber),
DestinationEmailAddress=tostring(events.DestinationEmailAddress),
DestinationProtocol=tostring(events.DestinationProtocol),
DestinationPort=tostring(events.DestinationPort),
DestinationParameters=tostring(events.DestinationParameters),
DestinationFqdn=tostring(events.DestinationFqdn),
DestinationResourceId=tostring(events.DestinationResourceId),
SourceParameters=tostring(events.SourceParameters),
SourceAppId=tostring(events.SourceAppId),
SourcePerimeterGuids=tostring(events.SourcePerimeterGuids),
SourceProtocol=tostring(events.SourceProtocol),
SourcePort=tostring(events.SourcePort),
SourceIpAddress=tostring(events.SourceIpAddress),
TimeGeneratedEndTime=todatetime(events.TimeGeneratedEndTime),
Count=toint(events.Count),
OperationName=tostring(events.OperationName),
OperationVersion=tostring(events.OperationVersion),
Category=tostring(events.Category),
Location=tostring(events.Location),
TrafficType=tostring(events.TrafficType),
ResultDescription=tostring(events.ResultDescription),
Parameters=tostring(events.Parameters),
ServiceResourceId=tostring(events.ServiceResourceId),
ServiceFqdn=tostring(events.ServiceFqdn),
AppId=tostring(events.AppId),
MatchedRule=tostring(events.MatchedRule),
SourceResourceId=tostring(events.SourceResourceId),
Profile=tostring(events.Profile),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table NSPAccessLogs policy update @'[{"Source": "NSPAccessLogsRaw", "Query": "NSPAccessLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
