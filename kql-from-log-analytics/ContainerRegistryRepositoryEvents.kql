// ============================================================================
// Azure Data Explorer KQL Script for ContainerRegistryRepositoryEvents - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:21:35
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 23, Final columns: 23
// ============================================================================

.create-merge table ContainerRegistryRepositoryEventsRaw (records:dynamic)

.alter-merge table ContainerRegistryRepositoryEventsRaw policy retention softdelete = 1d

.alter table ContainerRegistryRepositoryEventsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table ContainerRegistryRepositoryEventsRaw ingestion json mapping 'ContainerRegistryRepositoryEventsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table ContainerRegistryRepositoryEvents(
TimeGenerated:datetime,
TenantId:guid,
DurationMs:string,
CallerIpAddress:string,
ResultDescription:string,
Category:string,
ResultType:string,
Region:string,
CorrelationId:guid,
ArtifactType:string,
Size:int,
MediaType:string,
Digest:string,
Tag:string,
Repository:string,
Identity:string,
LoginServer:string,
OperationName:string,
SourceSystem:string,
UserTenantId:string,
UserAgent:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table ContainerRegistryRepositoryEvents policy caching hot = 1d

.create-or-alter function ContainerRegistryRepositoryEventsExpand() {
ContainerRegistryRepositoryEventsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
DurationMs=tostring(events.DurationMs),
CallerIpAddress=tostring(events.CallerIpAddress),
ResultDescription=tostring(events.ResultDescription),
Category=tostring(events.Category),
ResultType=tostring(events.ResultType),
Region=tostring(events.Region),
CorrelationId=toguid(events.CorrelationId),
ArtifactType=tostring(events.ArtifactType),
Size=toint(events.Size),
MediaType=tostring(events.MediaType),
Digest=tostring(events.Digest),
Tag=tostring(events.Tag),
Repository=tostring(events.Repository),
Identity=tostring(events.Identity),
LoginServer=tostring(events.LoginServer),
OperationName=tostring(events.OperationName),
SourceSystem=tostring(events.SourceSystem),
UserTenantId=tostring(events.UserTenantId),
UserAgent=tostring(events.UserAgent),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table ContainerRegistryRepositoryEvents policy update @'[{"Source": "ContainerRegistryRepositoryEventsRaw", "Query": "ContainerRegistryRepositoryEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
