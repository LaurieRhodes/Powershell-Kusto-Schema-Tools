// ============================================================================
// Azure Data Explorer KQL Script for GCPDNS - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:24:39
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 79, Final columns: 79
// ============================================================================

.create-merge table GCPDNSRaw (records:dynamic)

.alter-merge table GCPDNSRaw policy retention softdelete = 1d

.alter table GCPDNSRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table GCPDNSRaw ingestion json mapping 'GCPDNSRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table GCPDNS(
TimeGenerated:datetime,
TenantId:guid,
SourceIP:string,
VmZoneName:string,
QueryName:string,
AuthAnswer:bool,
ResponseCode:string,
VmInstanceName:string,
VmInstanceId:string,
Rdata:string,
QueryType:string,
Protocol:string,
VmProjectId:string,
Timestamp:datetime,
Severity:string,
GCPResourceType:string,
ResourceLabelsProjectId:string,
DestinationIP:string,
ReqManZoneCloudLogConfigEnableLogging:bool,
ResManZoneCloudLogConfigEnableLogging:bool,
ResourceLabelsPolicyName:string,
SourceNetwork:string,
ServerLatency:string,
ResponseOperationUser:string,
ResponseOperationType:string,
ResponseOperationStatus:string,
ResponseOperationStartTime:datetime,
ResponseOperationId:string,
ResourceLabelsLocation:string,
ResponseOpZoneContextOldValue:string,
ResponseManagedZoneRrsetCount:string,
ResponseChangeAdditions:string,
RespManZonePrivVisibConfigNetworks:string,
ResourceLabelsZoneName:string,
ResourceLabelsTargetType:string,
ResourceLabelsTargetName:string,
ResourceLabelsSourceType:string,
ResponseOpZoneContextNewValue:string,
VmInstanceIdString:string,
StatusCode:string,
ResponseManagedZoneVisibility:string,
RequestManagedZoneVisibility:string,
RequestManagedZone:string,
RequestManagedZoneName:string,
RequestManagedZoneDnsName:string,
RequestManagedZoneDescription:string,
RequestChangeDeletions:string,
RequestChangeAdditions:string,
RequestAPIType:string,
MethodName:string,
AuthorizationInfo:string,
AuthenticationInfoPrincipalSubject:string,
AuthenticationInfoPrincipalEmail:string,
PayloadType:string,
LogName:string,
InsertId:string,
ReqManZonePrivVisibConfigNetworks:string,
RequestName:string,
RequestProject:string,
RequestType:string,
ResponseManagedZoneNameServers:string,
ResponseManagedZoneName:string,
ResponseManagedZoneId:string,
ResponseManagedZoneFingerprint:string,
ResponseManagedZoneDnsName:string,
ResponseManagedZoneDescription:string,
ResponseManagedZoneCreationTime:datetime,
ServiceName:string,
ResponseChangeStatus:string,
ResponseChangeId:string,
ResponseChangeDeletions:string,
ResponseType:string,
GCPResourceName:string,
ReqmetaRequestAttributesTime:datetime,
ReqmetaCallerSuppliedUserAgent:string,
RequestMetadataCallerIp:string,
ResponseChangeStartTime:datetime,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table GCPDNS policy caching hot = 1d

.create-or-alter function GCPDNSExpand() {
GCPDNSRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
SourceIP=tostring(events.SourceIP),
VmZoneName=tostring(events.VmZoneName),
QueryName=tostring(events.QueryName),
AuthAnswer=tobool(events.AuthAnswer),
ResponseCode=tostring(events.ResponseCode),
VmInstanceName=tostring(events.VmInstanceName),
VmInstanceId=tostring(events.VmInstanceId),
Rdata=tostring(events.Rdata),
QueryType=tostring(events.QueryType),
Protocol=tostring(events.Protocol),
VmProjectId=tostring(events.VmProjectId),
Timestamp=todatetime(events.Timestamp),
Severity=tostring(events.Severity),
GCPResourceType=tostring(events.GCPResourceType),
ResourceLabelsProjectId=tostring(events.ResourceLabelsProjectId),
DestinationIP=tostring(events.DestinationIP),
ReqManZoneCloudLogConfigEnableLogging=tobool(events.ReqManZoneCloudLogConfigEnableLogging),
ResManZoneCloudLogConfigEnableLogging=tobool(events.ResManZoneCloudLogConfigEnableLogging),
ResourceLabelsPolicyName=tostring(events.ResourceLabelsPolicyName),
SourceNetwork=tostring(events.SourceNetwork),
ServerLatency=tostring(events.ServerLatency),
ResponseOperationUser=tostring(events.ResponseOperationUser),
ResponseOperationType=tostring(events.ResponseOperationType),
ResponseOperationStatus=tostring(events.ResponseOperationStatus),
ResponseOperationStartTime=todatetime(events.ResponseOperationStartTime),
ResponseOperationId=tostring(events.ResponseOperationId),
ResourceLabelsLocation=tostring(events.ResourceLabelsLocation),
ResponseOpZoneContextOldValue=tostring(events.ResponseOpZoneContextOldValue),
ResponseManagedZoneRrsetCount=tostring(events.ResponseManagedZoneRrsetCount),
ResponseChangeAdditions=tostring(events.ResponseChangeAdditions),
RespManZonePrivVisibConfigNetworks=tostring(events.RespManZonePrivVisibConfigNetworks),
ResourceLabelsZoneName=tostring(events.ResourceLabelsZoneName),
ResourceLabelsTargetType=tostring(events.ResourceLabelsTargetType),
ResourceLabelsTargetName=tostring(events.ResourceLabelsTargetName),
ResourceLabelsSourceType=tostring(events.ResourceLabelsSourceType),
ResponseOpZoneContextNewValue=tostring(events.ResponseOpZoneContextNewValue),
VmInstanceIdString=tostring(events.VmInstanceIdString),
StatusCode=tostring(events.StatusCode),
ResponseManagedZoneVisibility=tostring(events.ResponseManagedZoneVisibility),
RequestManagedZoneVisibility=tostring(events.RequestManagedZoneVisibility),
RequestManagedZone=tostring(events.RequestManagedZone),
RequestManagedZoneName=tostring(events.RequestManagedZoneName),
RequestManagedZoneDnsName=tostring(events.RequestManagedZoneDnsName),
RequestManagedZoneDescription=tostring(events.RequestManagedZoneDescription),
RequestChangeDeletions=tostring(events.RequestChangeDeletions),
RequestChangeAdditions=tostring(events.RequestChangeAdditions),
RequestAPIType=tostring(events.RequestAPIType),
MethodName=tostring(events.MethodName),
AuthorizationInfo=tostring(events.AuthorizationInfo),
AuthenticationInfoPrincipalSubject=tostring(events.AuthenticationInfoPrincipalSubject),
AuthenticationInfoPrincipalEmail=tostring(events.AuthenticationInfoPrincipalEmail),
PayloadType=tostring(events.PayloadType),
LogName=tostring(events.LogName),
InsertId=tostring(events.InsertId),
ReqManZonePrivVisibConfigNetworks=tostring(events.ReqManZonePrivVisibConfigNetworks),
RequestName=tostring(events.RequestName),
RequestProject=tostring(events.RequestProject),
RequestType=tostring(events.RequestType),
ResponseManagedZoneNameServers=tostring(events.ResponseManagedZoneNameServers),
ResponseManagedZoneName=tostring(events.ResponseManagedZoneName),
ResponseManagedZoneId=tostring(events.ResponseManagedZoneId),
ResponseManagedZoneFingerprint=tostring(events.ResponseManagedZoneFingerprint),
ResponseManagedZoneDnsName=tostring(events.ResponseManagedZoneDnsName),
ResponseManagedZoneDescription=tostring(events.ResponseManagedZoneDescription),
ResponseManagedZoneCreationTime=todatetime(events.ResponseManagedZoneCreationTime),
ServiceName=tostring(events.ServiceName),
ResponseChangeStatus=tostring(events.ResponseChangeStatus),
ResponseChangeId=tostring(events.ResponseChangeId),
ResponseChangeDeletions=tostring(events.ResponseChangeDeletions),
ResponseType=tostring(events.ResponseType),
GCPResourceName=tostring(events.GCPResourceName),
ReqmetaRequestAttributesTime=todatetime(events.ReqmetaRequestAttributesTime),
ReqmetaCallerSuppliedUserAgent=tostring(events.ReqmetaCallerSuppliedUserAgent),
RequestMetadataCallerIp=tostring(events.RequestMetadataCallerIp),
ResponseChangeStartTime=todatetime(events.ResponseChangeStartTime),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table GCPDNS policy update @'[{"Source": "GCPDNSRaw", "Query": "GCPDNSExpand()", "IsEnabled": "True", "IsTransactional": true}]'
