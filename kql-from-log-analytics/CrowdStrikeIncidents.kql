// ============================================================================
// Azure Data Explorer KQL Script for CrowdStrikeIncidents - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:21:47
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 33, Final columns: 33
// ============================================================================

.create-merge table CrowdStrikeIncidentsRaw (records:dynamic)

.alter-merge table CrowdStrikeIncidentsRaw policy retention softdelete = 1d

.alter table CrowdStrikeIncidentsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table CrowdStrikeIncidentsRaw ingestion json mapping 'CrowdStrikeIncidentsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table CrowdStrikeIncidents(
TimeGenerated:datetime,
TenantId:guid,
Techniques:dynamic,
Tags:dynamic,
Tactics:dynamic,
Status:int,
State:string,
Start:datetime,
Objectives:dynamic,
Name:string,
ModifiedTimestamp:datetime,
LmraHostsCapped:bool,
LmraHostIds:dynamic,
LmTypes:int,
LmHostsCapped:bool,
Users:dynamic,
LmHostIds:dynamic,
IncidentId:string,
Hosts:dynamic,
HostIds:dynamic,
GroupingIds:dynamic,
FineScore:int,
EventsHistogram:dynamic,
End:datetime,
EmailState:string,
Description:string,
Created:datetime,
Cid:string,
AssignedToName:string,
AssignedTo:string,
IncidentType:int,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table CrowdStrikeIncidents policy caching hot = 1d

.create-or-alter function CrowdStrikeIncidentsExpand() {
CrowdStrikeIncidentsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Techniques=todynamic(events.Techniques),
Tags=todynamic(events.Tags),
Tactics=todynamic(events.Tactics),
Status=toint(events.Status),
State=tostring(events.State),
Start=todatetime(events.Start),
Objectives=todynamic(events.Objectives),
Name=tostring(events.Name),
ModifiedTimestamp=todatetime(events.ModifiedTimestamp),
LmraHostsCapped=tobool(events.LmraHostsCapped),
LmraHostIds=todynamic(events.LmraHostIds),
LmTypes=toint(events.LmTypes),
LmHostsCapped=tobool(events.LmHostsCapped),
Users=todynamic(events.Users),
LmHostIds=todynamic(events.LmHostIds),
IncidentId=tostring(events.IncidentId),
Hosts=todynamic(events.Hosts),
HostIds=todynamic(events.HostIds),
GroupingIds=todynamic(events.GroupingIds),
FineScore=toint(events.FineScore),
EventsHistogram=todynamic(events.EventsHistogram),
End=todatetime(events.End),
EmailState=tostring(events.EmailState),
Description=tostring(events.Description),
Created=todatetime(events.Created),
Cid=tostring(events.Cid),
AssignedToName=tostring(events.AssignedToName),
AssignedTo=tostring(events.AssignedTo),
IncidentType=toint(events.IncidentType),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table CrowdStrikeIncidents policy update @'[{"Source": "CrowdStrikeIncidentsRaw", "Query": "CrowdStrikeIncidentsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
