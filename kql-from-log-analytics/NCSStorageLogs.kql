// ============================================================================
// Azure Data Explorer KQL Script for NCSStorageLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:27:20
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 15, Final columns: 15
// ============================================================================

.create-merge table NCSStorageLogsRaw (records:dynamic)

.alter-merge table NCSStorageLogsRaw policy retention softdelete = 1d

.alter table NCSStorageLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table NCSStorageLogsRaw ingestion json mapping 'NCSStorageLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table NCSStorageLogs(
TimeGenerated:datetime,
TenantId:guid,
ArrayName:string,
ArrayController:string,
Node:string,
PodName:string,
ContainerName:string,
IPAddress:string,
Message:string,
Location:string,
ClusterManagerName:string,
ClusterName:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table NCSStorageLogs policy caching hot = 1d

.create-or-alter function NCSStorageLogsExpand() {
NCSStorageLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ArrayName=tostring(events.ArrayName),
ArrayController=tostring(events.ArrayController),
Node=tostring(events.Node),
PodName=tostring(events.PodName),
ContainerName=tostring(events.ContainerName),
IPAddress=tostring(events.IPAddress),
Message=tostring(events.Message),
Location=tostring(events.Location),
ClusterManagerName=tostring(events.ClusterManagerName),
ClusterName=tostring(events.ClusterName),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table NCSStorageLogs policy update @'[{"Source": "NCSStorageLogsRaw", "Query": "NCSStorageLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
