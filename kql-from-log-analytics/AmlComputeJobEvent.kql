// ============================================================================
// Azure Data Explorer KQL Script for AmlComputeJobEvent - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:17:21
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 51, Final columns: 51
// ============================================================================

.create-merge table AmlComputeJobEventRaw (records:dynamic)

.alter-merge table AmlComputeJobEventRaw policy retention softdelete = 1d

.alter table AmlComputeJobEventRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AmlComputeJobEventRaw ingestion json mapping 'AmlComputeJobEventRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AmlComputeJobEvent(
TimeGenerated:datetime,
TenantId:guid,
ResourceGroupName:string,
JobName:string,
ClusterId:string,
EventType:string,
ExecutionState:string,
ErrorDetails:string,
CreationApiVersion:string,
ClusterResourceGroupName:string,
TFWorkerCount:string,
ProvisioningState:string,
TFParameterServerCount:string,
RunInContainer:string,
JobErrorMessage:string,
NodeId:string,
InternalOperationName:string,
Node:string,
EnvNamespace:string,
Pod:string,
Container:string,
Host:string,
ToolType:string,
ClusterName:string,
WorkspaceName:string,
CustomerSubscriptionId:string,
SourceSystem:string,
Stream:string,
Docker:string,
Kubernetes:string,
Tag:string,
LogEpochTimestamp:real,
OperationVersion:string,
ResultType:string,
ResultSignature:string,
ResultDescription:string,
DurationMs:real,
CallerIpAddress:string,
CorrelationId:string,
Identity:string,
Level:string,
Location:string,
OperationName:string,
Category:string,
JobId:string,
ExperimentId:string,
ExperimentName:string,
env_time:datetime,
FluentdIngestTimestamp:real,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AmlComputeJobEvent policy caching hot = 1d

.create-or-alter function AmlComputeJobEventExpand() {
AmlComputeJobEventRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ResourceGroupName=tostring(events.ResourceGroupName),
JobName=tostring(events.JobName),
ClusterId=tostring(events.ClusterId),
EventType=tostring(events.EventType),
ExecutionState=tostring(events.ExecutionState),
ErrorDetails=tostring(events.ErrorDetails),
CreationApiVersion=tostring(events.CreationApiVersion),
ClusterResourceGroupName=tostring(events.ClusterResourceGroupName),
TFWorkerCount=tostring(events.TFWorkerCount),
ProvisioningState=tostring(events.ProvisioningState),
TFParameterServerCount=tostring(events.TFParameterServerCount),
RunInContainer=tostring(events.RunInContainer),
JobErrorMessage=tostring(events.JobErrorMessage),
NodeId=tostring(events.NodeId),
InternalOperationName=tostring(events.InternalOperationName),
Node=tostring(events.Node),
EnvNamespace=tostring(events.EnvNamespace),
Pod=tostring(events.Pod),
Container=tostring(events.Container),
Host=tostring(events.Host),
ToolType=tostring(events.ToolType),
ClusterName=tostring(events.ClusterName),
WorkspaceName=tostring(events.WorkspaceName),
CustomerSubscriptionId=tostring(events.CustomerSubscriptionId),
SourceSystem=tostring(events.SourceSystem),
Stream=tostring(events.Stream),
Docker=tostring(events.Docker),
Kubernetes=tostring(events.Kubernetes),
Tag=tostring(events.Tag),
LogEpochTimestamp=toreal(events.LogEpochTimestamp),
OperationVersion=tostring(events.OperationVersion),
ResultType=tostring(events.ResultType),
ResultSignature=tostring(events.ResultSignature),
ResultDescription=tostring(events.ResultDescription),
DurationMs=toreal(events.DurationMs),
CallerIpAddress=tostring(events.CallerIpAddress),
CorrelationId=tostring(events.CorrelationId),
Identity=tostring(events.Identity),
Level=tostring(events.Level),
Location=tostring(events.Location),
OperationName=tostring(events.OperationName),
Category=tostring(events.Category),
JobId=tostring(events.JobId),
ExperimentId=tostring(events.ExperimentId),
ExperimentName=tostring(events.ExperimentName),
env_time=todatetime(events.env_time),
FluentdIngestTimestamp=toreal(events.FluentdIngestTimestamp),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AmlComputeJobEvent policy update @'[{"Source": "AmlComputeJobEventRaw", "Query": "AmlComputeJobEventExpand()", "IsEnabled": "True", "IsTransactional": true}]'
