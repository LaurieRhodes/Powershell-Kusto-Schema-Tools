// ============================================================================
// Azure Data Explorer KQL Script for ADTDigitalTwinsOperation - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:16:12
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 23, Final columns: 23
// ============================================================================

.create-merge table ADTDigitalTwinsOperationRaw (records:dynamic)

.alter-merge table ADTDigitalTwinsOperationRaw policy retention softdelete = 1d

.alter table ADTDigitalTwinsOperationRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table ADTDigitalTwinsOperationRaw ingestion json mapping 'ADTDigitalTwinsOperationRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table ADTDigitalTwinsOperation(
TimeGenerated:datetime,
TenantId:guid,
TraceFlags:string,
ParentId:string,
SpanId:string,
TraceId:string,
RequestUri:string,
Location:string,
Level:string,
ApplicationId:string,
CorrelationId:guid,
CallerIpAddress:string,
DurationMs:string,
ResultDescription:string,
ResultSignature:string,
ResultType:string,
OperationVersion:string,
OperationName:string,
Category:string,
TraceState:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table ADTDigitalTwinsOperation policy caching hot = 1d

.create-or-alter function ADTDigitalTwinsOperationExpand() {
ADTDigitalTwinsOperationRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
TraceFlags=tostring(events.TraceFlags),
ParentId=tostring(events.ParentId),
SpanId=tostring(events.SpanId),
TraceId=tostring(events.TraceId),
RequestUri=tostring(events.RequestUri),
Location=tostring(events.Location),
Level=tostring(events.Level),
ApplicationId=tostring(events.ApplicationId),
CorrelationId=toguid(events.CorrelationId),
CallerIpAddress=tostring(events.CallerIpAddress),
DurationMs=tostring(events.DurationMs),
ResultDescription=tostring(events.ResultDescription),
ResultSignature=tostring(events.ResultSignature),
ResultType=tostring(events.ResultType),
OperationVersion=tostring(events.OperationVersion),
OperationName=tostring(events.OperationName),
Category=tostring(events.Category),
TraceState=tostring(events.TraceState),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table ADTDigitalTwinsOperation policy update @'[{"Source": "ADTDigitalTwinsOperationRaw", "Query": "ADTDigitalTwinsOperationExpand()", "IsEnabled": "True", "IsTransactional": true}]'
