// ============================================================================
// Azure Data Explorer KQL Script for CIEventsOperational - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:21:14
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 41, Final columns: 41
// ============================================================================

.create-merge table CIEventsOperationalRaw (records:dynamic)

.alter-merge table CIEventsOperationalRaw policy retention softdelete = 1d

.alter table CIEventsOperationalRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table CIEventsOperationalRaw ingestion json mapping 'CIEventsOperationalRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table CIEventsOperational(
TimeGenerated:datetime,
TenantId:guid,
Error:string,
AdditionalInformation:string,
Category:string,
ResultSignature:string,
CallerIPAddress:string,
UserAgent:string,
Method:string,
Path:string,
Origin:string,
CallerObjectId:string,
UserRole:string,
RequiredRoles:string,
Claims:string,
UserPrincipalName:string,
Audience:string,
FriendlyName:string,
Identifier:string,
InstanceId:string,
SubmittedTime:datetime,
EventType:string,
OperationName:string,
CorrelationId:string,
ResultType:string,
DurationMs:long,
Level:string,
WorkflowJobId:string,
Uri:string,
OperationType:string,
TasksCount:int,
SubmittedBy:string,
WorkflowType:string,
WorkflowSubmissionKind:string,
WorkflowStatus:string,
StartTime:datetime,
EndTime:datetime,
OperationStatus:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table CIEventsOperational policy caching hot = 1d

.create-or-alter function CIEventsOperationalExpand() {
CIEventsOperationalRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Error=tostring(events.Error),
AdditionalInformation=tostring(events.AdditionalInformation),
Category=tostring(events.Category),
ResultSignature=tostring(events.ResultSignature),
CallerIPAddress=tostring(events.CallerIPAddress),
UserAgent=tostring(events.UserAgent),
Method=tostring(events.Method),
Path=tostring(events.Path),
Origin=tostring(events.Origin),
CallerObjectId=tostring(events.CallerObjectId),
UserRole=tostring(events.UserRole),
RequiredRoles=tostring(events.RequiredRoles),
Claims=tostring(events.Claims),
UserPrincipalName=tostring(events.UserPrincipalName),
Audience=tostring(events.Audience),
FriendlyName=tostring(events.FriendlyName),
Identifier=tostring(events.Identifier),
InstanceId=tostring(events.InstanceId),
SubmittedTime=todatetime(events.SubmittedTime),
EventType=tostring(events.EventType),
OperationName=tostring(events.OperationName),
CorrelationId=tostring(events.CorrelationId),
ResultType=tostring(events.ResultType),
DurationMs=tolong(events.DurationMs),
Level=tostring(events.Level),
WorkflowJobId=tostring(events.WorkflowJobId),
Uri=tostring(events.Uri),
OperationType=tostring(events.OperationType),
TasksCount=toint(events.TasksCount),
SubmittedBy=tostring(events.SubmittedBy),
WorkflowType=tostring(events.WorkflowType),
WorkflowSubmissionKind=tostring(events.WorkflowSubmissionKind),
WorkflowStatus=tostring(events.WorkflowStatus),
StartTime=todatetime(events.StartTime),
EndTime=todatetime(events.EndTime),
OperationStatus=tostring(events.OperationStatus),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table CIEventsOperational policy update @'[{"Source": "CIEventsOperationalRaw", "Query": "CIEventsOperationalExpand()", "IsEnabled": "True", "IsTransactional": true}]'
