// ============================================================================
// Azure Data Explorer KQL Script for AEWExperimentScorecardMetricPairs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:16:36
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 29, Final columns: 29
// ============================================================================

.create-merge table AEWExperimentScorecardMetricPairsRaw (records:dynamic)

.alter-merge table AEWExperimentScorecardMetricPairsRaw policy retention softdelete = 1d

.alter table AEWExperimentScorecardMetricPairsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AEWExperimentScorecardMetricPairsRaw ingestion json mapping 'AEWExperimentScorecardMetricPairsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AEWExperimentScorecardMetricPairs(
TimeGenerated:datetime,
TenantId:guid,
RelativeDifference:real,
TreatmentEffect:string,
PValue:real,
ControlStandardErrorNormalized:real,
ControlMetricValueNormalized:real,
ControlMetricValue:real,
ControlCount:long,
ControlVariant:string,
TreatmentStandardErrorNormalized:real,
TreatmentMetricValueNormalized:real,
TreatmentMetricValue:real,
TreatmentCount:long,
TreatmentVariant:string,
MetricETag:string,
MetricVersion:string,
DesiredDirection:string,
MetricTags:dynamic,
MetricLifecycle:string,
MetricKind:string,
MetricDescription:string,
MetricDisplayName:string,
MetricId:string,
ScorecardId:string,
Insights:dynamic,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AEWExperimentScorecardMetricPairs policy caching hot = 1d

.create-or-alter function AEWExperimentScorecardMetricPairsExpand() {
AEWExperimentScorecardMetricPairsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
RelativeDifference=toreal(events.RelativeDifference),
TreatmentEffect=tostring(events.TreatmentEffect),
PValue=toreal(events.PValue),
ControlStandardErrorNormalized=toreal(events.ControlStandardErrorNormalized),
ControlMetricValueNormalized=toreal(events.ControlMetricValueNormalized),
ControlMetricValue=toreal(events.ControlMetricValue),
ControlCount=tolong(events.ControlCount),
ControlVariant=tostring(events.ControlVariant),
TreatmentStandardErrorNormalized=toreal(events.TreatmentStandardErrorNormalized),
TreatmentMetricValueNormalized=toreal(events.TreatmentMetricValueNormalized),
TreatmentMetricValue=toreal(events.TreatmentMetricValue),
TreatmentCount=tolong(events.TreatmentCount),
TreatmentVariant=tostring(events.TreatmentVariant),
MetricETag=tostring(events.MetricETag),
MetricVersion=tostring(events.MetricVersion),
DesiredDirection=tostring(events.DesiredDirection),
MetricTags=todynamic(events.MetricTags),
MetricLifecycle=tostring(events.MetricLifecycle),
MetricKind=tostring(events.MetricKind),
MetricDescription=tostring(events.MetricDescription),
MetricDisplayName=tostring(events.MetricDisplayName),
MetricId=tostring(events.MetricId),
ScorecardId=tostring(events.ScorecardId),
Insights=todynamic(events.Insights),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AEWExperimentScorecardMetricPairs policy update @'[{"Source": "AEWExperimentScorecardMetricPairsRaw", "Query": "AEWExperimentScorecardMetricPairsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
