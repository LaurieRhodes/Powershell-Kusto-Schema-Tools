// ============================================================================
// Azure Data Explorer KQL Script for AADManagedIdentitySignInLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:14:34
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 45, Final columns: 45
// ============================================================================

.create-merge table AADManagedIdentitySignInLogsRaw (records:dynamic)

.alter-merge table AADManagedIdentitySignInLogsRaw policy retention softdelete = 1d

.alter table AADManagedIdentitySignInLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AADManagedIdentitySignInLogsRaw ingestion json mapping 'AADManagedIdentitySignInLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AADManagedIdentitySignInLogs(
TimeGenerated:datetime,
TenantId:guid,
ConditionalAccessStatus:string,
CreatedDateTime:datetime,
FederatedCredentialId:string,
Id:string,
IPAddress:string,
LocationDetails:string,
ManagedServiceIdentity:string,
NetworkLocationDetails:string,
ConditionalAccessPoliciesV2:dynamic,
ResourceDisplayName:string,
ResourceOwnerTenantId:string,
ResourceServicePrincipalId:string,
ServicePrincipalCredentialKeyId:string,
ServicePrincipalCredentialThumbprint:string,
ServicePrincipalId:string,
ServicePrincipalName:string,
SessionId:string,
SourceAppClientId:string,
ResourceIdentity:string,
UniqueTokenIdentifier:string,
ConditionalAccessPolicies:string,
AuthenticationProcessingDetails:string,
SourceSystem:string,
OperationName:string,
OperationVersion:string,
Category:string,
ResultType:string,
ResultSignature:string,
ResultDescription:string,
DurationMs:long,
ClientCredentialType:string,
CorrelationId:string,
Identity:string,
Level:string,
Location:string,
AADTenantId:string,
Agent:string,
AppId:string,
AppOwnerTenantId:string,
AuthenticationContextClassReferences:string,
ResourceGroup:string,
UserAgent:string,
Type:string,
_TimeReceived:datetime)

.alter table AADManagedIdentitySignInLogs policy caching hot = 1d

.create-or-alter function AADManagedIdentitySignInLogsExpand() {
AADManagedIdentitySignInLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ConditionalAccessStatus=tostring(events.ConditionalAccessStatus),
CreatedDateTime=todatetime(events.CreatedDateTime),
FederatedCredentialId=tostring(events.FederatedCredentialId),
Id=tostring(events.Id),
IPAddress=tostring(events.IPAddress),
LocationDetails=tostring(events.LocationDetails),
ManagedServiceIdentity=tostring(events.ManagedServiceIdentity),
NetworkLocationDetails=tostring(events.NetworkLocationDetails),
ConditionalAccessPoliciesV2=todynamic(events.ConditionalAccessPoliciesV2),
ResourceDisplayName=tostring(events.ResourceDisplayName),
ResourceOwnerTenantId=tostring(events.ResourceOwnerTenantId),
ResourceServicePrincipalId=tostring(events.ResourceServicePrincipalId),
ServicePrincipalCredentialKeyId=tostring(events.ServicePrincipalCredentialKeyId),
ServicePrincipalCredentialThumbprint=tostring(events.ServicePrincipalCredentialThumbprint),
ServicePrincipalId=tostring(events.ServicePrincipalId),
ServicePrincipalName=tostring(events.ServicePrincipalName),
SessionId=tostring(events.SessionId),
SourceAppClientId=tostring(events.SourceAppClientId),
ResourceIdentity=tostring(events.ResourceIdentity),
UniqueTokenIdentifier=tostring(events.UniqueTokenIdentifier),
ConditionalAccessPolicies=tostring(events.ConditionalAccessPolicies),
AuthenticationProcessingDetails=tostring(events.AuthenticationProcessingDetails),
SourceSystem=tostring(events.SourceSystem),
OperationName=tostring(events.OperationName),
OperationVersion=tostring(events.OperationVersion),
Category=tostring(events.Category),
ResultType=tostring(events.ResultType),
ResultSignature=tostring(events.ResultSignature),
ResultDescription=tostring(events.ResultDescription),
DurationMs=tolong(events.DurationMs),
ClientCredentialType=tostring(events.ClientCredentialType),
CorrelationId=tostring(events.CorrelationId),
Identity=tostring(events.Identity),
Level=tostring(events.Level),
Location=tostring(events.Location),
AADTenantId=tostring(events.AADTenantId),
Agent=tostring(events.Agent),
AppId=tostring(events.AppId),
AppOwnerTenantId=tostring(events.AppOwnerTenantId),
AuthenticationContextClassReferences=tostring(events.AuthenticationContextClassReferences),
ResourceGroup=tostring(events.ResourceGroup),
UserAgent=tostring(events.UserAgent),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table AADManagedIdentitySignInLogs policy update @'[{"Source": "AADManagedIdentitySignInLogsRaw", "Query": "AADManagedIdentitySignInLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
