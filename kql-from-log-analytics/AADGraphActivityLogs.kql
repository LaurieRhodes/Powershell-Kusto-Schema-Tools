// ============================================================================
// Azure Data Explorer KQL Script for AADGraphActivityLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:14:33
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 34, Final columns: 34
// ============================================================================

.create-merge table AADGraphActivityLogsRaw (records:dynamic)

.alter-merge table AADGraphActivityLogsRaw policy retention softdelete = 1d

.alter table AADGraphActivityLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AADGraphActivityLogsRaw ingestion json mapping 'AADGraphActivityLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AADGraphActivityLogs(
TimeGenerated:datetime,
TenantId:guid,
SessionId:string,
RequestUri:string,
UserAgent:string,
CallerIpAddress:string,
Wids:string,
ClientAuthMethod:string,
IdentityProvider:string,
Scopes:string,
ServicePrincipalId:string,
UserId:string,
AppId:string,
ActorType:string,
TokenIssuedAt:datetime,
DeviceId:string,
Roles:string,
ResponseSizeBytes:int,
ResponseStatusCode:int,
RequestMethod:string,
Level:string,
DurationMs:int,
ResultSignature:string,
Category:string,
ApiVersion:string,
OperationName:string,
AADTenantId:string,
RequestId:string,
Location:string,
TimeRequested:datetime,
SignInActivityId:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AADGraphActivityLogs policy caching hot = 1d

.create-or-alter function AADGraphActivityLogsExpand() {
AADGraphActivityLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
SessionId=tostring(events.SessionId),
RequestUri=tostring(events.RequestUri),
UserAgent=tostring(events.UserAgent),
CallerIpAddress=tostring(events.CallerIpAddress),
Wids=tostring(events.Wids),
ClientAuthMethod=tostring(events.ClientAuthMethod),
IdentityProvider=tostring(events.IdentityProvider),
Scopes=tostring(events.Scopes),
ServicePrincipalId=tostring(events.ServicePrincipalId),
UserId=tostring(events.UserId),
AppId=tostring(events.AppId),
ActorType=tostring(events.ActorType),
TokenIssuedAt=todatetime(events.TokenIssuedAt),
DeviceId=tostring(events.DeviceId),
Roles=tostring(events.Roles),
ResponseSizeBytes=toint(events.ResponseSizeBytes),
ResponseStatusCode=toint(events.ResponseStatusCode),
RequestMethod=tostring(events.RequestMethod),
Level=tostring(events.Level),
DurationMs=toint(events.DurationMs),
ResultSignature=tostring(events.ResultSignature),
Category=tostring(events.Category),
ApiVersion=tostring(events.ApiVersion),
OperationName=tostring(events.OperationName),
AADTenantId=tostring(events.AADTenantId),
RequestId=tostring(events.RequestId),
Location=tostring(events.Location),
TimeRequested=todatetime(events.TimeRequested),
SignInActivityId=tostring(events.SignInActivityId),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AADGraphActivityLogs policy update @'[{"Source": "AADGraphActivityLogsRaw", "Query": "AADGraphActivityLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
