// ============================================================================
// Azure Data Explorer KQL Script for WVDConnections - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:31:40
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 33, Final columns: 33
// ============================================================================

.create-merge table WVDConnectionsRaw (records:dynamic)

.alter-merge table WVDConnectionsRaw policy retention softdelete = 1d

.alter table WVDConnectionsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table WVDConnectionsRaw ingestion json mapping 'WVDConnectionsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table WVDConnections(
TimeGenerated:datetime,
TenantId:guid,
TransportType:string,
IsSessionHostPrivateLink:string,
IsClientPrivateLink:string,
SessionHostJoinType:string,
UdpUse:string,
GatewayRegion:string,
AadTenantId:string,
SessionHostSessionId:string,
SessionHostSxSStackVersion:string,
SessionHostAgentVersion:string,
SessionHostOSDescription:string,
SessionHostOSVersion:string,
SessionHostIPAddress:string,
SessionHostAzureVmId:string,
SessionHostPoolType:string,
SessionHostName:string,
ResourceAlias:string,
ConnectionType:string,
PredecessorConnectionId:string,
ClientSideIPAddress:string,
ClientIPAddress:string,
ClientType:string,
ClientVersion:string,
ClientOS:string,
State:string,
UserName:string,
CorrelationId:string,
UdpType:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table WVDConnections policy caching hot = 1d

.create-or-alter function WVDConnectionsExpand() {
WVDConnectionsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
TransportType=tostring(events.TransportType),
IsSessionHostPrivateLink=tostring(events.IsSessionHostPrivateLink),
IsClientPrivateLink=tostring(events.IsClientPrivateLink),
SessionHostJoinType=tostring(events.SessionHostJoinType),
UdpUse=tostring(events.UdpUse),
GatewayRegion=tostring(events.GatewayRegion),
AadTenantId=tostring(events.AadTenantId),
SessionHostSessionId=tostring(events.SessionHostSessionId),
SessionHostSxSStackVersion=tostring(events.SessionHostSxSStackVersion),
SessionHostAgentVersion=tostring(events.SessionHostAgentVersion),
SessionHostOSDescription=tostring(events.SessionHostOSDescription),
SessionHostOSVersion=tostring(events.SessionHostOSVersion),
SessionHostIPAddress=tostring(events.SessionHostIPAddress),
SessionHostAzureVmId=tostring(events.SessionHostAzureVmId),
SessionHostPoolType=tostring(events.SessionHostPoolType),
SessionHostName=tostring(events.SessionHostName),
ResourceAlias=tostring(events.ResourceAlias),
ConnectionType=tostring(events.ConnectionType),
PredecessorConnectionId=tostring(events.PredecessorConnectionId),
ClientSideIPAddress=tostring(events.ClientSideIPAddress),
ClientIPAddress=tostring(events.ClientIPAddress),
ClientType=tostring(events.ClientType),
ClientVersion=tostring(events.ClientVersion),
ClientOS=tostring(events.ClientOS),
State=tostring(events.State),
UserName=tostring(events.UserName),
CorrelationId=tostring(events.CorrelationId),
UdpType=tostring(events.UdpType),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table WVDConnections policy update @'[{"Source": "WVDConnectionsRaw", "Query": "WVDConnectionsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
