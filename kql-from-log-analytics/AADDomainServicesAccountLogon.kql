// ============================================================================
// Azure Data Explorer KQL Script for AADDomainServicesAccountLogon - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:14:18
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 39, Final columns: 39
// ============================================================================

.create-merge table AADDomainServicesAccountLogonRaw (records:dynamic)

.alter-merge table AADDomainServicesAccountLogonRaw policy retention softdelete = 1d

.alter table AADDomainServicesAccountLogonRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AADDomainServicesAccountLogonRaw ingestion json mapping 'AADDomainServicesAccountLogonRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AADDomainServicesAccountLogon(
TimeGenerated:datetime,
TenantId:guid,
aadds_PackageName:string,
aadds_RecordId:string,
IpAddress:string,
IpPort:string,
ServiceName:string,
TicketOptions:string,
aadds_MappedName:string,
PreAuthType:string,
CertSerialNumber:string,
CertThumbprint:string,
FailureCode:string,
MappingBy:string,
ClientUserName:string,
MappedName:string,
CertIssuerName:string,
aadds_ClientUserName:string,
aadds_MappingBy:string,
aadds_FailureCode:string,
SourceSystem:string,
ResourceId:string,
OperationName:string,
Category:string,
ResultType:string,
ResultDescription:string,
CorrelationId:string,
aadds_IpAddress:string,
aadds_IpPort:string,
aadds_ServiceName:string,
aadds_TicketOptions:string,
aadds_PreAuthType:string,
aadds_CertIssuerName:string,
aadds_CertSerialNumber:string,
aadds_CertThumbprint:string,
PackageName:string,
RecordId:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AADDomainServicesAccountLogon policy caching hot = 1d

.create-or-alter function AADDomainServicesAccountLogonExpand() {
AADDomainServicesAccountLogonRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
aadds_PackageName=tostring(events.aadds_PackageName),
aadds_RecordId=tostring(events.aadds_RecordId),
IpAddress=tostring(events.IpAddress),
IpPort=tostring(events.IpPort),
ServiceName=tostring(events.ServiceName),
TicketOptions=tostring(events.TicketOptions),
aadds_MappedName=tostring(events.aadds_MappedName),
PreAuthType=tostring(events.PreAuthType),
CertSerialNumber=tostring(events.CertSerialNumber),
CertThumbprint=tostring(events.CertThumbprint),
FailureCode=tostring(events.FailureCode),
MappingBy=tostring(events.MappingBy),
ClientUserName=tostring(events.ClientUserName),
MappedName=tostring(events.MappedName),
CertIssuerName=tostring(events.CertIssuerName),
aadds_ClientUserName=tostring(events.aadds_ClientUserName),
aadds_MappingBy=tostring(events.aadds_MappingBy),
aadds_FailureCode=tostring(events.aadds_FailureCode),
SourceSystem=tostring(events.SourceSystem),
ResourceId=tostring(events.ResourceId),
OperationName=tostring(events.OperationName),
Category=tostring(events.Category),
ResultType=tostring(events.ResultType),
ResultDescription=tostring(events.ResultDescription),
CorrelationId=tostring(events.CorrelationId),
aadds_IpAddress=tostring(events.aadds_IpAddress),
aadds_IpPort=tostring(events.aadds_IpPort),
aadds_ServiceName=tostring(events.aadds_ServiceName),
aadds_TicketOptions=tostring(events.aadds_TicketOptions),
aadds_PreAuthType=tostring(events.aadds_PreAuthType),
aadds_CertIssuerName=tostring(events.aadds_CertIssuerName),
aadds_CertSerialNumber=tostring(events.aadds_CertSerialNumber),
aadds_CertThumbprint=tostring(events.aadds_CertThumbprint),
PackageName=tostring(events.PackageName),
RecordId=tostring(events.RecordId),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AADDomainServicesAccountLogon policy update @'[{"Source": "AADDomainServicesAccountLogonRaw", "Query": "AADDomainServicesAccountLogonExpand()", "IsEnabled": "True", "IsTransactional": true}]'
