// ============================================================================
// Azure Data Explorer KQL Script for NCBMBreakGlassAuditLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:27:09
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 14, Final columns: 14
// ============================================================================

.create-merge table NCBMBreakGlassAuditLogsRaw (records:dynamic)

.alter-merge table NCBMBreakGlassAuditLogsRaw policy retention softdelete = 1d

.alter table NCBMBreakGlassAuditLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table NCBMBreakGlassAuditLogsRaw ingestion json mapping 'NCBMBreakGlassAuditLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table NCBMBreakGlassAuditLogs(
TimeGenerated:datetime,
TenantId:guid,
Node:string,
Mode:string,
ProcessId:int,
User:string,
Message:string,
Log:string,
Location:string,
ClusterManagerName:string,
ClusterName:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table NCBMBreakGlassAuditLogs policy caching hot = 1d

.create-or-alter function NCBMBreakGlassAuditLogsExpand() {
NCBMBreakGlassAuditLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Node=tostring(events.Node),
Mode=tostring(events.Mode),
ProcessId=toint(events.ProcessId),
User=tostring(events.User),
Message=tostring(events.Message),
Log=tostring(events.Log),
Location=tostring(events.Location),
ClusterManagerName=tostring(events.ClusterManagerName),
ClusterName=tostring(events.ClusterName),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table NCBMBreakGlassAuditLogs policy update @'[{"Source": "NCBMBreakGlassAuditLogsRaw", "Query": "NCBMBreakGlassAuditLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
