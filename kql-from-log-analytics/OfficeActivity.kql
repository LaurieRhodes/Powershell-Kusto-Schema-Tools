// ============================================================================
// Azure Data Explorer KQL Script for OfficeActivity - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:27:57
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 152, Final columns: 152
// ============================================================================

.create-merge table OfficeActivityRaw (records:dynamic)

.alter-merge table OfficeActivityRaw policy retention softdelete = 1d

.alter table OfficeActivityRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table OfficeActivityRaw ingestion json mapping 'OfficeActivityRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table OfficeActivity(
TimeGenerated:datetime,
TenantId:guid,
AzureActiveDirectory_EventType:string,
AADTarget:string,
Start_Time:datetime,
OfficeTenantId:string,
OfficeTenantId_:string,
TargetUserOrGroupName:string,
SourceRecordId:guid,
TargetUserOrGroupType:string,
Members:dynamic,
TeamName:string,
TeamGuid:string,
ChannelType:string,
ChannelName:string,
ChannelGuid:string,
MessageId:string,
OfficeId:guid,
SourceSystem:string,
GenericInfo:string,
Actor:string,
ActorContextId:string,
ActorIpAddress:string,
InterSystemsId:guid,
IntraSystemId:guid,
SupportTicketId:string,
TargetContextId:guid,
DataCenterSecurityEventType:int,
EffectiveOrganization:string,
ElevationTime:datetime,
ElevationApprover:string,
ElevationApprovedTime:datetime,
ElevationRequestId:guid,
ElevationRole:string,
ElevationDuration:int,
ExtraProperties:dynamic,
AddOnType:string,
AddonName:string,
TabType:string,
SRRuleMatchDetails:dynamic,
IsManagedDevice:bool,
AppPoolName:string,
UniqueTokenId:string,
IssuedAtTime:datetime,
AppAccessContext:dynamic,
Attendees:dynamic,
ArtifactsShared:dynamic,
IsJoinedFromLobby:bool,
JoinTime:datetime,
LeaveTime:datetime,
DeviceInformation:string,
MeetingDetailId:string,
ListItemUniqueId:string,
SensitivityLabelId:string,
SRPolicyName:string,
LoginStatus:int,
SRPolicyId:string,
ClientAppId:string,
Name:string,
OldValue:string,
NewValue:string,
ItemName:string,
ChatThreadId:string,
ChatName:string,
CommunicationType:string,
AADGroupId:guid,
AddOnGuid:string,
AppDistributionMode:string,
TargetUserId:string,
OperationScope:string,
AzureADAppId:string,
OperationProperties:dynamic,
AppId:string,
ApplicationId:string,
UniqueSharingId:string,
Client:string,
SendonBehalfOfUserMailboxGuid:guid,
Site_:guid,
ItemType:string,
EventSource:string,
Source_Name:string,
MachineDomainInfo:string,
MachineId:string,
Scope:string,
Site_Url:string,
SourceRelativeUrl:string,
SourceRelativeUrl_:string,
SourceFileName:string,
SourceFileName_:string,
SourceFileExtension:string,
DestinationRelativeUrl:string,
Site_Url_:string,
ClientIP_:string,
ClientIP:string,
UserId_:string,
Application:string,
UserDomain:string,
Activity:string,
UserAgent:string,
RecordType:string,
Operation:string,
OrganizationId:guid,
OrganizationId_:guid,
UserType:string,
UserKey:string,
OfficeWorkload:string,
ResultStatus:string,
ResultReasonType:string,
OfficeObjectId:string,
UserId:string,
DestinationFileName:string,
DestinationFileExtension:string,
UserSharedWith:string,
SharingType:string,
ClientVersion:string,
Folder:string,
CrossMailboxOperations:bool,
DestMailboxId:guid,
DestMailboxOwnerUPN:string,
DestMailboxOwnerSid:string,
DestMailboxOwnerMasterAccountSid:string,
DestFolder:string,
Folders:string,
AffectedItems:string,
Item:string,
ModifiedProperties:string,
SendAsUserSmtp:string,
SendAsUserMailboxGuid:guid,
SendOnBehalfOfUserSmtp:string,
ClientProcessName:string,
ExtendedProperties:string,
ClientMachineName:string,
ClientInfoString:string,
CustomEvent:string,
Event_Data:string,
ModifiedObjectResolvedName:string,
Parameters:string,
ExternalAccess:string,
OriginatingServer:string,
OrganizationName:string,
Logon_Type:string,
InternalLogonType:int,
MailboxGuid:string,
MailboxOwnerUPN:string,
MailboxOwnerSid:string,
MailboxOwnerMasterAccountSid:string,
LogonUserSid:string,
LogonUserDisplayName:string,
Client_IPAddress:string,
ActorContextId_:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table OfficeActivity policy caching hot = 1d

.create-or-alter function OfficeActivityExpand() {
OfficeActivityRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
AzureActiveDirectory_EventType=tostring(events.AzureActiveDirectory_EventType),
AADTarget=tostring(events.AADTarget),
Start_Time=todatetime(events.Start_Time),
OfficeTenantId=tostring(events.OfficeTenantId),
OfficeTenantId_=tostring(events.OfficeTenantId_),
TargetUserOrGroupName=tostring(events.TargetUserOrGroupName),
SourceRecordId=toguid(events.SourceRecordId),
TargetUserOrGroupType=tostring(events.TargetUserOrGroupType),
Members=todynamic(events.Members),
TeamName=tostring(events.TeamName),
TeamGuid=tostring(events.TeamGuid),
ChannelType=tostring(events.ChannelType),
ChannelName=tostring(events.ChannelName),
ChannelGuid=tostring(events.ChannelGuid),
MessageId=tostring(events.MessageId),
OfficeId=toguid(events.OfficeId),
SourceSystem=tostring(events.SourceSystem),
GenericInfo=tostring(events.GenericInfo),
Actor=tostring(events.Actor),
ActorContextId=tostring(events.ActorContextId),
ActorIpAddress=tostring(events.ActorIpAddress),
InterSystemsId=toguid(events.InterSystemsId),
IntraSystemId=toguid(events.IntraSystemId),
SupportTicketId=tostring(events.SupportTicketId),
TargetContextId=toguid(events.TargetContextId),
DataCenterSecurityEventType=toint(events.DataCenterSecurityEventType),
EffectiveOrganization=tostring(events.EffectiveOrganization),
ElevationTime=todatetime(events.ElevationTime),
ElevationApprover=tostring(events.ElevationApprover),
ElevationApprovedTime=todatetime(events.ElevationApprovedTime),
ElevationRequestId=toguid(events.ElevationRequestId),
ElevationRole=tostring(events.ElevationRole),
ElevationDuration=toint(events.ElevationDuration),
ExtraProperties=todynamic(events.ExtraProperties),
AddOnType=tostring(events.AddOnType),
AddonName=tostring(events.AddonName),
TabType=tostring(events.TabType),
SRRuleMatchDetails=todynamic(events.SRRuleMatchDetails),
IsManagedDevice=tobool(events.IsManagedDevice),
AppPoolName=tostring(events.AppPoolName),
UniqueTokenId=tostring(events.UniqueTokenId),
IssuedAtTime=todatetime(events.IssuedAtTime),
AppAccessContext=todynamic(events.AppAccessContext),
Attendees=todynamic(events.Attendees),
ArtifactsShared=todynamic(events.ArtifactsShared),
IsJoinedFromLobby=tobool(events.IsJoinedFromLobby),
JoinTime=todatetime(events.JoinTime),
LeaveTime=todatetime(events.LeaveTime),
DeviceInformation=tostring(events.DeviceInformation),
MeetingDetailId=tostring(events.MeetingDetailId),
ListItemUniqueId=tostring(events.ListItemUniqueId),
SensitivityLabelId=tostring(events.SensitivityLabelId),
SRPolicyName=tostring(events.SRPolicyName),
LoginStatus=toint(events.LoginStatus),
SRPolicyId=tostring(events.SRPolicyId),
ClientAppId=tostring(events.ClientAppId),
Name=tostring(events.Name),
OldValue=tostring(events.OldValue),
NewValue=tostring(events.NewValue),
ItemName=tostring(events.ItemName),
ChatThreadId=tostring(events.ChatThreadId),
ChatName=tostring(events.ChatName),
CommunicationType=tostring(events.CommunicationType),
AADGroupId=toguid(events.AADGroupId),
AddOnGuid=tostring(events.AddOnGuid),
AppDistributionMode=tostring(events.AppDistributionMode),
TargetUserId=tostring(events.TargetUserId),
OperationScope=tostring(events.OperationScope),
AzureADAppId=tostring(events.AzureADAppId),
OperationProperties=todynamic(events.OperationProperties),
AppId=tostring(events.AppId),
ApplicationId=tostring(events.ApplicationId),
UniqueSharingId=tostring(events.UniqueSharingId),
Client=tostring(events.Client),
SendonBehalfOfUserMailboxGuid=toguid(events.SendonBehalfOfUserMailboxGuid),
Site_=toguid(events.Site_),
ItemType=tostring(events.ItemType),
EventSource=tostring(events.EventSource),
Source_Name=tostring(events.Source_Name),
MachineDomainInfo=tostring(events.MachineDomainInfo),
MachineId=tostring(events.MachineId),
Scope=tostring(events.Scope),
Site_Url=tostring(events.Site_Url),
SourceRelativeUrl=tostring(events.SourceRelativeUrl),
SourceRelativeUrl_=tostring(events.SourceRelativeUrl_),
SourceFileName=tostring(events.SourceFileName),
SourceFileName_=tostring(events.SourceFileName_),
SourceFileExtension=tostring(events.SourceFileExtension),
DestinationRelativeUrl=tostring(events.DestinationRelativeUrl),
Site_Url_=tostring(events.Site_Url_),
ClientIP_=tostring(events.ClientIP_),
ClientIP=tostring(events.ClientIP),
UserId_=tostring(events.UserId_),
Application=tostring(events.Application),
UserDomain=tostring(events.UserDomain),
Activity=tostring(events.Activity),
UserAgent=tostring(events.UserAgent),
RecordType=tostring(events.RecordType),
Operation=tostring(events.Operation),
OrganizationId=toguid(events.OrganizationId),
OrganizationId_=toguid(events.OrganizationId_),
UserType=tostring(events.UserType),
UserKey=tostring(events.UserKey),
OfficeWorkload=tostring(events.OfficeWorkload),
ResultStatus=tostring(events.ResultStatus),
ResultReasonType=tostring(events.ResultReasonType),
OfficeObjectId=tostring(events.OfficeObjectId),
UserId=tostring(events.UserId),
DestinationFileName=tostring(events.DestinationFileName),
DestinationFileExtension=tostring(events.DestinationFileExtension),
UserSharedWith=tostring(events.UserSharedWith),
SharingType=tostring(events.SharingType),
ClientVersion=tostring(events.ClientVersion),
Folder=tostring(events.Folder),
CrossMailboxOperations=tobool(events.CrossMailboxOperations),
DestMailboxId=toguid(events.DestMailboxId),
DestMailboxOwnerUPN=tostring(events.DestMailboxOwnerUPN),
DestMailboxOwnerSid=tostring(events.DestMailboxOwnerSid),
DestMailboxOwnerMasterAccountSid=tostring(events.DestMailboxOwnerMasterAccountSid),
DestFolder=tostring(events.DestFolder),
Folders=tostring(events.Folders),
AffectedItems=tostring(events.AffectedItems),
Item=tostring(events.Item),
ModifiedProperties=tostring(events.ModifiedProperties),
SendAsUserSmtp=tostring(events.SendAsUserSmtp),
SendAsUserMailboxGuid=toguid(events.SendAsUserMailboxGuid),
SendOnBehalfOfUserSmtp=tostring(events.SendOnBehalfOfUserSmtp),
ClientProcessName=tostring(events.ClientProcessName),
ExtendedProperties=tostring(events.ExtendedProperties),
ClientMachineName=tostring(events.ClientMachineName),
ClientInfoString=tostring(events.ClientInfoString),
CustomEvent=tostring(events.CustomEvent),
Event_Data=tostring(events.Event_Data),
ModifiedObjectResolvedName=tostring(events.ModifiedObjectResolvedName),
Parameters=tostring(events.Parameters),
ExternalAccess=tostring(events.ExternalAccess),
OriginatingServer=tostring(events.OriginatingServer),
OrganizationName=tostring(events.OrganizationName),
Logon_Type=tostring(events.Logon_Type),
InternalLogonType=toint(events.InternalLogonType),
MailboxGuid=tostring(events.MailboxGuid),
MailboxOwnerUPN=tostring(events.MailboxOwnerUPN),
MailboxOwnerSid=tostring(events.MailboxOwnerSid),
MailboxOwnerMasterAccountSid=tostring(events.MailboxOwnerMasterAccountSid),
LogonUserSid=tostring(events.LogonUserSid),
LogonUserDisplayName=tostring(events.LogonUserDisplayName),
Client_IPAddress=tostring(events.Client_IPAddress),
ActorContextId_=tostring(events.ActorContextId_),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table OfficeActivity policy update @'[{"Source": "OfficeActivityRaw", "Query": "OfficeActivityExpand()", "IsEnabled": "True", "IsTransactional": true}]'
