// ============================================================================
// Azure Data Explorer KQL Script for DnsEvents - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-17 07:23:59
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 25, Final columns: 25
// ============================================================================

.create-merge table DnsEventsRaw (records:dynamic)

.alter-merge table DnsEventsRaw policy retention softdelete = 1d

.alter table DnsEventsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table DnsEventsRaw ingestion json mapping 'DnsEventsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table DnsEvents(
TimeGenerated:datetime,
TenantId:guid,
RemoteIPCountry:string,
RemoteIPLatitude:real,
RemoteIPLongitude:real,
ReportReferenceLink:string,
Severity:int,
Confidence:string,
Description:string,
IndicatorThreatType:string,
MaliciousIP:string,
IPAddresses:string,
Result:string,
ResultCode:int,
QueryType:string,
Name:string,
ClientIP:string,
SubType:string,
EventId:int,
SourceSystem:string,
Computer:string,
Message:string,
TaskCategory:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table DnsEvents policy caching hot = 1d

.create-or-alter function DnsEventsExpand() {
DnsEventsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
RemoteIPCountry=tostring(events.RemoteIPCountry),
RemoteIPLatitude=toreal(events.RemoteIPLatitude),
RemoteIPLongitude=toreal(events.RemoteIPLongitude),
ReportReferenceLink=tostring(events.ReportReferenceLink),
Severity=toint(events.Severity),
Confidence=tostring(events.Confidence),
Description=tostring(events.Description),
IndicatorThreatType=tostring(events.IndicatorThreatType),
MaliciousIP=tostring(events.MaliciousIP),
IPAddresses=tostring(events.IPAddresses),
Result=tostring(events.Result),
ResultCode=toint(events.ResultCode),
QueryType=tostring(events.QueryType),
Name=tostring(events.Name),
ClientIP=tostring(events.ClientIP),
SubType=tostring(events.SubType),
EventId=toint(events.EventId),
SourceSystem=tostring(events.SourceSystem),
Computer=tostring(events.Computer),
Message=tostring(events.Message),
TaskCategory=tostring(events.TaskCategory),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table DnsEvents policy update @'[{"Source": "DnsEventsRaw", "Query": "DnsEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
