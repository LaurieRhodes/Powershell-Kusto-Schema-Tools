@description('The location of the resources')
param location string = 'Australia East'
@description('The name of the Data Collection Endpoint Id')
param dataCollectionEndpointId string
@description('The Log Analytics Workspace Id used for Sentinel')
param workspaceResourceId string
@description('The Target Sentinel workspace name')
param workspaceName string = 'sentinel-workspace'
@description('The Service Principal Object ID of the Entra App')
param servicePrincipalObjectId string

// ============================================================================
// Data Collection Rule for Malware_Data_CL
// ============================================================================
// Generated: 2025-09-18 08:37:32
// Table type: Custom (presumed custom for JSON exports)
// Schema imported from JSON export file
// Underscore columns filtered out
// Original columns: 39, DCR columns: 37 (Type column always filtered)
// Output stream: Custom-Malware_Data_CL
// Note: Input stream uses string/dynamic only. Type conversions in transform.
// ============================================================================

var roleDefinitionResourceId = subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')

resource dataCollectionRule 'Microsoft.Insights/dataCollectionRules@2022-06-01' = {
  name: 'dcr-${workspaceName}-Malware_Data_CL'
  location: location
  properties: {
    dataCollectionEndpointId: dataCollectionEndpointId
    streamDeclarations: {
      'Custom-Malware_Data_CL': {
        columns: [
          {
            name: 'TimeGenerated'
            type: 'string'
          }
          {
            name: 'TenantId'
            type: 'string'
          }
          {
            name: 'campaignScreenshotSet_s'
            type: 'string'
          }
          {
            name: 'lastPublished_d'
            type: 'string'
          }
          {
            name: 'firstPublished_d'
            type: 'string'
          }
          {
            name: 'label_s'
            type: 'string'
          }
          {
            name: 'executiveSummary_s'
            type: 'string'
          }
          {
            name: 'hasReport_b'
            type: 'string'
          }
          {
            name: 'campaignLanguageSet_s'
            type: 'string'
          }
          {
            name: 'reportURL_s'
            type: 'string'
          }
          {
            name: 'threatDetailURL_s'
            type: 'string'
          }
          {
            name: 'deliveryMechanisms_s'
            type: 'string'
          }
          {
            name: 'malwareFamilySet_s'
            type: 'string'
          }
          {
            name: 'threatType_s'
            type: 'string'
          }
          {
            name: 'secureEmailGatewaySet_s'
            type: 'string'
          }
          {
            name: 'naicsCodes_s'
            type: 'string'
          }
          {
            name: 'apiReportURL_s'
            type: 'string'
          }
          {
            name: 'subjectSet_s'
            type: 'string'
          }
          {
            name: 'spamUrlSet_s'
            type: 'string'
          }
          {
            name: 'senderNameSet_s'
            type: 'string'
          }
          {
            name: 'SourceSystem'
            type: 'string'
          }
          {
            name: 'MG'
            type: 'string'
          }
          {
            name: 'ManagementGroupName'
            type: 'string'
          }
          {
            name: 'Computer'
            type: 'string'
          }
          {
            name: 'RawData'
            type: 'string'
          }
          {
            name: 'id_d'
            type: 'string'
          }
          {
            name: 'relatedSearchTags_s'
            type: 'string'
          }
          {
            name: 'feeds_s'
            type: 'string'
          }
          {
            name: 'blockSet_s'
            type: 'string'
          }
          {
            name: 'campaignBrandSet_s'
            type: 'string'
          }
          {
            name: 'extractedStringSet_s'
            type: 'string'
          }
          {
            name: 'domainSet_s'
            type: 'string'
          }
          {
            name: 'senderEmailSet_s'
            type: 'string'
          }
          {
            name: 'executableSet_s'
            type: 'string'
          }
          {
            name: 'senderIpSet_s'
            type: 'string'
          }
          {
            name: 'ReportDownload_HTML__s'
            type: 'string'
          }
          {
            name: 'ReportDownload_PDF__s'
            type: 'string'
          }
        ]
      }
    }
    dataSources: {}
    destinations: {
      logAnalytics: [
        {
          workspaceResourceId: workspaceResourceId
          name: 'Sentinel-Malware_Data_CL'
        }
      ]
    }
    dataFlows: [
      {
        streams: ['Custom-Malware_Data_CL']
        destinations: ['Sentinel-Malware_Data_CL']
        transformKql: 'source | project TimeGenerated = todatetime(TimeGenerated), TenantId = toguid(TenantId), campaignScreenshotSet_s = tostring(campaignScreenshotSet_s), lastPublished_d = toreal(lastPublished_d), firstPublished_d = toreal(firstPublished_d), label_s = tostring(label_s), executiveSummary_s = tostring(executiveSummary_s), hasReport_b = tobool(hasReport_b), campaignLanguageSet_s = tostring(campaignLanguageSet_s), reportURL_s = tostring(reportURL_s), threatDetailURL_s = tostring(threatDetailURL_s), deliveryMechanisms_s = tostring(deliveryMechanisms_s), malwareFamilySet_s = tostring(malwareFamilySet_s), threatType_s = tostring(threatType_s), secureEmailGatewaySet_s = tostring(secureEmailGatewaySet_s), naicsCodes_s = tostring(naicsCodes_s), apiReportURL_s = tostring(apiReportURL_s), subjectSet_s = tostring(subjectSet_s), spamUrlSet_s = tostring(spamUrlSet_s), senderNameSet_s = tostring(senderNameSet_s), SourceSystem = tostring(SourceSystem), MG = tostring(MG), ManagementGroupName = tostring(ManagementGroupName), Computer = tostring(Computer), RawData = tostring(RawData), id_d = toreal(id_d), relatedSearchTags_s = tostring(relatedSearchTags_s), feeds_s = tostring(feeds_s), blockSet_s = tostring(blockSet_s), campaignBrandSet_s = tostring(campaignBrandSet_s), extractedStringSet_s = tostring(extractedStringSet_s), domainSet_s = tostring(domainSet_s), senderEmailSet_s = tostring(senderEmailSet_s), executableSet_s = tostring(executableSet_s), senderIpSet_s = tostring(senderIpSet_s), ReportDownload_HTML__s = tostring(ReportDownload_HTML__s), ReportDownload_PDF__s = tostring(ReportDownload_PDF__s)'
        outputStream: 'Custom-Malware_Data_CL'
      }
    ]
  }
}

// Role Assignment to the DCR
resource roleAssignment 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  scope: dataCollectionRule
  name: guid(resourceGroup().id, roleDefinitionResourceId, dataCollectionRule.name)
  properties: {
    roleDefinitionId: roleDefinitionResourceId
    principalId: servicePrincipalObjectId
    principalType: 'ServicePrincipal'
  }
}

output immutableId string = dataCollectionRule.properties.immutableId
output dataCollectionRuleId string = dataCollectionRule.id
output dataCollectionRuleName string = dataCollectionRule.name
