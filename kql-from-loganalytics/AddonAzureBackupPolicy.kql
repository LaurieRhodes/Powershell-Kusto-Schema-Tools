// ============================================================================
// Azure Data Explorer KQL Script for AddonAzureBackupPolicy - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 11:19:28
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 84, Final columns: 84
// ============================================================================

.create-merge table AddonAzureBackupPolicyRaw (records:dynamic)

.alter-merge table AddonAzureBackupPolicyRaw policy retention softdelete = 1d

.alter table AddonAzureBackupPolicyRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AddonAzureBackupPolicyRaw ingestion json mapping 'AddonAzureBackupPolicyRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AddonAzureBackupPolicy(
TimeGenerated:datetime,
TenantId:guid,
IncrementalBackupFrequency:string,
IncrementalBackupDaysOfTheWeek:string,
DifferentialBackupTimes:string,
DifferentialBackupFrequency:string,
DifferentialBackupDaysOfTheWeek:string,
FullBackupTimes:string,
FullBackupFrequency:string,
IncrementalBackupTimes:string,
FullBackupDaysOfTheWeek:string,
ArchiveTieringDurationType:string,
ArchiveTieringMode:string,
ScheduleWindowStartTime:datetime,
ScheduleWindowDuration:int,
BackupIntervalInHours:int,
PolicySubType:string,
YearlyRetentionWeeksOfTheMonth:string,
ArchiveTieringDuration:int,
PolicyId:string,
SnapshotTierDailyRetentionDuration:int,
SnapshotTierWeeklyRetentionDuration:int,
ResourceGroupName:string,
SubscriptionId:string,
ArchiveTierStorageReplicationType:string,
StorageReplicationType:string,
VaultType:string,
AzureDataCenter:string,
VaultTags:string,
DatasourceType:string,
SnapshotTierDefaultRetentionDuration:int,
StandardTierDefaultRetentionDuration:int,
ArchiveTierDefaultRetentionDuration:int,
ArchiveTierYearlyRetentionDuration:int,
ArchiveTierMonthlyRetentionDuration:int,
ArchiveTierWeeklyRetentionDuration:int,
ArchiveTierDailyRetentionDuration:int,
SnapshotTierYearlyRetentionDuration:int,
SnapshotTierMonthlyRetentionDuration:int,
YearlyRetentionTimes:string,
VaultName:string,
YearlyRetentionMonthsOfTheYear:string,
YearlyRetentionDuration:int,
LogBackupFrequency:int,
DiffBackupTime:string,
DiffBackupRetentionDuration:int,
DiffBackupFormat:string,
DiffBackupDaysofTheWeek:string,
DailyRetentionTimes:string,
DailyRetentionDuration:int,
LogBackupRetentionDuration:int,
BackupTimes:string,
BackupManagementType:string,
BackupFrequency:string,
BackupDaysOfTheWeek:string,
Category:string,
OperationName:string,
ResourceId:string,
SourceSystem:string,
BackupManagementServerUniqueId:string,
MonthlyRetentionDaysOfTheMonth:string,
MonthlyRetentionDaysOfTheWeek:string,
MonthlyRetentionDuration:int,
YearlyRetentionDaysOfTheWeek:string,
YearlyRetentionDaysOfTheMonth:string,
WeeklyRetentionTimes:string,
WeeklyRetentionDuration:int,
WeeklyRetentionDaysOfTheWeek:string,
VaultUniqueId:string,
SynchronisationFrequencyPerDay:string,
State:string,
SchemaVersion:string,
RetentionType:string,
RetentionDuration:int,
PolicyTimeZone:string,
PolicyUniqueId:string,
PolicyName:string,
MonthlyRetentionWeeksOfTheMonth:string,
MonthlyRetentionTimes:string,
MonthlyRetentionFormat:string,
YearlyRetentionFormat:string,
ExtendedProperties:dynamic,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AddonAzureBackupPolicy policy caching hot = 1d

.create-or-alter function AddonAzureBackupPolicyExpand() {
AddonAzureBackupPolicyRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
IncrementalBackupFrequency=tostring(events.IncrementalBackupFrequency),
IncrementalBackupDaysOfTheWeek=tostring(events.IncrementalBackupDaysOfTheWeek),
DifferentialBackupTimes=tostring(events.DifferentialBackupTimes),
DifferentialBackupFrequency=tostring(events.DifferentialBackupFrequency),
DifferentialBackupDaysOfTheWeek=tostring(events.DifferentialBackupDaysOfTheWeek),
FullBackupTimes=tostring(events.FullBackupTimes),
FullBackupFrequency=tostring(events.FullBackupFrequency),
IncrementalBackupTimes=tostring(events.IncrementalBackupTimes),
FullBackupDaysOfTheWeek=tostring(events.FullBackupDaysOfTheWeek),
ArchiveTieringDurationType=tostring(events.ArchiveTieringDurationType),
ArchiveTieringMode=tostring(events.ArchiveTieringMode),
ScheduleWindowStartTime=todatetime(events.ScheduleWindowStartTime),
ScheduleWindowDuration=toint(events.ScheduleWindowDuration),
BackupIntervalInHours=toint(events.BackupIntervalInHours),
PolicySubType=tostring(events.PolicySubType),
YearlyRetentionWeeksOfTheMonth=tostring(events.YearlyRetentionWeeksOfTheMonth),
ArchiveTieringDuration=toint(events.ArchiveTieringDuration),
PolicyId=tostring(events.PolicyId),
SnapshotTierDailyRetentionDuration=toint(events.SnapshotTierDailyRetentionDuration),
SnapshotTierWeeklyRetentionDuration=toint(events.SnapshotTierWeeklyRetentionDuration),
ResourceGroupName=tostring(events.ResourceGroupName),
SubscriptionId=tostring(events.SubscriptionId),
ArchiveTierStorageReplicationType=tostring(events.ArchiveTierStorageReplicationType),
StorageReplicationType=tostring(events.StorageReplicationType),
VaultType=tostring(events.VaultType),
AzureDataCenter=tostring(events.AzureDataCenter),
VaultTags=tostring(events.VaultTags),
DatasourceType=tostring(events.DatasourceType),
SnapshotTierDefaultRetentionDuration=toint(events.SnapshotTierDefaultRetentionDuration),
StandardTierDefaultRetentionDuration=toint(events.StandardTierDefaultRetentionDuration),
ArchiveTierDefaultRetentionDuration=toint(events.ArchiveTierDefaultRetentionDuration),
ArchiveTierYearlyRetentionDuration=toint(events.ArchiveTierYearlyRetentionDuration),
ArchiveTierMonthlyRetentionDuration=toint(events.ArchiveTierMonthlyRetentionDuration),
ArchiveTierWeeklyRetentionDuration=toint(events.ArchiveTierWeeklyRetentionDuration),
ArchiveTierDailyRetentionDuration=toint(events.ArchiveTierDailyRetentionDuration),
SnapshotTierYearlyRetentionDuration=toint(events.SnapshotTierYearlyRetentionDuration),
SnapshotTierMonthlyRetentionDuration=toint(events.SnapshotTierMonthlyRetentionDuration),
YearlyRetentionTimes=tostring(events.YearlyRetentionTimes),
VaultName=tostring(events.VaultName),
YearlyRetentionMonthsOfTheYear=tostring(events.YearlyRetentionMonthsOfTheYear),
YearlyRetentionDuration=toint(events.YearlyRetentionDuration),
LogBackupFrequency=toint(events.LogBackupFrequency),
DiffBackupTime=tostring(events.DiffBackupTime),
DiffBackupRetentionDuration=toint(events.DiffBackupRetentionDuration),
DiffBackupFormat=tostring(events.DiffBackupFormat),
DiffBackupDaysofTheWeek=tostring(events.DiffBackupDaysofTheWeek),
DailyRetentionTimes=tostring(events.DailyRetentionTimes),
DailyRetentionDuration=toint(events.DailyRetentionDuration),
LogBackupRetentionDuration=toint(events.LogBackupRetentionDuration),
BackupTimes=tostring(events.BackupTimes),
BackupManagementType=tostring(events.BackupManagementType),
BackupFrequency=tostring(events.BackupFrequency),
BackupDaysOfTheWeek=tostring(events.BackupDaysOfTheWeek),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
ResourceId=tostring(events.ResourceId),
SourceSystem=tostring(events.SourceSystem),
BackupManagementServerUniqueId=tostring(events.BackupManagementServerUniqueId),
MonthlyRetentionDaysOfTheMonth=tostring(events.MonthlyRetentionDaysOfTheMonth),
MonthlyRetentionDaysOfTheWeek=tostring(events.MonthlyRetentionDaysOfTheWeek),
MonthlyRetentionDuration=toint(events.MonthlyRetentionDuration),
YearlyRetentionDaysOfTheWeek=tostring(events.YearlyRetentionDaysOfTheWeek),
YearlyRetentionDaysOfTheMonth=tostring(events.YearlyRetentionDaysOfTheMonth),
WeeklyRetentionTimes=tostring(events.WeeklyRetentionTimes),
WeeklyRetentionDuration=toint(events.WeeklyRetentionDuration),
WeeklyRetentionDaysOfTheWeek=tostring(events.WeeklyRetentionDaysOfTheWeek),
VaultUniqueId=tostring(events.VaultUniqueId),
SynchronisationFrequencyPerDay=tostring(events.SynchronisationFrequencyPerDay),
State=tostring(events.State),
SchemaVersion=tostring(events.SchemaVersion),
RetentionType=tostring(events.RetentionType),
RetentionDuration=toint(events.RetentionDuration),
PolicyTimeZone=tostring(events.PolicyTimeZone),
PolicyUniqueId=tostring(events.PolicyUniqueId),
PolicyName=tostring(events.PolicyName),
MonthlyRetentionWeeksOfTheMonth=tostring(events.MonthlyRetentionWeeksOfTheMonth),
MonthlyRetentionTimes=tostring(events.MonthlyRetentionTimes),
MonthlyRetentionFormat=tostring(events.MonthlyRetentionFormat),
YearlyRetentionFormat=tostring(events.YearlyRetentionFormat),
ExtendedProperties=todynamic(events.ExtendedProperties),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AddonAzureBackupPolicy policy update @'[{"Source": "AddonAzureBackupPolicyRaw", "Query": "AddonAzureBackupPolicyExpand()", "IsEnabled": "True", "IsTransactional": true}]'
