// ============================================================================
// Azure Data Explorer KQL Script for WVDAutoscaleEvaluationPooled - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:23:13
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 23, Final columns: 23
// ============================================================================

.create-merge table WVDAutoscaleEvaluationPooledRaw (records:dynamic)

.alter-merge table WVDAutoscaleEvaluationPooledRaw policy retention softdelete = 1d

.alter table WVDAutoscaleEvaluationPooledRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table WVDAutoscaleEvaluationPooledRaw ingestion json mapping 'WVDAutoscaleEvaluationPooledRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table WVDAutoscaleEvaluationPooled(
TimeGenerated:datetime,
TenantId:guid,
ActiveSessionHostsPercent:real,
SessionOccupancyPercent:real,
SessionCount:int,
ActiveSessionHostCount:int,
ExcludedSessionHostCount:int,
UnhealthySessionHostCount:int,
TotalSessionHostCount:int,
ConfigMinActiveSessionHostsPercent:real,
ConfigCapacityThresholdPercent:real,
MaxSessionLimitPerSessionHost:int,
ConfigSchedulePhase:string,
ConfigScheduleName:string,
ScalingEvaluationStartTime:datetime,
ScalingReasonMessage:string,
ResultType:string,
ScalingPlanResourceId:string,
CorrelationId:string,
Properties:dynamic,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table WVDAutoscaleEvaluationPooled policy caching hot = 1d

.create-or-alter function WVDAutoscaleEvaluationPooledExpand() {
WVDAutoscaleEvaluationPooledRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ActiveSessionHostsPercent=toreal(events.ActiveSessionHostsPercent),
SessionOccupancyPercent=toreal(events.SessionOccupancyPercent),
SessionCount=toint(events.SessionCount),
ActiveSessionHostCount=toint(events.ActiveSessionHostCount),
ExcludedSessionHostCount=toint(events.ExcludedSessionHostCount),
UnhealthySessionHostCount=toint(events.UnhealthySessionHostCount),
TotalSessionHostCount=toint(events.TotalSessionHostCount),
ConfigMinActiveSessionHostsPercent=toreal(events.ConfigMinActiveSessionHostsPercent),
ConfigCapacityThresholdPercent=toreal(events.ConfigCapacityThresholdPercent),
MaxSessionLimitPerSessionHost=toint(events.MaxSessionLimitPerSessionHost),
ConfigSchedulePhase=tostring(events.ConfigSchedulePhase),
ConfigScheduleName=tostring(events.ConfigScheduleName),
ScalingEvaluationStartTime=todatetime(events.ScalingEvaluationStartTime),
ScalingReasonMessage=tostring(events.ScalingReasonMessage),
ResultType=tostring(events.ResultType),
ScalingPlanResourceId=tostring(events.ScalingPlanResourceId),
CorrelationId=tostring(events.CorrelationId),
Properties=todynamic(events.Properties),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table WVDAutoscaleEvaluationPooled policy update @'[{"Source": "WVDAutoscaleEvaluationPooledRaw", "Query": "WVDAutoscaleEvaluationPooledExpand()", "IsEnabled": "True", "IsTransactional": true}]'
