// ============================================================================
// Azure Data Explorer KQL Script for HDInsightKafkaServerLog - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:15:20
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 11, Final columns: 11
// ============================================================================

.create-merge table HDInsightKafkaServerLogRaw (records:dynamic)

.alter-merge table HDInsightKafkaServerLogRaw policy retention softdelete = 1d

.alter table HDInsightKafkaServerLogRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table HDInsightKafkaServerLogRaw ingestion json mapping 'HDInsightKafkaServerLogRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table HDInsightKafkaServerLog(
TimeGenerated:datetime,
TenantId:guid,
CorrelationId:string,
Message:string,
ClusterDnsName:string,
HostName:string,
ClusterType:string,
FluentdIngestTimestamp:datetime,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table HDInsightKafkaServerLog policy caching hot = 1d

.create-or-alter function HDInsightKafkaServerLogExpand() {
HDInsightKafkaServerLogRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
CorrelationId=tostring(events.CorrelationId),
Message=tostring(events.Message),
ClusterDnsName=tostring(events.ClusterDnsName),
HostName=tostring(events.HostName),
ClusterType=tostring(events.ClusterType),
FluentdIngestTimestamp=todatetime(events.FluentdIngestTimestamp),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table HDInsightKafkaServerLog policy update @'[{"Source": "HDInsightKafkaServerLogRaw", "Query": "HDInsightKafkaServerLogExpand()", "IsEnabled": "True", "IsTransactional": true}]'
