// ============================================================================
// Azure Data Explorer KQL Script for AADDomainServicesPolicyChange - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 11:17:54
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 109, Final columns: 109
// ============================================================================

.create-merge table AADDomainServicesPolicyChangeRaw (records:dynamic)

.alter-merge table AADDomainServicesPolicyChangeRaw policy retention softdelete = 1d

.alter table AADDomainServicesPolicyChangeRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AADDomainServicesPolicyChangeRaw ingestion json mapping 'AADDomainServicesPolicyChangeRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AADDomainServicesPolicyChange(
TimeGenerated:datetime,
TenantId:guid,
SubcategoryId:string,
CategoryId:string,
AccessRemoved:string,
AccessGranted:string,
KerberosPolicyChange:string,
SidFilteringEnabled:string,
DomainSid:string,
DomainName:string,
DisabledPrivilegeList:string,
EnabledPrivilegeList:string,
SubcategoryGuid:string,
TdoType:int,
TdoDirection:int,
NewSd:string,
OldSd:string,
HandleId:string,
ObjectName:string,
ObjectType:string,
ObjectServer:string,
CrashOnAuditFailValue:int,
aadds_RecordId:string,
aadds_EventSourceId:string,
TdoAttributes:int,
AuditPolicyChanges:string,
DomainPolicyChanged:string,
MinPasswordAge:string,
AuditSourceName:string,
EntryType:int,
OperationId:string,
ForestRootSid:string,
Flags:int,
NetbiosName:string,
DnsName:string,
TopLevelName:string,
ForestRoot:string,
CollisionTargetName:string,
CollisionTargetType:int,
OemInformation:string,
DomainBehaviorVersion:string,
MixedDomainMode:string,
MachineAccountQuota:string,
PasswordHistoryLength:string,
MinPasswordLength:string,
PasswordProperties:string,
LockoutDuration:string,
LockoutObservationWindow:string,
LockoutThreshold:string,
ForceLogoff:string,
MaxPasswordAge:string,
aadds_AuditSourceName:string,
aadds_EntryType:int,
aadds_OperationId:string,
aadds_ForestRootSid:string,
aadds_KerberosPolicyChange:string,
aadds_SidFilteringEnabled:string,
aadds_DomainSid:string,
aadds_DomainName:string,
aadds_DisabledPrivilegeList:string,
aadds_EnabledPrivilegeList:string,
aadds_TdoType:int,
aadds_TdoAttributes:int,
aadds_TdoDirection:int,
aadds_NewSd:string,
aadds_OldSd:string,
aadds_HandleId:string,
aadds_ObjectName:string,
aadds_ObjectType:string,
aadds_ObjectServer:string,
aadds_CrashOnAuditFailValue:int,
CorrelationId:string,
ResultDescription:string,
ResultType:string,
Category:string,
OperationName:string,
ResourceId:string,
SourceSystem:string,
aadds_AccessGranted:string,
EventSourceId:string,
aadds_AccessRemoved:string,
aadds_SubcategoryId:string,
aadds_Flags:int,
aadds_NetbiosName:string,
aadds_DnsName:string,
aadds_TopLevelName:string,
aadds_ForestRoot:string,
aadds_CollisionTargetName:string,
aadds_CollisionTargetType:int,
aadds_OemInformation:string,
aadds_DomainBehaviorVersion:string,
aadds_MixedDomainMode:string,
aadds_MachineAccountQuota:string,
aadds_PasswordHistoryLength:string,
aadds_MinPasswordLength:string,
aadds_PasswordProperties:string,
aadds_LockoutDuration:string,
aadds_LockoutObservationWindow:string,
aadds_LockoutThreshold:string,
aadds_ForceLogoff:string,
aadds_MaxPasswordAge:string,
aadds_MinPasswordAge:string,
aadds_DomainPolicyChanged:string,
aadds_AuditPolicyChanges:string,
aadds_SubcategoryGuid:string,
aadds_CategoryId:string,
RecordId:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AADDomainServicesPolicyChange policy caching hot = 1d

.create-or-alter function AADDomainServicesPolicyChangeExpand() {
AADDomainServicesPolicyChangeRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
SubcategoryId=tostring(events.SubcategoryId),
CategoryId=tostring(events.CategoryId),
AccessRemoved=tostring(events.AccessRemoved),
AccessGranted=tostring(events.AccessGranted),
KerberosPolicyChange=tostring(events.KerberosPolicyChange),
SidFilteringEnabled=tostring(events.SidFilteringEnabled),
DomainSid=tostring(events.DomainSid),
DomainName=tostring(events.DomainName),
DisabledPrivilegeList=tostring(events.DisabledPrivilegeList),
EnabledPrivilegeList=tostring(events.EnabledPrivilegeList),
SubcategoryGuid=tostring(events.SubcategoryGuid),
TdoType=toint(events.TdoType),
TdoDirection=toint(events.TdoDirection),
NewSd=tostring(events.NewSd),
OldSd=tostring(events.OldSd),
HandleId=tostring(events.HandleId),
ObjectName=tostring(events.ObjectName),
ObjectType=tostring(events.ObjectType),
ObjectServer=tostring(events.ObjectServer),
CrashOnAuditFailValue=toint(events.CrashOnAuditFailValue),
aadds_RecordId=tostring(events.aadds_RecordId),
aadds_EventSourceId=tostring(events.aadds_EventSourceId),
TdoAttributes=toint(events.TdoAttributes),
AuditPolicyChanges=tostring(events.AuditPolicyChanges),
DomainPolicyChanged=tostring(events.DomainPolicyChanged),
MinPasswordAge=tostring(events.MinPasswordAge),
AuditSourceName=tostring(events.AuditSourceName),
EntryType=toint(events.EntryType),
OperationId=tostring(events.OperationId),
ForestRootSid=tostring(events.ForestRootSid),
Flags=toint(events.Flags),
NetbiosName=tostring(events.NetbiosName),
DnsName=tostring(events.DnsName),
TopLevelName=tostring(events.TopLevelName),
ForestRoot=tostring(events.ForestRoot),
CollisionTargetName=tostring(events.CollisionTargetName),
CollisionTargetType=toint(events.CollisionTargetType),
OemInformation=tostring(events.OemInformation),
DomainBehaviorVersion=tostring(events.DomainBehaviorVersion),
MixedDomainMode=tostring(events.MixedDomainMode),
MachineAccountQuota=tostring(events.MachineAccountQuota),
PasswordHistoryLength=tostring(events.PasswordHistoryLength),
MinPasswordLength=tostring(events.MinPasswordLength),
PasswordProperties=tostring(events.PasswordProperties),
LockoutDuration=tostring(events.LockoutDuration),
LockoutObservationWindow=tostring(events.LockoutObservationWindow),
LockoutThreshold=tostring(events.LockoutThreshold),
ForceLogoff=tostring(events.ForceLogoff),
MaxPasswordAge=tostring(events.MaxPasswordAge),
aadds_AuditSourceName=tostring(events.aadds_AuditSourceName),
aadds_EntryType=toint(events.aadds_EntryType),
aadds_OperationId=tostring(events.aadds_OperationId),
aadds_ForestRootSid=tostring(events.aadds_ForestRootSid),
aadds_KerberosPolicyChange=tostring(events.aadds_KerberosPolicyChange),
aadds_SidFilteringEnabled=tostring(events.aadds_SidFilteringEnabled),
aadds_DomainSid=tostring(events.aadds_DomainSid),
aadds_DomainName=tostring(events.aadds_DomainName),
aadds_DisabledPrivilegeList=tostring(events.aadds_DisabledPrivilegeList),
aadds_EnabledPrivilegeList=tostring(events.aadds_EnabledPrivilegeList),
aadds_TdoType=toint(events.aadds_TdoType),
aadds_TdoAttributes=toint(events.aadds_TdoAttributes),
aadds_TdoDirection=toint(events.aadds_TdoDirection),
aadds_NewSd=tostring(events.aadds_NewSd),
aadds_OldSd=tostring(events.aadds_OldSd),
aadds_HandleId=tostring(events.aadds_HandleId),
aadds_ObjectName=tostring(events.aadds_ObjectName),
aadds_ObjectType=tostring(events.aadds_ObjectType),
aadds_ObjectServer=tostring(events.aadds_ObjectServer),
aadds_CrashOnAuditFailValue=toint(events.aadds_CrashOnAuditFailValue),
CorrelationId=tostring(events.CorrelationId),
ResultDescription=tostring(events.ResultDescription),
ResultType=tostring(events.ResultType),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
ResourceId=tostring(events.ResourceId),
SourceSystem=tostring(events.SourceSystem),
aadds_AccessGranted=tostring(events.aadds_AccessGranted),
EventSourceId=tostring(events.EventSourceId),
aadds_AccessRemoved=tostring(events.aadds_AccessRemoved),
aadds_SubcategoryId=tostring(events.aadds_SubcategoryId),
aadds_Flags=toint(events.aadds_Flags),
aadds_NetbiosName=tostring(events.aadds_NetbiosName),
aadds_DnsName=tostring(events.aadds_DnsName),
aadds_TopLevelName=tostring(events.aadds_TopLevelName),
aadds_ForestRoot=tostring(events.aadds_ForestRoot),
aadds_CollisionTargetName=tostring(events.aadds_CollisionTargetName),
aadds_CollisionTargetType=toint(events.aadds_CollisionTargetType),
aadds_OemInformation=tostring(events.aadds_OemInformation),
aadds_DomainBehaviorVersion=tostring(events.aadds_DomainBehaviorVersion),
aadds_MixedDomainMode=tostring(events.aadds_MixedDomainMode),
aadds_MachineAccountQuota=tostring(events.aadds_MachineAccountQuota),
aadds_PasswordHistoryLength=tostring(events.aadds_PasswordHistoryLength),
aadds_MinPasswordLength=tostring(events.aadds_MinPasswordLength),
aadds_PasswordProperties=tostring(events.aadds_PasswordProperties),
aadds_LockoutDuration=tostring(events.aadds_LockoutDuration),
aadds_LockoutObservationWindow=tostring(events.aadds_LockoutObservationWindow),
aadds_LockoutThreshold=tostring(events.aadds_LockoutThreshold),
aadds_ForceLogoff=tostring(events.aadds_ForceLogoff),
aadds_MaxPasswordAge=tostring(events.aadds_MaxPasswordAge),
aadds_MinPasswordAge=tostring(events.aadds_MinPasswordAge),
aadds_DomainPolicyChanged=tostring(events.aadds_DomainPolicyChanged),
aadds_AuditPolicyChanges=tostring(events.aadds_AuditPolicyChanges),
aadds_SubcategoryGuid=tostring(events.aadds_SubcategoryGuid),
aadds_CategoryId=tostring(events.aadds_CategoryId),
RecordId=tostring(events.RecordId),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AADDomainServicesPolicyChange policy update @'[{"Source": "AADDomainServicesPolicyChangeRaw", "Query": "AADDomainServicesPolicyChangeExpand()", "IsEnabled": "True", "IsTransactional": true}]'
