// ============================================================================
// Azure Data Explorer KQL Script for CommonSecurityLog - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 11:25:25
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 160, Final columns: 160
// ============================================================================

.create-merge table CommonSecurityLogRaw (records:dynamic)

.alter-merge table CommonSecurityLogRaw policy retention softdelete = 1d

.alter table CommonSecurityLogRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table CommonSecurityLogRaw ingestion json mapping 'CommonSecurityLogRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table CommonSecurityLog(
TimeGenerated:datetime,
TenantId:guid,
DeviceCustomFloatingPoint1Label:string,
DeviceCustomFloatingPoint2:real,
DeviceCustomFloatingPoint2Label:string,
DeviceCustomFloatingPoint3:real,
DeviceCustomFloatingPoint3Label:string,
DeviceCustomFloatingPoint4:real,
DeviceCustomFloatingPoint4Label:string,
DeviceCustomNumber1:int,
FieldDeviceCustomNumber1:long,
DeviceCustomNumber1Label:string,
DeviceCustomNumber2:int,
FieldDeviceCustomNumber2:long,
DeviceCustomNumber2Label:string,
DeviceCustomNumber3:int,
FieldDeviceCustomNumber3:long,
DeviceCustomFloatingPoint1:real,
DeviceCustomIPv6Address4Label:string,
DeviceCustomIPv6Address4:string,
DeviceCustomIPv6Address3Label:string,
SourceTranslatedPort:int,
SourceProcessId:int,
SourceUserPrivileges:string,
SourceProcessName:string,
SourcePort:int,
SourceIP:string,
StartTime:datetime,
DeviceCustomNumber3Label:string,
SourceUserID:string,
EventType:int,
DeviceEventCategory:string,
DeviceCustomIPv6Address1:string,
DeviceCustomIPv6Address1Label:string,
DeviceCustomIPv6Address2:string,
DeviceCustomIPv6Address2Label:string,
DeviceCustomIPv6Address3:string,
SourceUserName:string,
DeviceCustomString1:string,
DeviceCustomString1Label:string,
DeviceCustomString2:string,
FlexString1Label:string,
FlexString2:string,
FlexString2Label:string,
RemoteIP:string,
RemotePort:string,
MaliciousIP:string,
ThreatSeverity:int,
FlexString1:string,
IndicatorThreatType:string,
ThreatConfidence:string,
ReportReferenceLink:string,
MaliciousIPLongitude:real,
MaliciousIPLatitude:real,
MaliciousIPCountry:string,
Computer:string,
SourceSystem:string,
ThreatDescription:string,
SourceTranslatedAddress:string,
FlexNumber2Label:string,
FlexNumber1Label:string,
DeviceCustomString2Label:string,
DeviceCustomString3:string,
DeviceCustomString3Label:string,
DeviceCustomString4:string,
DeviceCustomString4Label:string,
DeviceCustomString5:string,
DeviceCustomString5Label:string,
FlexNumber2:int,
DeviceCustomString6:string,
DeviceCustomDate1:string,
DeviceCustomDate1Label:string,
DeviceCustomDate2:string,
DeviceCustomDate2Label:string,
FlexDate1:string,
FlexDate1Label:string,
FlexNumber1:int,
DeviceCustomString6Label:string,
SimplifiedDeviceAction:string,
SourceServiceName:string,
SourceNTDomain:string,
DeviceNtDomain:string,
DeviceOutboundInterface:string,
DevicePayloadId:string,
ProcessName:string,
DeviceTranslatedAddress:string,
DestinationHostName:string,
DestinationMACAddress:string,
DestinationNTDomain:string,
DestinationProcessId:int,
DestinationUserPrivileges:string,
DestinationProcessName:string,
DestinationPort:int,
DestinationIP:string,
DeviceTimeZone:string,
DestinationUserID:string,
DeviceInboundInterface:string,
DeviceFacility:string,
DeviceExternalID:string,
DeviceDnsDomain:string,
DeviceVendor:string,
DeviceProduct:string,
DeviceVersion:string,
DeviceEventClassID:string,
Activity:string,
LogSeverity:string,
OriginalLogSeverity:string,
DestinationUserName:string,
AdditionalExtensions:string,
ApplicationProtocol:string,
EventCount:int,
DestinationDnsDomain:string,
DestinationServiceName:string,
DestinationTranslatedAddress:string,
DestinationTranslatedPort:int,
CommunicationDirection:string,
DeviceAction:string,
DeviceAddress:string,
DeviceName:string,
DeviceMacAddress:string,
OldFilePath:string,
OldFilePermission:string,
OldFileSize:int,
OldFileType:string,
SentBytes:long,
EventOutcome:string,
Protocol:string,
OldFileName:string,
Reason:string,
RequestClientApplication:string,
RequestContext:string,
RequestCookies:string,
RequestMethod:string,
ReceiptTime:string,
SourceHostName:string,
SourceMACAddress:string,
RequestURL:string,
SourceDnsDomain:string,
OldFileModificationTime:string,
OldFileHash:string,
ProcessID:int,
EndTime:datetime,
ExternalID:int,
ExtID:string,
FileCreateTime:string,
FileHash:string,
FileID:string,
OldFileID:string,
FileModificationTime:string,
FilePermission:string,
FileType:string,
FileName:string,
FileSize:int,
ReceivedBytes:long,
Message:string,
OldFileCreateTime:string,
FilePath:string,
CollectorHostName:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table CommonSecurityLog policy caching hot = 1d

.create-or-alter function CommonSecurityLogExpand() {
CommonSecurityLogRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
DeviceCustomFloatingPoint1Label=tostring(events.DeviceCustomFloatingPoint1Label),
DeviceCustomFloatingPoint2=toreal(events.DeviceCustomFloatingPoint2),
DeviceCustomFloatingPoint2Label=tostring(events.DeviceCustomFloatingPoint2Label),
DeviceCustomFloatingPoint3=toreal(events.DeviceCustomFloatingPoint3),
DeviceCustomFloatingPoint3Label=tostring(events.DeviceCustomFloatingPoint3Label),
DeviceCustomFloatingPoint4=toreal(events.DeviceCustomFloatingPoint4),
DeviceCustomFloatingPoint4Label=tostring(events.DeviceCustomFloatingPoint4Label),
DeviceCustomNumber1=toint(events.DeviceCustomNumber1),
FieldDeviceCustomNumber1=tolong(events.FieldDeviceCustomNumber1),
DeviceCustomNumber1Label=tostring(events.DeviceCustomNumber1Label),
DeviceCustomNumber2=toint(events.DeviceCustomNumber2),
FieldDeviceCustomNumber2=tolong(events.FieldDeviceCustomNumber2),
DeviceCustomNumber2Label=tostring(events.DeviceCustomNumber2Label),
DeviceCustomNumber3=toint(events.DeviceCustomNumber3),
FieldDeviceCustomNumber3=tolong(events.FieldDeviceCustomNumber3),
DeviceCustomFloatingPoint1=toreal(events.DeviceCustomFloatingPoint1),
DeviceCustomIPv6Address4Label=tostring(events.DeviceCustomIPv6Address4Label),
DeviceCustomIPv6Address4=tostring(events.DeviceCustomIPv6Address4),
DeviceCustomIPv6Address3Label=tostring(events.DeviceCustomIPv6Address3Label),
SourceTranslatedPort=toint(events.SourceTranslatedPort),
SourceProcessId=toint(events.SourceProcessId),
SourceUserPrivileges=tostring(events.SourceUserPrivileges),
SourceProcessName=tostring(events.SourceProcessName),
SourcePort=toint(events.SourcePort),
SourceIP=tostring(events.SourceIP),
StartTime=todatetime(events.StartTime),
DeviceCustomNumber3Label=tostring(events.DeviceCustomNumber3Label),
SourceUserID=tostring(events.SourceUserID),
EventType=toint(events.EventType),
DeviceEventCategory=tostring(events.DeviceEventCategory),
DeviceCustomIPv6Address1=tostring(events.DeviceCustomIPv6Address1),
DeviceCustomIPv6Address1Label=tostring(events.DeviceCustomIPv6Address1Label),
DeviceCustomIPv6Address2=tostring(events.DeviceCustomIPv6Address2),
DeviceCustomIPv6Address2Label=tostring(events.DeviceCustomIPv6Address2Label),
DeviceCustomIPv6Address3=tostring(events.DeviceCustomIPv6Address3),
SourceUserName=tostring(events.SourceUserName),
DeviceCustomString1=tostring(events.DeviceCustomString1),
DeviceCustomString1Label=tostring(events.DeviceCustomString1Label),
DeviceCustomString2=tostring(events.DeviceCustomString2),
FlexString1Label=tostring(events.FlexString1Label),
FlexString2=tostring(events.FlexString2),
FlexString2Label=tostring(events.FlexString2Label),
RemoteIP=tostring(events.RemoteIP),
RemotePort=tostring(events.RemotePort),
MaliciousIP=tostring(events.MaliciousIP),
ThreatSeverity=toint(events.ThreatSeverity),
FlexString1=tostring(events.FlexString1),
IndicatorThreatType=tostring(events.IndicatorThreatType),
ThreatConfidence=tostring(events.ThreatConfidence),
ReportReferenceLink=tostring(events.ReportReferenceLink),
MaliciousIPLongitude=toreal(events.MaliciousIPLongitude),
MaliciousIPLatitude=toreal(events.MaliciousIPLatitude),
MaliciousIPCountry=tostring(events.MaliciousIPCountry),
Computer=tostring(events.Computer),
SourceSystem=tostring(events.SourceSystem),
ThreatDescription=tostring(events.ThreatDescription),
SourceTranslatedAddress=tostring(events.SourceTranslatedAddress),
FlexNumber2Label=tostring(events.FlexNumber2Label),
FlexNumber1Label=tostring(events.FlexNumber1Label),
DeviceCustomString2Label=tostring(events.DeviceCustomString2Label),
DeviceCustomString3=tostring(events.DeviceCustomString3),
DeviceCustomString3Label=tostring(events.DeviceCustomString3Label),
DeviceCustomString4=tostring(events.DeviceCustomString4),
DeviceCustomString4Label=tostring(events.DeviceCustomString4Label),
DeviceCustomString5=tostring(events.DeviceCustomString5),
DeviceCustomString5Label=tostring(events.DeviceCustomString5Label),
FlexNumber2=toint(events.FlexNumber2),
DeviceCustomString6=tostring(events.DeviceCustomString6),
DeviceCustomDate1=tostring(events.DeviceCustomDate1),
DeviceCustomDate1Label=tostring(events.DeviceCustomDate1Label),
DeviceCustomDate2=tostring(events.DeviceCustomDate2),
DeviceCustomDate2Label=tostring(events.DeviceCustomDate2Label),
FlexDate1=tostring(events.FlexDate1),
FlexDate1Label=tostring(events.FlexDate1Label),
FlexNumber1=toint(events.FlexNumber1),
DeviceCustomString6Label=tostring(events.DeviceCustomString6Label),
SimplifiedDeviceAction=tostring(events.SimplifiedDeviceAction),
SourceServiceName=tostring(events.SourceServiceName),
SourceNTDomain=tostring(events.SourceNTDomain),
DeviceNtDomain=tostring(events.DeviceNtDomain),
DeviceOutboundInterface=tostring(events.DeviceOutboundInterface),
DevicePayloadId=tostring(events.DevicePayloadId),
ProcessName=tostring(events.ProcessName),
DeviceTranslatedAddress=tostring(events.DeviceTranslatedAddress),
DestinationHostName=tostring(events.DestinationHostName),
DestinationMACAddress=tostring(events.DestinationMACAddress),
DestinationNTDomain=tostring(events.DestinationNTDomain),
DestinationProcessId=toint(events.DestinationProcessId),
DestinationUserPrivileges=tostring(events.DestinationUserPrivileges),
DestinationProcessName=tostring(events.DestinationProcessName),
DestinationPort=toint(events.DestinationPort),
DestinationIP=tostring(events.DestinationIP),
DeviceTimeZone=tostring(events.DeviceTimeZone),
DestinationUserID=tostring(events.DestinationUserID),
DeviceInboundInterface=tostring(events.DeviceInboundInterface),
DeviceFacility=tostring(events.DeviceFacility),
DeviceExternalID=tostring(events.DeviceExternalID),
DeviceDnsDomain=tostring(events.DeviceDnsDomain),
DeviceVendor=tostring(events.DeviceVendor),
DeviceProduct=tostring(events.DeviceProduct),
DeviceVersion=tostring(events.DeviceVersion),
DeviceEventClassID=tostring(events.DeviceEventClassID),
Activity=tostring(events.Activity),
LogSeverity=tostring(events.LogSeverity),
OriginalLogSeverity=tostring(events.OriginalLogSeverity),
DestinationUserName=tostring(events.DestinationUserName),
AdditionalExtensions=tostring(events.AdditionalExtensions),
ApplicationProtocol=tostring(events.ApplicationProtocol),
EventCount=toint(events.EventCount),
DestinationDnsDomain=tostring(events.DestinationDnsDomain),
DestinationServiceName=tostring(events.DestinationServiceName),
DestinationTranslatedAddress=tostring(events.DestinationTranslatedAddress),
DestinationTranslatedPort=toint(events.DestinationTranslatedPort),
CommunicationDirection=tostring(events.CommunicationDirection),
DeviceAction=tostring(events.DeviceAction),
DeviceAddress=tostring(events.DeviceAddress),
DeviceName=tostring(events.DeviceName),
DeviceMacAddress=tostring(events.DeviceMacAddress),
OldFilePath=tostring(events.OldFilePath),
OldFilePermission=tostring(events.OldFilePermission),
OldFileSize=toint(events.OldFileSize),
OldFileType=tostring(events.OldFileType),
SentBytes=tolong(events.SentBytes),
EventOutcome=tostring(events.EventOutcome),
Protocol=tostring(events.Protocol),
OldFileName=tostring(events.OldFileName),
Reason=tostring(events.Reason),
RequestClientApplication=tostring(events.RequestClientApplication),
RequestContext=tostring(events.RequestContext),
RequestCookies=tostring(events.RequestCookies),
RequestMethod=tostring(events.RequestMethod),
ReceiptTime=tostring(events.ReceiptTime),
SourceHostName=tostring(events.SourceHostName),
SourceMACAddress=tostring(events.SourceMACAddress),
RequestURL=tostring(events.RequestURL),
SourceDnsDomain=tostring(events.SourceDnsDomain),
OldFileModificationTime=tostring(events.OldFileModificationTime),
OldFileHash=tostring(events.OldFileHash),
ProcessID=toint(events.ProcessID),
EndTime=todatetime(events.EndTime),
ExternalID=toint(events.ExternalID),
ExtID=tostring(events.ExtID),
FileCreateTime=tostring(events.FileCreateTime),
FileHash=tostring(events.FileHash),
FileID=tostring(events.FileID),
OldFileID=tostring(events.OldFileID),
FileModificationTime=tostring(events.FileModificationTime),
FilePermission=tostring(events.FilePermission),
FileType=tostring(events.FileType),
FileName=tostring(events.FileName),
FileSize=toint(events.FileSize),
ReceivedBytes=tolong(events.ReceivedBytes),
Message=tostring(events.Message),
OldFileCreateTime=tostring(events.OldFileCreateTime),
FilePath=tostring(events.FilePath),
CollectorHostName=tostring(events.CollectorHostName),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table CommonSecurityLog policy update @'[{"Source": "CommonSecurityLogRaw", "Query": "CommonSecurityLogExpand()", "IsEnabled": "True", "IsTransactional": true}]'
