// ============================================================================
// Azure Data Explorer KQL Script for OktaSystemLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:18:43
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 60, Final columns: 60
// ============================================================================

.create-merge table OktaSystemLogsRaw (records:dynamic)

.alter-merge table OktaSystemLogsRaw policy retention softdelete = 1d

.alter table OktaSystemLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table OktaSystemLogsRaw ingestion json mapping 'OktaSystemLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table OktaSystemLogs(
TimeGenerated:datetime,
TenantId:guid,
OriginalSeverity:string,
OriginalTarget:dynamic,
OriginalUserId:string,
OriginalUserType:string,
Request:dynamic,
SecurityContextAsNumber:int,
SecurityContextAsOrg:string,
SecurityContextDomain:string,
SecurityContextIsProxy:bool,
SrcDeviceType:string,
SrcDvcId:string,
SrcDvcOs:string,
SrcGeoCity:string,
SrcGeoCountry:string,
SrcGeoLatitude:real,
SrcGeoLongtitude:real,
SrcGeoPostalCode:string,
SrcGeoRegion:string,
SrcIpAddr:string,
SrcIsp:string,
SrcZone:string,
TransactionDetail:dynamic,
TransactionId:string,
TransactionType:string,
Version:string,
OriginalOutcomeResult:string,
OriginalClientDevice:string,
OriginalActorAlternateId:string,
LogonMethod:string,
ActingAppName:string,
ActingAppType:string,
ActorDetailEntry:dynamic,
ActorDisplayName:string,
ActorSessionId:string,
ActorUserId:string,
ActorUserIdType:string,
ActorUsername:string,
ActorUsernameType:string,
ActorUserType:string,
AuthenticationContextAuthenticationProvider:string,
AuthenticationContextAuthenticationStep:int,
SrcDvcIdType:string,
AuthenticationContextCredentialProvider:string,
AuthenticationContextIssuerId:string,
AuthenticationContextIssuerType:string,
DebugData:dynamic,
DvcAction:string,
EventMessage:string,
EventOriginalResultDetails:string,
EventOriginalType:string,
EventOriginalUid:string,
EventResult:string,
EventSeverity:string,
HttpUserAgent:string,
LegacyEventType:string,
AuthenticationContextInterface:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table OktaSystemLogs policy caching hot = 1d

.create-or-alter function OktaSystemLogsExpand() {
OktaSystemLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
OriginalSeverity=tostring(events.OriginalSeverity),
OriginalTarget=todynamic(events.OriginalTarget),
OriginalUserId=tostring(events.OriginalUserId),
OriginalUserType=tostring(events.OriginalUserType),
Request=todynamic(events.Request),
SecurityContextAsNumber=toint(events.SecurityContextAsNumber),
SecurityContextAsOrg=tostring(events.SecurityContextAsOrg),
SecurityContextDomain=tostring(events.SecurityContextDomain),
SecurityContextIsProxy=tobool(events.SecurityContextIsProxy),
SrcDeviceType=tostring(events.SrcDeviceType),
SrcDvcId=tostring(events.SrcDvcId),
SrcDvcOs=tostring(events.SrcDvcOs),
SrcGeoCity=tostring(events.SrcGeoCity),
SrcGeoCountry=tostring(events.SrcGeoCountry),
SrcGeoLatitude=toreal(events.SrcGeoLatitude),
SrcGeoLongtitude=toreal(events.SrcGeoLongtitude),
SrcGeoPostalCode=tostring(events.SrcGeoPostalCode),
SrcGeoRegion=tostring(events.SrcGeoRegion),
SrcIpAddr=tostring(events.SrcIpAddr),
SrcIsp=tostring(events.SrcIsp),
SrcZone=tostring(events.SrcZone),
TransactionDetail=todynamic(events.TransactionDetail),
TransactionId=tostring(events.TransactionId),
TransactionType=tostring(events.TransactionType),
Version=tostring(events.Version),
OriginalOutcomeResult=tostring(events.OriginalOutcomeResult),
OriginalClientDevice=tostring(events.OriginalClientDevice),
OriginalActorAlternateId=tostring(events.OriginalActorAlternateId),
LogonMethod=tostring(events.LogonMethod),
ActingAppName=tostring(events.ActingAppName),
ActingAppType=tostring(events.ActingAppType),
ActorDetailEntry=todynamic(events.ActorDetailEntry),
ActorDisplayName=tostring(events.ActorDisplayName),
ActorSessionId=tostring(events.ActorSessionId),
ActorUserId=tostring(events.ActorUserId),
ActorUserIdType=tostring(events.ActorUserIdType),
ActorUsername=tostring(events.ActorUsername),
ActorUsernameType=tostring(events.ActorUsernameType),
ActorUserType=tostring(events.ActorUserType),
AuthenticationContextAuthenticationProvider=tostring(events.AuthenticationContextAuthenticationProvider),
AuthenticationContextAuthenticationStep=toint(events.AuthenticationContextAuthenticationStep),
SrcDvcIdType=tostring(events.SrcDvcIdType),
AuthenticationContextCredentialProvider=tostring(events.AuthenticationContextCredentialProvider),
AuthenticationContextIssuerId=tostring(events.AuthenticationContextIssuerId),
AuthenticationContextIssuerType=tostring(events.AuthenticationContextIssuerType),
DebugData=todynamic(events.DebugData),
DvcAction=tostring(events.DvcAction),
EventMessage=tostring(events.EventMessage),
EventOriginalResultDetails=tostring(events.EventOriginalResultDetails),
EventOriginalType=tostring(events.EventOriginalType),
EventOriginalUid=tostring(events.EventOriginalUid),
EventResult=tostring(events.EventResult),
EventSeverity=tostring(events.EventSeverity),
HttpUserAgent=tostring(events.HttpUserAgent),
LegacyEventType=tostring(events.LegacyEventType),
AuthenticationContextInterface=tostring(events.AuthenticationContextInterface),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table OktaSystemLogs policy update @'[{"Source": "OktaSystemLogsRaw", "Query": "OktaSystemLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
