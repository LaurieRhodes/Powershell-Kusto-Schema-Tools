// ============================================================================
// Azure Data Explorer KQL Script for AZMSDiagnosticErrorLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 11:24:25
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 14, Final columns: 14
// ============================================================================

.create-merge table AZMSDiagnosticErrorLogsRaw (records:dynamic)

.alter-merge table AZMSDiagnosticErrorLogsRaw policy retention softdelete = 1d

.alter table AZMSDiagnosticErrorLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AZMSDiagnosticErrorLogsRaw ingestion json mapping 'AZMSDiagnosticErrorLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AZMSDiagnosticErrorLogs(
TimeGenerated:datetime,
TenantId:guid,
ActivityId:string,
ActivityName:string,
NamespaceName:string,
EntityType:string,
EntityName:string,
OperationResult:string,
ErrorCount:int,
ErrorMessage:string,
Provider:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AZMSDiagnosticErrorLogs policy caching hot = 1d

.create-or-alter function AZMSDiagnosticErrorLogsExpand() {
AZMSDiagnosticErrorLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ActivityId=tostring(events.ActivityId),
ActivityName=tostring(events.ActivityName),
NamespaceName=tostring(events.NamespaceName),
EntityType=tostring(events.EntityType),
EntityName=tostring(events.EntityName),
OperationResult=tostring(events.OperationResult),
ErrorCount=toint(events.ErrorCount),
ErrorMessage=tostring(events.ErrorMessage),
Provider=tostring(events.Provider),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AZMSDiagnosticErrorLogs policy update @'[{"Source": "AZMSDiagnosticErrorLogsRaw", "Query": "AZMSDiagnosticErrorLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
