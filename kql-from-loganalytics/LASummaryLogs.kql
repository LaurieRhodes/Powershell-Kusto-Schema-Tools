// ============================================================================
// Azure Data Explorer KQL Script for LASummaryLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:16:24
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 13, Final columns: 13
// ============================================================================

.create-merge table LASummaryLogsRaw (records:dynamic)

.alter-merge table LASummaryLogsRaw policy retention softdelete = 1d

.alter table LASummaryLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table LASummaryLogsRaw ingestion json mapping 'LASummaryLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table LASummaryLogs(
TimeGenerated:datetime,
TenantId:guid,
BinStartTime:datetime,
BinSize:int,
Status:string,
QueryDurationMs:long,
ResultsRecordCount:long,
Message:string,
RuleName:string,
RuleLastModifiedTime:datetime,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table LASummaryLogs policy caching hot = 1d

.create-or-alter function LASummaryLogsExpand() {
LASummaryLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
BinStartTime=todatetime(events.BinStartTime),
BinSize=toint(events.BinSize),
Status=tostring(events.Status),
QueryDurationMs=tolong(events.QueryDurationMs),
ResultsRecordCount=tolong(events.ResultsRecordCount),
Message=tostring(events.Message),
RuleName=tostring(events.RuleName),
RuleLastModifiedTime=todatetime(events.RuleLastModifiedTime),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table LASummaryLogs policy update @'[{"Source": "LASummaryLogsRaw", "Query": "LASummaryLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
