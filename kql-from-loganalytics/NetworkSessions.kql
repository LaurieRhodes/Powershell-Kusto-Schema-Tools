// ============================================================================
// Azure Data Explorer KQL Script for NetworkSessions - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:17:30
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 125, Final columns: 125
// ============================================================================

.create-merge table NetworkSessionsRaw (records:dynamic)

.alter-merge table NetworkSessionsRaw policy retention softdelete = 1d

.alter table NetworkSessionsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table NetworkSessionsRaw ingestion json mapping 'NetworkSessionsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table NetworkSessions(
TimeGenerated:datetime,
TenantId:guid,
SrcUserAadId:string,
SrcUserSid:string,
SrcNatPortNumber:int,
SrcNatIpAddr:string,
SrcResourceId:string,
SrcGeoRegion:string,
SrcPortNumber:int,
SrcDvcMacAddr:string,
SrcMacAddr:string,
SrcGeoLongitude:real,
SrcGeoLatitude:real,
SrcDvcIpAddr:string,
SrcIpAddr:string,
SrcInterfaceGuid:string,
SrcInterfaceName:string,
SrcDvcType:string,
SrcDvcModelNumber:string,
SrcDvcModelName:string,
SrcDvcOs:string,
SrcDvcDomain:string,
SrcDvcFqdn:string,
SrcDvcHostname:string,
SrcGeoCountry:string,
SrcGeoCity:string,
NetworkSessionId:string,
NetworkRuleNumber:int,
NetworkRuleName:string,
SrcUserName:string,
HttpResponseTime:int,
SrcUserUpn:string,
SrcZone:string,
ThreatName:string,
ThreatId:string,
ThreatCategory:string,
UrlHostname:string,
UrlOriginal:string,
UrlCategory:string,
HttpRequestXff:string,
HttpUserAgentOriginal:string,
HttpReferrerOriginal:string,
HttpContentType:string,
HttpStatusCode:string,
HttpRequestMethod:string,
HttpVersion:string,
FileSize:int,
FileMimeType:string,
FileExtension:string,
FileHashSha512:string,
FileHashSha256:string,
FileHashSha1:string,
FileHashMd5:string,
FilePath:string,
FileName:string,
CloudAppRiskLevel:string,
CloudAppOperation:string,
CloudAppId:string,
CloudAppName:string,
NetworkProtocol:string,
SrcUserDomain:string,
AdditionalFields:dynamic,
HttpRequestTime:int,
SrcPackets:long,
DstGeoCity:string,
NetworkDirection:string,
NetworkBytes:long,
SrcBytes:long,
DstBytes:long,
NetworkApplicationProtocol:string,
EventUid:string,
EventTimeIngested:datetime,
EventStartTime:datetime,
EventOriginalUid:string,
EventSeverity:string,
EventSchemaVersion:string,
EventResultDetails:string,
EventResult:string,
EventVendor:string,
EventReportUrl:string,
EventResourceId:string,
EventProductVersion:string,
EventProduct:string,
DvcHostname:string,
DvcMacAddr:string,
DvcIpAddr:string,
EventMessage:string,
EventEndTime:datetime,
EventCount:int,
EventSubType:string,
EventType:string,
DstGeoCountry:string,
NetworkPackets:long,
DstDvcHostname:string,
DstDomainHostname:string,
DstPackets:long,
NetworkIcmpType:string,
NetworkIcmpCode:int,
NetworkDuration:int,
DvcOutboundInterface:string,
DvcInboundInterface:string,
DvcAction:string,
DstGeoLongitude:real,
DstZone:string,
DstUserDomain:string,
DstUserUpn:string,
DstUserName:string,
DstUserAadId:string,
DstUserSid:string,
DstNatPortNumber:int,
DstNatIpAddr:string,
DstResourceId:string,
DstGeoRegion:string,
DstPortNumber:int,
DstDvcDomain:string,
DstDvcMacAddr:string,
DstMacAddr:string,
DstGeoLatitude:real,
DstDvcIpAddr:string,
DstIpAddr:string,
DstInterfaceGuid:string,
DstInterfaceName:string,
DstDvcFqdn:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table NetworkSessions policy caching hot = 1d

.create-or-alter function NetworkSessionsExpand() {
NetworkSessionsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
SrcUserAadId=tostring(events.SrcUserAadId),
SrcUserSid=tostring(events.SrcUserSid),
SrcNatPortNumber=toint(events.SrcNatPortNumber),
SrcNatIpAddr=tostring(events.SrcNatIpAddr),
SrcResourceId=tostring(events.SrcResourceId),
SrcGeoRegion=tostring(events.SrcGeoRegion),
SrcPortNumber=toint(events.SrcPortNumber),
SrcDvcMacAddr=tostring(events.SrcDvcMacAddr),
SrcMacAddr=tostring(events.SrcMacAddr),
SrcGeoLongitude=toreal(events.SrcGeoLongitude),
SrcGeoLatitude=toreal(events.SrcGeoLatitude),
SrcDvcIpAddr=tostring(events.SrcDvcIpAddr),
SrcIpAddr=tostring(events.SrcIpAddr),
SrcInterfaceGuid=tostring(events.SrcInterfaceGuid),
SrcInterfaceName=tostring(events.SrcInterfaceName),
SrcDvcType=tostring(events.SrcDvcType),
SrcDvcModelNumber=tostring(events.SrcDvcModelNumber),
SrcDvcModelName=tostring(events.SrcDvcModelName),
SrcDvcOs=tostring(events.SrcDvcOs),
SrcDvcDomain=tostring(events.SrcDvcDomain),
SrcDvcFqdn=tostring(events.SrcDvcFqdn),
SrcDvcHostname=tostring(events.SrcDvcHostname),
SrcGeoCountry=tostring(events.SrcGeoCountry),
SrcGeoCity=tostring(events.SrcGeoCity),
NetworkSessionId=tostring(events.NetworkSessionId),
NetworkRuleNumber=toint(events.NetworkRuleNumber),
NetworkRuleName=tostring(events.NetworkRuleName),
SrcUserName=tostring(events.SrcUserName),
HttpResponseTime=toint(events.HttpResponseTime),
SrcUserUpn=tostring(events.SrcUserUpn),
SrcZone=tostring(events.SrcZone),
ThreatName=tostring(events.ThreatName),
ThreatId=tostring(events.ThreatId),
ThreatCategory=tostring(events.ThreatCategory),
UrlHostname=tostring(events.UrlHostname),
UrlOriginal=tostring(events.UrlOriginal),
UrlCategory=tostring(events.UrlCategory),
HttpRequestXff=tostring(events.HttpRequestXff),
HttpUserAgentOriginal=tostring(events.HttpUserAgentOriginal),
HttpReferrerOriginal=tostring(events.HttpReferrerOriginal),
HttpContentType=tostring(events.HttpContentType),
HttpStatusCode=tostring(events.HttpStatusCode),
HttpRequestMethod=tostring(events.HttpRequestMethod),
HttpVersion=tostring(events.HttpVersion),
FileSize=toint(events.FileSize),
FileMimeType=tostring(events.FileMimeType),
FileExtension=tostring(events.FileExtension),
FileHashSha512=tostring(events.FileHashSha512),
FileHashSha256=tostring(events.FileHashSha256),
FileHashSha1=tostring(events.FileHashSha1),
FileHashMd5=tostring(events.FileHashMd5),
FilePath=tostring(events.FilePath),
FileName=tostring(events.FileName),
CloudAppRiskLevel=tostring(events.CloudAppRiskLevel),
CloudAppOperation=tostring(events.CloudAppOperation),
CloudAppId=tostring(events.CloudAppId),
CloudAppName=tostring(events.CloudAppName),
NetworkProtocol=tostring(events.NetworkProtocol),
SrcUserDomain=tostring(events.SrcUserDomain),
AdditionalFields=todynamic(events.AdditionalFields),
HttpRequestTime=toint(events.HttpRequestTime),
SrcPackets=tolong(events.SrcPackets),
DstGeoCity=tostring(events.DstGeoCity),
NetworkDirection=tostring(events.NetworkDirection),
NetworkBytes=tolong(events.NetworkBytes),
SrcBytes=tolong(events.SrcBytes),
DstBytes=tolong(events.DstBytes),
NetworkApplicationProtocol=tostring(events.NetworkApplicationProtocol),
EventUid=tostring(events.EventUid),
EventTimeIngested=todatetime(events.EventTimeIngested),
EventStartTime=todatetime(events.EventStartTime),
EventOriginalUid=tostring(events.EventOriginalUid),
EventSeverity=tostring(events.EventSeverity),
EventSchemaVersion=tostring(events.EventSchemaVersion),
EventResultDetails=tostring(events.EventResultDetails),
EventResult=tostring(events.EventResult),
EventVendor=tostring(events.EventVendor),
EventReportUrl=tostring(events.EventReportUrl),
EventResourceId=tostring(events.EventResourceId),
EventProductVersion=tostring(events.EventProductVersion),
EventProduct=tostring(events.EventProduct),
DvcHostname=tostring(events.DvcHostname),
DvcMacAddr=tostring(events.DvcMacAddr),
DvcIpAddr=tostring(events.DvcIpAddr),
EventMessage=tostring(events.EventMessage),
EventEndTime=todatetime(events.EventEndTime),
EventCount=toint(events.EventCount),
EventSubType=tostring(events.EventSubType),
EventType=tostring(events.EventType),
DstGeoCountry=tostring(events.DstGeoCountry),
NetworkPackets=tolong(events.NetworkPackets),
DstDvcHostname=tostring(events.DstDvcHostname),
DstDomainHostname=tostring(events.DstDomainHostname),
DstPackets=tolong(events.DstPackets),
NetworkIcmpType=tostring(events.NetworkIcmpType),
NetworkIcmpCode=toint(events.NetworkIcmpCode),
NetworkDuration=toint(events.NetworkDuration),
DvcOutboundInterface=tostring(events.DvcOutboundInterface),
DvcInboundInterface=tostring(events.DvcInboundInterface),
DvcAction=tostring(events.DvcAction),
DstGeoLongitude=toreal(events.DstGeoLongitude),
DstZone=tostring(events.DstZone),
DstUserDomain=tostring(events.DstUserDomain),
DstUserUpn=tostring(events.DstUserUpn),
DstUserName=tostring(events.DstUserName),
DstUserAadId=tostring(events.DstUserAadId),
DstUserSid=tostring(events.DstUserSid),
DstNatPortNumber=toint(events.DstNatPortNumber),
DstNatIpAddr=tostring(events.DstNatIpAddr),
DstResourceId=tostring(events.DstResourceId),
DstGeoRegion=tostring(events.DstGeoRegion),
DstPortNumber=toint(events.DstPortNumber),
DstDvcDomain=tostring(events.DstDvcDomain),
DstDvcMacAddr=tostring(events.DstDvcMacAddr),
DstMacAddr=tostring(events.DstMacAddr),
DstGeoLatitude=toreal(events.DstGeoLatitude),
DstDvcIpAddr=tostring(events.DstDvcIpAddr),
DstIpAddr=tostring(events.DstIpAddr),
DstInterfaceGuid=tostring(events.DstInterfaceGuid),
DstInterfaceName=tostring(events.DstInterfaceName),
DstDvcFqdn=tostring(events.DstDvcFqdn),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table NetworkSessions policy update @'[{"Source": "NetworkSessionsRaw", "Query": "NetworkSessionsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
