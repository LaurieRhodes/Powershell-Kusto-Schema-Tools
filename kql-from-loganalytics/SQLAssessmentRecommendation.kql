// ============================================================================
// Azure Data Explorer KQL Script for SQLAssessmentRecommendation - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:20:47
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 29, Final columns: 29
// ============================================================================

.create-merge table SQLAssessmentRecommendationRaw (records:dynamic)

.alter-merge table SQLAssessmentRecommendationRaw policy retention softdelete = 1d

.alter table SQLAssessmentRecommendationRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table SQLAssessmentRecommendationRaw ingestion json mapping 'SQLAssessmentRecommendationRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table SQLAssessmentRecommendation(
TimeGenerated:datetime,
TenantId:guid,
AffectedObjectResult:string,
DatabaseName:string,
SqlInstanceName:string,
AffectedObjectDetails:string,
AffectedObjectUniqueName:string,
AffectedObjectName:string,
AffectedObjectType:string,
Computer:string,
TargetCount:int,
RecommendationWeight:real,
RecommendationScore:real,
ActionArea:string,
ActionAreaId:guid,
FocusArea:string,
FocusAreaId:guid,
RecommendationResult:string,
Description:string,
Recommendation:string,
RecommendationId:guid,
AssessmentName:string,
AssessmentId:guid,
SourceSystem:string,
MG:guid,
Technology:string,
CustomData:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table SQLAssessmentRecommendation policy caching hot = 1d

.create-or-alter function SQLAssessmentRecommendationExpand() {
SQLAssessmentRecommendationRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
AffectedObjectResult=tostring(events.AffectedObjectResult),
DatabaseName=tostring(events.DatabaseName),
SqlInstanceName=tostring(events.SqlInstanceName),
AffectedObjectDetails=tostring(events.AffectedObjectDetails),
AffectedObjectUniqueName=tostring(events.AffectedObjectUniqueName),
AffectedObjectName=tostring(events.AffectedObjectName),
AffectedObjectType=tostring(events.AffectedObjectType),
Computer=tostring(events.Computer),
TargetCount=toint(events.TargetCount),
RecommendationWeight=toreal(events.RecommendationWeight),
RecommendationScore=toreal(events.RecommendationScore),
ActionArea=tostring(events.ActionArea),
ActionAreaId=toguid(events.ActionAreaId),
FocusArea=tostring(events.FocusArea),
FocusAreaId=toguid(events.FocusAreaId),
RecommendationResult=tostring(events.RecommendationResult),
Description=tostring(events.Description),
Recommendation=tostring(events.Recommendation),
RecommendationId=toguid(events.RecommendationId),
AssessmentName=tostring(events.AssessmentName),
AssessmentId=toguid(events.AssessmentId),
SourceSystem=tostring(events.SourceSystem),
MG=toguid(events.MG),
Technology=tostring(events.Technology),
CustomData=tostring(events.CustomData),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table SQLAssessmentRecommendation policy update @'[{"Source": "SQLAssessmentRecommendationRaw", "Query": "SQLAssessmentRecommendationExpand()", "IsEnabled": "True", "IsTransactional": true}]'
