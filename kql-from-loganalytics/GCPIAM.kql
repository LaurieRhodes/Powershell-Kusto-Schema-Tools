// ============================================================================
// Azure Data Explorer KQL Script for GCPIAM - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:14:37
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 95, Final columns: 95
// ============================================================================

.create-merge table GCPIAMRaw (records:dynamic)

.alter-merge table GCPIAMRaw policy retention softdelete = 1d

.alter table GCPIAMRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table GCPIAMRaw ingestion json mapping 'GCPIAMRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table GCPIAM(
TimeGenerated:datetime,
TenantId:guid,
RequestRoleTitle:string,
RequestRoleIncludedPermissions:string,
ServiceDataPermissionDeltaAddedPermissions:string,
ResourceLabelsRoleName:string,
ResourceLabelsTopicId:string,
RequestUpdateMaskPaths:string,
ServiceDataPermissionDeltaRemovedPermissions:string,
StatusMessage:string,
StatusCode:string,
Timestamp:datetime,
Severity:string,
RequestRequestedTokenType:string,
RequestView:string,
RequestKeyTypes:string,
GCPResourceType:string,
MetadataType:string,
MetadataMappedPrincipal:string,
RequestSubjectTokenType:string,
RequestGrantType:string,
RequestRoleDescription:string,
RequestRoleId:string,
ResponseGroupName:string,
ResponseIncludedPermissions:string,
RequestOptionsRequestedPolicyVersion:string,
ResponseKeyAlgorithm:string,
ResponsePrivateKeyType:string,
ResponseKeyOrigin:string,
ResponseKeyType:string,
ResponseValidAfterTimeSeconds:string,
ResponseValidBeforeTimeSeconds:string,
RequestPrivateKeyType:string,
ResponseEmail:string,
ServiceDataType:string,
ResponseDisplayName:string,
ResponseDescription:string,
ResponseUniqueId:string,
ResponseName:string,
ResponseOauth2ClientId:string,
RequestServiceAccountDisplayName:string,
RequestServiceAccountDescription:string,
RequestAccountId:string,
ResponseGroupTitle:string,
ResponseTitle:string,
ResponseProjectId:string,
RequestPageToken:string,
ResponseType:string,
RequestIncludeInactiveApiRoles:bool,
RequestPageSize:string,
RequestFullResourceName:string,
ResourceLabelsLocation:string,
ResourceLabelsService:string,
ResourceLabelsVersion:string,
ResourceLabelsMethod:string,
GCPResourceName:string,
AuthorizationInfo:string,
RequestMetadataCallerSuppliedUserAgent:string,
ServiceName:string,
RequestMetadataCallerIp:string,
PayloadType:string,
ResourceLabelsProjectId:string,
MethodName:string,
AuthInfoPrincipalSubject:string,
AuthInfoPrincipalEmail:string,
LogName:string,
InsertId:string,
ReceiveTimestamp:datetime,
RequestSkipVisibilityCheck:bool,
AuthInfoServiceAccountDelegationInfo:string,
OperationId:string,
OperationProducer:string,
RequestRemoveDeletedServiceAccounts:bool,
RequestShowDeleted:bool,
RequestParent:string,
NumResponseItems:string,
ServiceDataPolicyDeltaBindingDeltas:string,
ResponseEtag:string,
ResponseBindings:string,
ResponseAuditConfigs:string,
RequestResource:string,
AuthenticationInfoPrincipalSubject:string,
RequestPolicyBindings:string,
RequestPolicyEtag:string,
RequestMetadataRequestAttributesTime:string,
RequestName:string,
RequestType:string,
MetadataIdentityDelegationChain:string,
ResourceLabelsEmailId:string,
ResourceLabelsUniqueId:string,
OperationLast:bool,
OperationFirst:bool,
RequestPolicyAuditConfigs:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table GCPIAM policy caching hot = 1d

.create-or-alter function GCPIAMExpand() {
GCPIAMRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
RequestRoleTitle=tostring(events.RequestRoleTitle),
RequestRoleIncludedPermissions=tostring(events.RequestRoleIncludedPermissions),
ServiceDataPermissionDeltaAddedPermissions=tostring(events.ServiceDataPermissionDeltaAddedPermissions),
ResourceLabelsRoleName=tostring(events.ResourceLabelsRoleName),
ResourceLabelsTopicId=tostring(events.ResourceLabelsTopicId),
RequestUpdateMaskPaths=tostring(events.RequestUpdateMaskPaths),
ServiceDataPermissionDeltaRemovedPermissions=tostring(events.ServiceDataPermissionDeltaRemovedPermissions),
StatusMessage=tostring(events.StatusMessage),
StatusCode=tostring(events.StatusCode),
Timestamp=todatetime(events.Timestamp),
Severity=tostring(events.Severity),
RequestRequestedTokenType=tostring(events.RequestRequestedTokenType),
RequestView=tostring(events.RequestView),
RequestKeyTypes=tostring(events.RequestKeyTypes),
GCPResourceType=tostring(events.GCPResourceType),
MetadataType=tostring(events.MetadataType),
MetadataMappedPrincipal=tostring(events.MetadataMappedPrincipal),
RequestSubjectTokenType=tostring(events.RequestSubjectTokenType),
RequestGrantType=tostring(events.RequestGrantType),
RequestRoleDescription=tostring(events.RequestRoleDescription),
RequestRoleId=tostring(events.RequestRoleId),
ResponseGroupName=tostring(events.ResponseGroupName),
ResponseIncludedPermissions=tostring(events.ResponseIncludedPermissions),
RequestOptionsRequestedPolicyVersion=tostring(events.RequestOptionsRequestedPolicyVersion),
ResponseKeyAlgorithm=tostring(events.ResponseKeyAlgorithm),
ResponsePrivateKeyType=tostring(events.ResponsePrivateKeyType),
ResponseKeyOrigin=tostring(events.ResponseKeyOrigin),
ResponseKeyType=tostring(events.ResponseKeyType),
ResponseValidAfterTimeSeconds=tostring(events.ResponseValidAfterTimeSeconds),
ResponseValidBeforeTimeSeconds=tostring(events.ResponseValidBeforeTimeSeconds),
RequestPrivateKeyType=tostring(events.RequestPrivateKeyType),
ResponseEmail=tostring(events.ResponseEmail),
ServiceDataType=tostring(events.ServiceDataType),
ResponseDisplayName=tostring(events.ResponseDisplayName),
ResponseDescription=tostring(events.ResponseDescription),
ResponseUniqueId=tostring(events.ResponseUniqueId),
ResponseName=tostring(events.ResponseName),
ResponseOauth2ClientId=tostring(events.ResponseOauth2ClientId),
RequestServiceAccountDisplayName=tostring(events.RequestServiceAccountDisplayName),
RequestServiceAccountDescription=tostring(events.RequestServiceAccountDescription),
RequestAccountId=tostring(events.RequestAccountId),
ResponseGroupTitle=tostring(events.ResponseGroupTitle),
ResponseTitle=tostring(events.ResponseTitle),
ResponseProjectId=tostring(events.ResponseProjectId),
RequestPageToken=tostring(events.RequestPageToken),
ResponseType=tostring(events.ResponseType),
RequestIncludeInactiveApiRoles=tobool(events.RequestIncludeInactiveApiRoles),
RequestPageSize=tostring(events.RequestPageSize),
RequestFullResourceName=tostring(events.RequestFullResourceName),
ResourceLabelsLocation=tostring(events.ResourceLabelsLocation),
ResourceLabelsService=tostring(events.ResourceLabelsService),
ResourceLabelsVersion=tostring(events.ResourceLabelsVersion),
ResourceLabelsMethod=tostring(events.ResourceLabelsMethod),
GCPResourceName=tostring(events.GCPResourceName),
AuthorizationInfo=tostring(events.AuthorizationInfo),
RequestMetadataCallerSuppliedUserAgent=tostring(events.RequestMetadataCallerSuppliedUserAgent),
ServiceName=tostring(events.ServiceName),
RequestMetadataCallerIp=tostring(events.RequestMetadataCallerIp),
PayloadType=tostring(events.PayloadType),
ResourceLabelsProjectId=tostring(events.ResourceLabelsProjectId),
MethodName=tostring(events.MethodName),
AuthInfoPrincipalSubject=tostring(events.AuthInfoPrincipalSubject),
AuthInfoPrincipalEmail=tostring(events.AuthInfoPrincipalEmail),
LogName=tostring(events.LogName),
InsertId=tostring(events.InsertId),
ReceiveTimestamp=todatetime(events.ReceiveTimestamp),
RequestSkipVisibilityCheck=tobool(events.RequestSkipVisibilityCheck),
AuthInfoServiceAccountDelegationInfo=tostring(events.AuthInfoServiceAccountDelegationInfo),
OperationId=tostring(events.OperationId),
OperationProducer=tostring(events.OperationProducer),
RequestRemoveDeletedServiceAccounts=tobool(events.RequestRemoveDeletedServiceAccounts),
RequestShowDeleted=tobool(events.RequestShowDeleted),
RequestParent=tostring(events.RequestParent),
NumResponseItems=tostring(events.NumResponseItems),
ServiceDataPolicyDeltaBindingDeltas=tostring(events.ServiceDataPolicyDeltaBindingDeltas),
ResponseEtag=tostring(events.ResponseEtag),
ResponseBindings=tostring(events.ResponseBindings),
ResponseAuditConfigs=tostring(events.ResponseAuditConfigs),
RequestResource=tostring(events.RequestResource),
AuthenticationInfoPrincipalSubject=tostring(events.AuthenticationInfoPrincipalSubject),
RequestPolicyBindings=tostring(events.RequestPolicyBindings),
RequestPolicyEtag=tostring(events.RequestPolicyEtag),
RequestMetadataRequestAttributesTime=tostring(events.RequestMetadataRequestAttributesTime),
RequestName=tostring(events.RequestName),
RequestType=tostring(events.RequestType),
MetadataIdentityDelegationChain=tostring(events.MetadataIdentityDelegationChain),
ResourceLabelsEmailId=tostring(events.ResourceLabelsEmailId),
ResourceLabelsUniqueId=tostring(events.ResourceLabelsUniqueId),
OperationLast=tobool(events.OperationLast),
OperationFirst=tobool(events.OperationFirst),
RequestPolicyAuditConfigs=tostring(events.RequestPolicyAuditConfigs),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table GCPIAM policy update @'[{"Source": "GCPIAMRaw", "Query": "GCPIAMExpand()", "IsEnabled": "True", "IsTransactional": true}]'
