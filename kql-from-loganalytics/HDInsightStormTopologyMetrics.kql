// ============================================================================
// Azure Data Explorer KQL Script for HDInsightStormTopologyMetrics - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:15:48
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 57, Final columns: 57
// ============================================================================

.create-merge table HDInsightStormTopologyMetricsRaw (records:dynamic)

.alter-merge table HDInsightStormTopologyMetricsRaw policy retention softdelete = 1d

.alter table HDInsightStormTopologyMetricsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table HDInsightStormTopologyMetricsRaw ingestion json mapping 'HDInsightStormTopologyMetricsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table HDInsightStormTopologyMetrics(
TimeGenerated:datetime,
TenantId:guid,
MsgTimeout:real,
TopologyName:string,
OperationName:string,
Owner:string,
ProcessLatencyMs:real,
ReplicationCount:int,
RequestedCpuPercent:real,
RequestMemOffHeapMB:real,
RequestMemOnHeapMB:real,
SamplingPct:real,
SchedulerDisplayResource:bool,
SpoutId:string,
Status:string,
Tasks:int,
TasksTotal:int,
TopologyId:string,
Transferred:real,
Uptime:string,
UptimeSeconds:real,
Window:real,
WindowHint:string,
WindowPretty:string,
Workers:string,
LastError:string,
InstanceName:string,
Id:string,
HostName:string,
Acked:real,
AssignedCPUPercent:real,
AssignedMemOffHeapMB:real,
AssignedMemOnHeapMB:real,
AssignedTotalMemMB:real,
BoltId:string,
Capacity:real,
ClusterName:string,
ClusterType:string,
CompleteLatencyMs:real,
CorrelationId:string,
WorkersTotal:int,
Debug:bool,
EncodedBoltId:string,
EncodedId:string,
EncodedSpoutId:string,
ErrorHost:string,
ErrorPort:string,
ErrorWorkerLogLink:string,
Executed:real,
ExecuteLatencyMs:real,
Executors:int,
ExecutorsTotal:int,
Failed:real,
Emitted:real,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table HDInsightStormTopologyMetrics policy caching hot = 1d

.create-or-alter function HDInsightStormTopologyMetricsExpand() {
HDInsightStormTopologyMetricsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
MsgTimeout=toreal(events.MsgTimeout),
TopologyName=tostring(events.TopologyName),
OperationName=tostring(events.OperationName),
Owner=tostring(events.Owner),
ProcessLatencyMs=toreal(events.ProcessLatencyMs),
ReplicationCount=toint(events.ReplicationCount),
RequestedCpuPercent=toreal(events.RequestedCpuPercent),
RequestMemOffHeapMB=toreal(events.RequestMemOffHeapMB),
RequestMemOnHeapMB=toreal(events.RequestMemOnHeapMB),
SamplingPct=toreal(events.SamplingPct),
SchedulerDisplayResource=tobool(events.SchedulerDisplayResource),
SpoutId=tostring(events.SpoutId),
Status=tostring(events.Status),
Tasks=toint(events.Tasks),
TasksTotal=toint(events.TasksTotal),
TopologyId=tostring(events.TopologyId),
Transferred=toreal(events.Transferred),
Uptime=tostring(events.Uptime),
UptimeSeconds=toreal(events.UptimeSeconds),
Window=toreal(events.Window),
WindowHint=tostring(events.WindowHint),
WindowPretty=tostring(events.WindowPretty),
Workers=tostring(events.Workers),
LastError=tostring(events.LastError),
InstanceName=tostring(events.InstanceName),
Id=tostring(events.Id),
HostName=tostring(events.HostName),
Acked=toreal(events.Acked),
AssignedCPUPercent=toreal(events.AssignedCPUPercent),
AssignedMemOffHeapMB=toreal(events.AssignedMemOffHeapMB),
AssignedMemOnHeapMB=toreal(events.AssignedMemOnHeapMB),
AssignedTotalMemMB=toreal(events.AssignedTotalMemMB),
BoltId=tostring(events.BoltId),
Capacity=toreal(events.Capacity),
ClusterName=tostring(events.ClusterName),
ClusterType=tostring(events.ClusterType),
CompleteLatencyMs=toreal(events.CompleteLatencyMs),
CorrelationId=tostring(events.CorrelationId),
WorkersTotal=toint(events.WorkersTotal),
Debug=tobool(events.Debug),
EncodedBoltId=tostring(events.EncodedBoltId),
EncodedId=tostring(events.EncodedId),
EncodedSpoutId=tostring(events.EncodedSpoutId),
ErrorHost=tostring(events.ErrorHost),
ErrorPort=tostring(events.ErrorPort),
ErrorWorkerLogLink=tostring(events.ErrorWorkerLogLink),
Executed=toreal(events.Executed),
ExecuteLatencyMs=toreal(events.ExecuteLatencyMs),
Executors=toint(events.Executors),
ExecutorsTotal=toint(events.ExecutorsTotal),
Failed=toreal(events.Failed),
Emitted=toreal(events.Emitted),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table HDInsightStormTopologyMetrics policy update @'[{"Source": "HDInsightStormTopologyMetricsRaw", "Query": "HDInsightStormTopologyMetricsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
