// ============================================================================
// Azure Data Explorer KQL Script for GCPFirewallLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:14:35
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 35, Final columns: 35
// ============================================================================

.create-merge table GCPFirewallLogsRaw (records:dynamic)

.alter-merge table GCPFirewallLogsRaw policy retention softdelete = 1d

.alter table GCPFirewallLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table GCPFirewallLogsRaw ingestion json mapping 'GCPFirewallLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table GCPFirewallLogs(
TimeGenerated:datetime,
TenantId:guid,
ResourceSubnetworkName:string,
SubnetworkId:string,
ResourceLocation:string,
ProjectId:string,
InsertId:string,
Timestamp:datetime,
LogName:string,
SrcPort:string,
SrcIp:string,
Protocol:string,
DestPort:string,
DestIp:string,
Disposition:string,
InstanceZone:string,
GCPResourceType:string,
InstanceVmName:string,
InstanceProjectId:string,
RemoteLocationRegion:string,
RemoteLocationCountry:string,
RemoteLocationContinent:string,
RemoteLocationCity:string,
SourceRange:dynamic,
Referance:string,
Priority:string,
IpPortInfo:dynamic,
Direction:string,
Action:string,
VpcProjectId:string,
VpcName:string,
VpcSubnetworkName:string,
InstanceRegion:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table GCPFirewallLogs policy caching hot = 1d

.create-or-alter function GCPFirewallLogsExpand() {
GCPFirewallLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ResourceSubnetworkName=tostring(events.ResourceSubnetworkName),
SubnetworkId=tostring(events.SubnetworkId),
ResourceLocation=tostring(events.ResourceLocation),
ProjectId=tostring(events.ProjectId),
InsertId=tostring(events.InsertId),
Timestamp=todatetime(events.Timestamp),
LogName=tostring(events.LogName),
SrcPort=tostring(events.SrcPort),
SrcIp=tostring(events.SrcIp),
Protocol=tostring(events.Protocol),
DestPort=tostring(events.DestPort),
DestIp=tostring(events.DestIp),
Disposition=tostring(events.Disposition),
InstanceZone=tostring(events.InstanceZone),
GCPResourceType=tostring(events.GCPResourceType),
InstanceVmName=tostring(events.InstanceVmName),
InstanceProjectId=tostring(events.InstanceProjectId),
RemoteLocationRegion=tostring(events.RemoteLocationRegion),
RemoteLocationCountry=tostring(events.RemoteLocationCountry),
RemoteLocationContinent=tostring(events.RemoteLocationContinent),
RemoteLocationCity=tostring(events.RemoteLocationCity),
SourceRange=todynamic(events.SourceRange),
Referance=tostring(events.Referance),
Priority=tostring(events.Priority),
IpPortInfo=todynamic(events.IpPortInfo),
Direction=tostring(events.Direction),
Action=tostring(events.Action),
VpcProjectId=tostring(events.VpcProjectId),
VpcName=tostring(events.VpcName),
VpcSubnetworkName=tostring(events.VpcSubnetworkName),
InstanceRegion=tostring(events.InstanceRegion),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table GCPFirewallLogs policy update @'[{"Source": "GCPFirewallLogsRaw", "Query": "GCPFirewallLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
