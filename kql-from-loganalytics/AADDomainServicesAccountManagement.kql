// ============================================================================
// Azure Data Explorer KQL Script for AADDomainServicesAccountManagement - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 11:17:49
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 91, Final columns: 91
// ============================================================================

.create-merge table AADDomainServicesAccountManagementRaw (records:dynamic)

.alter-merge table AADDomainServicesAccountManagementRaw policy retention softdelete = 1d

.alter table AADDomainServicesAccountManagementRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AADDomainServicesAccountManagementRaw ingestion json mapping 'AADDomainServicesAccountManagementRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AADDomainServicesAccountManagement(
TimeGenerated:datetime,
TenantId:guid,
PasswordLastSet:string,
UserWorkstations:string,
ProfilePath:string,
ScriptPath:string,
HomePath:string,
HomeDirectory:string,
UserPrincipalName:string,
DisplayName:string,
AccountExpires:string,
SamAccountName:string,
PrivilegeList:string,
Status:string,
SubjectLogonId:string,
SubjectDomainName:string,
SubjectUserName:string,
SubjectUserSid:string,
aadds_RecordId:string,
aadds_CallerProcessName:string,
TargetSid:string,
aadds_CallerProcessId:string,
PrimaryGroupId:string,
OldUacValue:string,
CallerProcessId:string,
NewTargetUserName:string,
OldTargetUserName:string,
Workstation:string,
SourceSid:string,
SourceUserName:string,
GroupTypeChange:string,
ComputerAccountChange:string,
AllowedToDelegateTo:string,
ServicePrincipalNames:string,
MembershipExpirationTime:datetime,
MemberSid:string,
MemberName:string,
LogonHours:string,
SidHistory:string,
UserParameters:string,
UserAccountControl:string,
NewUacValue:string,
DnsHostName:string,
aadds_NewTargetUserName:string,
aadds_OldTargetUserName:string,
aadds_Workstation:string,
aadds_HomeDirectory:string,
aadds_UserPrincipalName:string,
aadds_DisplayName:string,
aadds_SamAccountName:string,
aadds_TargetSid:string,
aadds_PrivilegeList:string,
aadds_Status:string,
aadds_SubjectLogonId:string,
aadds_HomePath:string,
aadds_SubjectDomainName:string,
aadds_SubjectUserSid:string,
CorrelationId:string,
ResultDescription:string,
ResultType:string,
Category:string,
OperationName:string,
ResourceId:string,
SourceSystem:string,
aadds_SubjectUserName:string,
aadds_ScriptPath:string,
aadds_ProfilePath:string,
aadds_UserWorkstations:string,
aadds_SourceSid:string,
aadds_SourceUserName:string,
aadds_GroupTypeChange:string,
aadds_ComputerAccountChange:string,
aadds_ServicePrincipalNames:string,
aadds_DnsHostName:string,
aadds_MembershipExpirationTime:datetime,
aadds_MemberSid:string,
aadds_MemberName:string,
aadds_LogonHours:string,
aadds_SidHistory:string,
aadds_UserParameters:string,
aadds_UserAccountControl:string,
aadds_NewUacValue:string,
aadds_OldUacValue:string,
aadds_AllowedToDelegateTo:string,
aadds_PrimaryGroupId:string,
aadds_AccountExpires:string,
aadds_PasswordLastSet:string,
CallerProcessName:string,
RecordId:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AADDomainServicesAccountManagement policy caching hot = 1d

.create-or-alter function AADDomainServicesAccountManagementExpand() {
AADDomainServicesAccountManagementRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
PasswordLastSet=tostring(events.PasswordLastSet),
UserWorkstations=tostring(events.UserWorkstations),
ProfilePath=tostring(events.ProfilePath),
ScriptPath=tostring(events.ScriptPath),
HomePath=tostring(events.HomePath),
HomeDirectory=tostring(events.HomeDirectory),
UserPrincipalName=tostring(events.UserPrincipalName),
DisplayName=tostring(events.DisplayName),
AccountExpires=tostring(events.AccountExpires),
SamAccountName=tostring(events.SamAccountName),
PrivilegeList=tostring(events.PrivilegeList),
Status=tostring(events.Status),
SubjectLogonId=tostring(events.SubjectLogonId),
SubjectDomainName=tostring(events.SubjectDomainName),
SubjectUserName=tostring(events.SubjectUserName),
SubjectUserSid=tostring(events.SubjectUserSid),
aadds_RecordId=tostring(events.aadds_RecordId),
aadds_CallerProcessName=tostring(events.aadds_CallerProcessName),
TargetSid=tostring(events.TargetSid),
aadds_CallerProcessId=tostring(events.aadds_CallerProcessId),
PrimaryGroupId=tostring(events.PrimaryGroupId),
OldUacValue=tostring(events.OldUacValue),
CallerProcessId=tostring(events.CallerProcessId),
NewTargetUserName=tostring(events.NewTargetUserName),
OldTargetUserName=tostring(events.OldTargetUserName),
Workstation=tostring(events.Workstation),
SourceSid=tostring(events.SourceSid),
SourceUserName=tostring(events.SourceUserName),
GroupTypeChange=tostring(events.GroupTypeChange),
ComputerAccountChange=tostring(events.ComputerAccountChange),
AllowedToDelegateTo=tostring(events.AllowedToDelegateTo),
ServicePrincipalNames=tostring(events.ServicePrincipalNames),
MembershipExpirationTime=todatetime(events.MembershipExpirationTime),
MemberSid=tostring(events.MemberSid),
MemberName=tostring(events.MemberName),
LogonHours=tostring(events.LogonHours),
SidHistory=tostring(events.SidHistory),
UserParameters=tostring(events.UserParameters),
UserAccountControl=tostring(events.UserAccountControl),
NewUacValue=tostring(events.NewUacValue),
DnsHostName=tostring(events.DnsHostName),
aadds_NewTargetUserName=tostring(events.aadds_NewTargetUserName),
aadds_OldTargetUserName=tostring(events.aadds_OldTargetUserName),
aadds_Workstation=tostring(events.aadds_Workstation),
aadds_HomeDirectory=tostring(events.aadds_HomeDirectory),
aadds_UserPrincipalName=tostring(events.aadds_UserPrincipalName),
aadds_DisplayName=tostring(events.aadds_DisplayName),
aadds_SamAccountName=tostring(events.aadds_SamAccountName),
aadds_TargetSid=tostring(events.aadds_TargetSid),
aadds_PrivilegeList=tostring(events.aadds_PrivilegeList),
aadds_Status=tostring(events.aadds_Status),
aadds_SubjectLogonId=tostring(events.aadds_SubjectLogonId),
aadds_HomePath=tostring(events.aadds_HomePath),
aadds_SubjectDomainName=tostring(events.aadds_SubjectDomainName),
aadds_SubjectUserSid=tostring(events.aadds_SubjectUserSid),
CorrelationId=tostring(events.CorrelationId),
ResultDescription=tostring(events.ResultDescription),
ResultType=tostring(events.ResultType),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
ResourceId=tostring(events.ResourceId),
SourceSystem=tostring(events.SourceSystem),
aadds_SubjectUserName=tostring(events.aadds_SubjectUserName),
aadds_ScriptPath=tostring(events.aadds_ScriptPath),
aadds_ProfilePath=tostring(events.aadds_ProfilePath),
aadds_UserWorkstations=tostring(events.aadds_UserWorkstations),
aadds_SourceSid=tostring(events.aadds_SourceSid),
aadds_SourceUserName=tostring(events.aadds_SourceUserName),
aadds_GroupTypeChange=tostring(events.aadds_GroupTypeChange),
aadds_ComputerAccountChange=tostring(events.aadds_ComputerAccountChange),
aadds_ServicePrincipalNames=tostring(events.aadds_ServicePrincipalNames),
aadds_DnsHostName=tostring(events.aadds_DnsHostName),
aadds_MembershipExpirationTime=todatetime(events.aadds_MembershipExpirationTime),
aadds_MemberSid=tostring(events.aadds_MemberSid),
aadds_MemberName=tostring(events.aadds_MemberName),
aadds_LogonHours=tostring(events.aadds_LogonHours),
aadds_SidHistory=tostring(events.aadds_SidHistory),
aadds_UserParameters=tostring(events.aadds_UserParameters),
aadds_UserAccountControl=tostring(events.aadds_UserAccountControl),
aadds_NewUacValue=tostring(events.aadds_NewUacValue),
aadds_OldUacValue=tostring(events.aadds_OldUacValue),
aadds_AllowedToDelegateTo=tostring(events.aadds_AllowedToDelegateTo),
aadds_PrimaryGroupId=tostring(events.aadds_PrimaryGroupId),
aadds_AccountExpires=tostring(events.aadds_AccountExpires),
aadds_PasswordLastSet=tostring(events.aadds_PasswordLastSet),
CallerProcessName=tostring(events.CallerProcessName),
RecordId=tostring(events.RecordId),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AADDomainServicesAccountManagement policy update @'[{"Source": "AADDomainServicesAccountManagementRaw", "Query": "AADDomainServicesAccountManagementExpand()", "IsEnabled": "True", "IsTransactional": true}]'
