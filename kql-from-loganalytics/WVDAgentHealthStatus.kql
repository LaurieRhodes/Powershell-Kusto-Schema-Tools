// ============================================================================
// Azure Data Explorer KQL Script for WVDAgentHealthStatus - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:23:09
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 22, Final columns: 22
// ============================================================================

.create-merge table WVDAgentHealthStatusRaw (records:dynamic)

.alter-merge table WVDAgentHealthStatusRaw policy retention softdelete = 1d

.alter table WVDAgentHealthStatusRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table WVDAgentHealthStatusRaw ingestion json mapping 'WVDAgentHealthStatusRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table WVDAgentHealthStatus(
TimeGenerated:datetime,
TenantId:guid,
ActiveSessions:string,
SessionHostHealthCheckResult:dynamic,
LastUpgradeTimeStamp:datetime,
UpgradeErrorMsg:string,
UpgradeState:string,
EndpointState:string,
LastHeartBeat:datetime,
InactiveSessions:string,
StatusTimeStamp:datetime,
AllowNewSessions:string,
SxSStackVersion:string,
OSVersion:string,
AgentVersion:string,
SessionHostResourceId:string,
SessionHostName:string,
OperationName:string,
Status:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table WVDAgentHealthStatus policy caching hot = 1d

.create-or-alter function WVDAgentHealthStatusExpand() {
WVDAgentHealthStatusRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ActiveSessions=tostring(events.ActiveSessions),
SessionHostHealthCheckResult=todynamic(events.SessionHostHealthCheckResult),
LastUpgradeTimeStamp=todatetime(events.LastUpgradeTimeStamp),
UpgradeErrorMsg=tostring(events.UpgradeErrorMsg),
UpgradeState=tostring(events.UpgradeState),
EndpointState=tostring(events.EndpointState),
LastHeartBeat=todatetime(events.LastHeartBeat),
InactiveSessions=tostring(events.InactiveSessions),
StatusTimeStamp=todatetime(events.StatusTimeStamp),
AllowNewSessions=tostring(events.AllowNewSessions),
SxSStackVersion=tostring(events.SxSStackVersion),
OSVersion=tostring(events.OSVersion),
AgentVersion=tostring(events.AgentVersion),
SessionHostResourceId=tostring(events.SessionHostResourceId),
SessionHostName=tostring(events.SessionHostName),
OperationName=tostring(events.OperationName),
Status=tostring(events.Status),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table WVDAgentHealthStatus policy update @'[{"Source": "WVDAgentHealthStatusRaw", "Query": "WVDAgentHealthStatusExpand()", "IsEnabled": "True", "IsTransactional": true}]'
