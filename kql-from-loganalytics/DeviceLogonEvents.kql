// ============================================================================
// Azure Data Explorer KQL Script for DeviceLogonEvents - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:13:15
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 54, Final columns: 54
// ============================================================================

.create-merge table DeviceLogonEventsRaw (records:dynamic)

.alter-merge table DeviceLogonEventsRaw policy retention softdelete = 1d

.alter table DeviceLogonEventsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table DeviceLogonEventsRaw ingestion json mapping 'DeviceLogonEventsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table DeviceLogonEvents(
TimeGenerated:datetime,
TenantId:guid,
LogonType:string,
MachineGroup:string,
Protocol:string,
RemoteDeviceName:string,
RemoteIP:string,
RemoteIPType:string,
RemotePort:int,
ReportId:long,
Timestamp:datetime,
InitiatingProcessParentCreationTime:datetime,
LogonId:long,
InitiatingProcessCreationTime:datetime,
InitiatingProcessVersionInfoCompanyName:string,
InitiatingProcessVersionInfoFileDescription:string,
InitiatingProcessVersionInfoInternalFileName:string,
InitiatingProcessVersionInfoOriginalFileName:string,
InitiatingProcessVersionInfoProductName:string,
InitiatingProcessVersionInfoProductVersion:string,
InitiatingProcessSessionId:long,
IsInitiatingProcessRemoteSession:bool,
InitiatingProcessRemoteSessionDeviceName:string,
InitiatingProcessRemoteSessionIP:string,
InitiatingProcessFileSize:long,
IsLocalAdmin:bool,
InitiatingProcessTokenElevation:string,
InitiatingProcessSHA256:string,
AccountDomain:string,
AccountName:string,
AccountSid:string,
ActionType:string,
AdditionalFields:dynamic,
AppGuardContainerId:string,
DeviceId:string,
DeviceName:string,
FailureReason:string,
InitiatingProcessAccountDomain:string,
InitiatingProcessAccountName:string,
InitiatingProcessAccountObjectId:string,
InitiatingProcessAccountSid:string,
InitiatingProcessAccountUpn:string,
InitiatingProcessCommandLine:string,
InitiatingProcessFileName:string,
InitiatingProcessFolderPath:string,
InitiatingProcessId:long,
InitiatingProcessIntegrityLevel:string,
InitiatingProcessMD5:string,
InitiatingProcessParentFileName:string,
InitiatingProcessParentId:long,
InitiatingProcessSHA1:string,
InitiatingProcessUniqueId:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table DeviceLogonEvents policy caching hot = 1d

.create-or-alter function DeviceLogonEventsExpand() {
DeviceLogonEventsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
LogonType=tostring(events.LogonType),
MachineGroup=tostring(events.MachineGroup),
Protocol=tostring(events.Protocol),
RemoteDeviceName=tostring(events.RemoteDeviceName),
RemoteIP=tostring(events.RemoteIP),
RemoteIPType=tostring(events.RemoteIPType),
RemotePort=toint(events.RemotePort),
ReportId=tolong(events.ReportId),
Timestamp=todatetime(events.Timestamp),
InitiatingProcessParentCreationTime=todatetime(events.InitiatingProcessParentCreationTime),
LogonId=tolong(events.LogonId),
InitiatingProcessCreationTime=todatetime(events.InitiatingProcessCreationTime),
InitiatingProcessVersionInfoCompanyName=tostring(events.InitiatingProcessVersionInfoCompanyName),
InitiatingProcessVersionInfoFileDescription=tostring(events.InitiatingProcessVersionInfoFileDescription),
InitiatingProcessVersionInfoInternalFileName=tostring(events.InitiatingProcessVersionInfoInternalFileName),
InitiatingProcessVersionInfoOriginalFileName=tostring(events.InitiatingProcessVersionInfoOriginalFileName),
InitiatingProcessVersionInfoProductName=tostring(events.InitiatingProcessVersionInfoProductName),
InitiatingProcessVersionInfoProductVersion=tostring(events.InitiatingProcessVersionInfoProductVersion),
InitiatingProcessSessionId=tolong(events.InitiatingProcessSessionId),
IsInitiatingProcessRemoteSession=tobool(events.IsInitiatingProcessRemoteSession),
InitiatingProcessRemoteSessionDeviceName=tostring(events.InitiatingProcessRemoteSessionDeviceName),
InitiatingProcessRemoteSessionIP=tostring(events.InitiatingProcessRemoteSessionIP),
InitiatingProcessFileSize=tolong(events.InitiatingProcessFileSize),
IsLocalAdmin=tobool(events.IsLocalAdmin),
InitiatingProcessTokenElevation=tostring(events.InitiatingProcessTokenElevation),
InitiatingProcessSHA256=tostring(events.InitiatingProcessSHA256),
AccountDomain=tostring(events.AccountDomain),
AccountName=tostring(events.AccountName),
AccountSid=tostring(events.AccountSid),
ActionType=tostring(events.ActionType),
AdditionalFields=todynamic(events.AdditionalFields),
AppGuardContainerId=tostring(events.AppGuardContainerId),
DeviceId=tostring(events.DeviceId),
DeviceName=tostring(events.DeviceName),
FailureReason=tostring(events.FailureReason),
InitiatingProcessAccountDomain=tostring(events.InitiatingProcessAccountDomain),
InitiatingProcessAccountName=tostring(events.InitiatingProcessAccountName),
InitiatingProcessAccountObjectId=tostring(events.InitiatingProcessAccountObjectId),
InitiatingProcessAccountSid=tostring(events.InitiatingProcessAccountSid),
InitiatingProcessAccountUpn=tostring(events.InitiatingProcessAccountUpn),
InitiatingProcessCommandLine=tostring(events.InitiatingProcessCommandLine),
InitiatingProcessFileName=tostring(events.InitiatingProcessFileName),
InitiatingProcessFolderPath=tostring(events.InitiatingProcessFolderPath),
InitiatingProcessId=tolong(events.InitiatingProcessId),
InitiatingProcessIntegrityLevel=tostring(events.InitiatingProcessIntegrityLevel),
InitiatingProcessMD5=tostring(events.InitiatingProcessMD5),
InitiatingProcessParentFileName=tostring(events.InitiatingProcessParentFileName),
InitiatingProcessParentId=tolong(events.InitiatingProcessParentId),
InitiatingProcessSHA1=tostring(events.InitiatingProcessSHA1),
InitiatingProcessUniqueId=tostring(events.InitiatingProcessUniqueId),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table DeviceLogonEvents policy update @'[{"Source": "DeviceLogonEventsRaw", "Query": "DeviceLogonEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
