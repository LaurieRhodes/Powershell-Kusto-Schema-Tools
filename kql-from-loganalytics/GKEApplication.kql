// ============================================================================
// Azure Data Explorer KQL Script for GKEApplication - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:14:51
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 18, Final columns: 18
// ============================================================================

.create-merge table GKEApplicationRaw (records:dynamic)

.alter-merge table GKEApplicationRaw policy retention softdelete = 1d

.alter table GKEApplicationRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table GKEApplicationRaw ingestion json mapping 'GKEApplicationRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table GKEApplication(
TimeGenerated:datetime,
TenantId:guid,
InsertId:string,
LogName:string,
Labels:dynamic,
Severity:string,
ReceiveTimestamp:datetime,
ClusterName:string,
NamespaceName:string,
PodName:string,
Location:string,
ContainerName:string,
JsonPayload:dynamic,
ProjectID:string,
TextPayload:string,
ComputeResourceName:string,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table GKEApplication policy caching hot = 1d

.create-or-alter function GKEApplicationExpand() {
GKEApplicationRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
InsertId=tostring(events.InsertId),
LogName=tostring(events.LogName),
Labels=todynamic(events.Labels),
Severity=tostring(events.Severity),
ReceiveTimestamp=todatetime(events.ReceiveTimestamp),
ClusterName=tostring(events.ClusterName),
NamespaceName=tostring(events.NamespaceName),
PodName=tostring(events.PodName),
Location=tostring(events.Location),
ContainerName=tostring(events.ContainerName),
JsonPayload=todynamic(events.JsonPayload),
ProjectID=tostring(events.ProjectID),
TextPayload=tostring(events.TextPayload),
ComputeResourceName=tostring(events.ComputeResourceName),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table GKEApplication policy update @'[{"Source": "GKEApplicationRaw", "Query": "GKEApplicationExpand()", "IsEnabled": "True", "IsTransactional": true}]'
