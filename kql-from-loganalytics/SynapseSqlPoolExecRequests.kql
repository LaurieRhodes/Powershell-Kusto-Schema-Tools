// ============================================================================
// Azure Data Explorer KQL Script for SynapseSqlPoolExecRequests - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:21:41
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 30, Final columns: 30
// ============================================================================

.create-merge table SynapseSqlPoolExecRequestsRaw (records:dynamic)

.alter-merge table SynapseSqlPoolExecRequestsRaw policy retention softdelete = 1d

.alter table SynapseSqlPoolExecRequestsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table SynapseSqlPoolExecRequestsRaw ingestion json mapping 'SynapseSqlPoolExecRequestsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table SynapseSqlPoolExecRequests(
TimeGenerated:datetime,
TenantId:guid,
ResourceAllocationPercent:string,
ClassifierName:string,
Importance:string,
ExplainOutput:string,
ClientCorrelationId:string,
RootQueryId:string,
ScopeDepth:int,
StatementType:string,
ResourceClass:string,
Command:string,
DatabaseId:string,
ResultCacheHit:string,
ErrorId:string,
EndTime:datetime,
EndCompileTime:datetime,
StartTime:datetime,
SubmitTime:datetime,
Status:string,
RequestId:string,
SessionId:string,
Category:string,
OperationName:string,
ResourceGroup:string,
LogicalServerName:string,
Label:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table SynapseSqlPoolExecRequests policy caching hot = 1d

.create-or-alter function SynapseSqlPoolExecRequestsExpand() {
SynapseSqlPoolExecRequestsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ResourceAllocationPercent=tostring(events.ResourceAllocationPercent),
ClassifierName=tostring(events.ClassifierName),
Importance=tostring(events.Importance),
ExplainOutput=tostring(events.ExplainOutput),
ClientCorrelationId=tostring(events.ClientCorrelationId),
RootQueryId=tostring(events.RootQueryId),
ScopeDepth=toint(events.ScopeDepth),
StatementType=tostring(events.StatementType),
ResourceClass=tostring(events.ResourceClass),
Command=tostring(events.Command),
DatabaseId=tostring(events.DatabaseId),
ResultCacheHit=tostring(events.ResultCacheHit),
ErrorId=tostring(events.ErrorId),
EndTime=todatetime(events.EndTime),
EndCompileTime=todatetime(events.EndCompileTime),
StartTime=todatetime(events.StartTime),
SubmitTime=todatetime(events.SubmitTime),
Status=tostring(events.Status),
RequestId=tostring(events.RequestId),
SessionId=tostring(events.SessionId),
Category=tostring(events.Category),
OperationName=tostring(events.OperationName),
ResourceGroup=tostring(events.ResourceGroup),
LogicalServerName=tostring(events.LogicalServerName),
Label=tostring(events.Label),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table SynapseSqlPoolExecRequests policy update @'[{"Source": "SynapseSqlPoolExecRequestsRaw", "Query": "SynapseSqlPoolExecRequestsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
