// ============================================================================
// Azure Data Explorer KQL Script for AgriFoodModelInferenceLogs - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 11:20:47
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 22, Final columns: 22
// ============================================================================

.create-merge table AgriFoodModelInferenceLogsRaw (records:dynamic)

.alter-merge table AgriFoodModelInferenceLogsRaw policy retention softdelete = 1d

.alter table AgriFoodModelInferenceLogsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AgriFoodModelInferenceLogsRaw ingestion json mapping 'AgriFoodModelInferenceLogsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AgriFoodModelInferenceLogs(
TimeGenerated:datetime,
TenantId:guid,
ClientTenantId:string,
ObjectId:string,
ApplicationId:string,
DurationMs:real,
CorrelationId:string,
Location:string,
ResultDescription:string,
RequestBody:dynamic,
ResultType:string,
Level:string,
CallerIpAddress:string,
DataPlaneResourceId:string,
FarmerId:string,
RequestUri:string,
OperationName:string,
Category:string,
ResultSignature:int,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AgriFoodModelInferenceLogs policy caching hot = 1d

.create-or-alter function AgriFoodModelInferenceLogsExpand() {
AgriFoodModelInferenceLogsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ClientTenantId=tostring(events.ClientTenantId),
ObjectId=tostring(events.ObjectId),
ApplicationId=tostring(events.ApplicationId),
DurationMs=toreal(events.DurationMs),
CorrelationId=tostring(events.CorrelationId),
Location=tostring(events.Location),
ResultDescription=tostring(events.ResultDescription),
RequestBody=todynamic(events.RequestBody),
ResultType=tostring(events.ResultType),
Level=tostring(events.Level),
CallerIpAddress=tostring(events.CallerIpAddress),
DataPlaneResourceId=tostring(events.DataPlaneResourceId),
FarmerId=tostring(events.FarmerId),
RequestUri=tostring(events.RequestUri),
OperationName=tostring(events.OperationName),
Category=tostring(events.Category),
ResultSignature=toint(events.ResultSignature),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AgriFoodModelInferenceLogs policy update @'[{"Source": "AgriFoodModelInferenceLogsRaw", "Query": "AgriFoodModelInferenceLogsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
