// ============================================================================
// Azure Data Explorer KQL Script for AGSGrafanaLoginEvents - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 11:20:54
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 16, Final columns: 16
// ============================================================================

.create-merge table AGSGrafanaLoginEventsRaw (records:dynamic)

.alter-merge table AGSGrafanaLoginEventsRaw policy retention softdelete = 1d

.alter table AGSGrafanaLoginEventsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AGSGrafanaLoginEventsRaw ingestion json mapping 'AGSGrafanaLoginEventsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AGSGrafanaLoginEvents(
TimeGenerated:datetime,
TenantId:guid,
Location:string,
OperationName:string,
Category:string,
Level:string,
CorrelationId:string,
TargetResource:string,
ResourceGroup:string,
User:string,
UserRole:string,
Message:string,
TraceContext:dynamic,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AGSGrafanaLoginEvents policy caching hot = 1d

.create-or-alter function AGSGrafanaLoginEventsExpand() {
AGSGrafanaLoginEventsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Location=tostring(events.Location),
OperationName=tostring(events.OperationName),
Category=tostring(events.Category),
Level=tostring(events.Level),
CorrelationId=tostring(events.CorrelationId),
TargetResource=tostring(events.TargetResource),
ResourceGroup=tostring(events.ResourceGroup),
User=tostring(events.User),
UserRole=tostring(events.UserRole),
Message=tostring(events.Message),
TraceContext=todynamic(events.TraceContext),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AGSGrafanaLoginEvents policy update @'[{"Source": "AGSGrafanaLoginEventsRaw", "Query": "AGSGrafanaLoginEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
