// ============================================================================
// Azure Data Explorer KQL Script for GCPCDN - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:14:26
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 110, Final columns: 110
// ============================================================================

.create-merge table GCPCDNRaw (records:dynamic)

.alter-merge table GCPCDNRaw policy retention softdelete = 1d

.alter table GCPCDNRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table GCPCDNRaw ingestion json mapping 'GCPCDNRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table GCPCDN(
TimeGenerated:datetime,
TenantId:guid,
HttpRequestRequestSize:string,
HttpRequestRequestMethod:string,
HttpRequestRemoteIP:string,
HttpRequestLatency:string,
HttpRequestCacheLookup:bool,
Trace:string,
SpanID:string,
OperationProducer:string,
OperationID:string,
OperationLast:bool,
OperationFirst:bool,
ResponseUser:string,
ResponseTargetLink:string,
ResponseTargetID:string,
ResponseStatus:string,
ResponseStartTime:datetime,
ResponseSelfLinkWithID:string,
ResponseSelfLink:string,
ResponseProgress:string,
ResponseOperationType:string,
ResponseName:string,
ResponseInsertTime:datetime,
ResponseID:string,
HttpRequestRequestUrl:string,
ResponseType:string,
HttpRequestResponseSize:string,
HttpRequestCacheHit:bool,
ResourceLabelsUrlMapName:string,
ResourceLabelsTargetProxyName:string,
ResourceLabelsForwardingRuleName:string,
ResourceLabelsBackendServiceName:string,
LoadBalancingScheme:string,
AuthzPolicyInfoResult:string,
AuthzPolicyInfoPolicies:string,
ErrorBackendStatusDetails:string,
ErrorService:string,
OverrideResponseCode:string,
EnforcedEdgeSecurityPolicyPriority:string,
EnforcedEdgeSecurityPolicyOutcome:string,
EnforcedEdgeSecurityPolicyName:string,
EnforcedEdgeSecurityPolicyConfiguredAction:string,
StatusDetails:string,
RemoteIP:string,
CacheID:string,
CacheDecision:string,
BackendTargetProjectNumber:string,
JsonPayloadType:string,
HttpRequestUserAgent:string,
HttpRequestStatus:string,
HttpRequestServerIP:string,
HttpRequestCacheFillBytes:string,
ResourceLocationCurrentLocations:string,
RequestMetadataRequestAttributesReason:string,
RequestMetadataRequestAttributesTime:datetime,
RequestEnableCDN:bool,
RequestDescription:string,
RequestCompressionMode:string,
RequestSecurityPolicy:string,
RequestGroup:string,
RequestKeyName:string,
RequestType:string,
AuthorizationInfo:string,
AuthenticationInfoPrincipalEmail:string,
ServiceName:string,
NumResponseItems:string,
MethodName:string,
PayloadType:string,
ResourceLabelsLocation:string,
ResourceLabelsProjectID:string,
ResourceLabelsBackendBucketID:string,
ResourceLabelsBackendServiceID:string,
LabelsAPIRootTriggerID:string,
ReceiveTimestamp:datetime,
LogName:string,
Severity:string,
Timestamp:datetime,
InsertID:string,
RequestIPAddressSelectionPolicy:string,
RequestLoadBalancingScheme:string,
RequestLocalityLbPolicy:string,
RequestName:string,
RequestMetadataRequestAttributesAuth:string,
RequestMetadataDestinationAttributes:string,
RequestMetadataCallerSuppliedUserAgent:string,
RequestMetadataCallerIP:string,
RequestLogConfigSampleRate:string,
RequestLogConfigEnable:bool,
RequestHealthChecks:string,
RequestConnectionDrainingTimeoutSec:string,
RequestCDNPolicyCacheKeyPolicyIncludeQueryString:bool,
RequestCDNPolicyCacheKeyPolicyIncludeProtocol:bool,
RequestCDNPolicyCacheKeyPolicyIncludeHost:bool,
ResourceLabelsZone:string,
RequestCDNPolicyServeWhileStale:string,
RequestCDNPolicyMaxTtl:string,
RequestCDNPolicyDefaultTtl:string,
RequestCDNPolicyClientTtl:string,
RequestCDNPolicyCacheMode:string,
RequestFingerprint:string,
RequestCDNPolicySignedUrlCacheMaxAgeSec:string,
RequestBackends:string,
RequestTimeoutSec:string,
RequestSessionAffinity:string,
RequestProtocol:string,
RequestPortName:string,
RequestCDNPolicyNegativeCaching:bool,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table GCPCDN policy caching hot = 1d

.create-or-alter function GCPCDNExpand() {
GCPCDNRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
HttpRequestRequestSize=tostring(events.HttpRequestRequestSize),
HttpRequestRequestMethod=tostring(events.HttpRequestRequestMethod),
HttpRequestRemoteIP=tostring(events.HttpRequestRemoteIP),
HttpRequestLatency=tostring(events.HttpRequestLatency),
HttpRequestCacheLookup=tobool(events.HttpRequestCacheLookup),
Trace=tostring(events.Trace),
SpanID=tostring(events.SpanID),
OperationProducer=tostring(events.OperationProducer),
OperationID=tostring(events.OperationID),
OperationLast=tobool(events.OperationLast),
OperationFirst=tobool(events.OperationFirst),
ResponseUser=tostring(events.ResponseUser),
ResponseTargetLink=tostring(events.ResponseTargetLink),
ResponseTargetID=tostring(events.ResponseTargetID),
ResponseStatus=tostring(events.ResponseStatus),
ResponseStartTime=todatetime(events.ResponseStartTime),
ResponseSelfLinkWithID=tostring(events.ResponseSelfLinkWithID),
ResponseSelfLink=tostring(events.ResponseSelfLink),
ResponseProgress=tostring(events.ResponseProgress),
ResponseOperationType=tostring(events.ResponseOperationType),
ResponseName=tostring(events.ResponseName),
ResponseInsertTime=todatetime(events.ResponseInsertTime),
ResponseID=tostring(events.ResponseID),
HttpRequestRequestUrl=tostring(events.HttpRequestRequestUrl),
ResponseType=tostring(events.ResponseType),
HttpRequestResponseSize=tostring(events.HttpRequestResponseSize),
HttpRequestCacheHit=tobool(events.HttpRequestCacheHit),
ResourceLabelsUrlMapName=tostring(events.ResourceLabelsUrlMapName),
ResourceLabelsTargetProxyName=tostring(events.ResourceLabelsTargetProxyName),
ResourceLabelsForwardingRuleName=tostring(events.ResourceLabelsForwardingRuleName),
ResourceLabelsBackendServiceName=tostring(events.ResourceLabelsBackendServiceName),
LoadBalancingScheme=tostring(events.LoadBalancingScheme),
AuthzPolicyInfoResult=tostring(events.AuthzPolicyInfoResult),
AuthzPolicyInfoPolicies=tostring(events.AuthzPolicyInfoPolicies),
ErrorBackendStatusDetails=tostring(events.ErrorBackendStatusDetails),
ErrorService=tostring(events.ErrorService),
OverrideResponseCode=tostring(events.OverrideResponseCode),
EnforcedEdgeSecurityPolicyPriority=tostring(events.EnforcedEdgeSecurityPolicyPriority),
EnforcedEdgeSecurityPolicyOutcome=tostring(events.EnforcedEdgeSecurityPolicyOutcome),
EnforcedEdgeSecurityPolicyName=tostring(events.EnforcedEdgeSecurityPolicyName),
EnforcedEdgeSecurityPolicyConfiguredAction=tostring(events.EnforcedEdgeSecurityPolicyConfiguredAction),
StatusDetails=tostring(events.StatusDetails),
RemoteIP=tostring(events.RemoteIP),
CacheID=tostring(events.CacheID),
CacheDecision=tostring(events.CacheDecision),
BackendTargetProjectNumber=tostring(events.BackendTargetProjectNumber),
JsonPayloadType=tostring(events.JsonPayloadType),
HttpRequestUserAgent=tostring(events.HttpRequestUserAgent),
HttpRequestStatus=tostring(events.HttpRequestStatus),
HttpRequestServerIP=tostring(events.HttpRequestServerIP),
HttpRequestCacheFillBytes=tostring(events.HttpRequestCacheFillBytes),
ResourceLocationCurrentLocations=tostring(events.ResourceLocationCurrentLocations),
RequestMetadataRequestAttributesReason=tostring(events.RequestMetadataRequestAttributesReason),
RequestMetadataRequestAttributesTime=todatetime(events.RequestMetadataRequestAttributesTime),
RequestEnableCDN=tobool(events.RequestEnableCDN),
RequestDescription=tostring(events.RequestDescription),
RequestCompressionMode=tostring(events.RequestCompressionMode),
RequestSecurityPolicy=tostring(events.RequestSecurityPolicy),
RequestGroup=tostring(events.RequestGroup),
RequestKeyName=tostring(events.RequestKeyName),
RequestType=tostring(events.RequestType),
AuthorizationInfo=tostring(events.AuthorizationInfo),
AuthenticationInfoPrincipalEmail=tostring(events.AuthenticationInfoPrincipalEmail),
ServiceName=tostring(events.ServiceName),
NumResponseItems=tostring(events.NumResponseItems),
MethodName=tostring(events.MethodName),
PayloadType=tostring(events.PayloadType),
ResourceLabelsLocation=tostring(events.ResourceLabelsLocation),
ResourceLabelsProjectID=tostring(events.ResourceLabelsProjectID),
ResourceLabelsBackendBucketID=tostring(events.ResourceLabelsBackendBucketID),
ResourceLabelsBackendServiceID=tostring(events.ResourceLabelsBackendServiceID),
LabelsAPIRootTriggerID=tostring(events.LabelsAPIRootTriggerID),
ReceiveTimestamp=todatetime(events.ReceiveTimestamp),
LogName=tostring(events.LogName),
Severity=tostring(events.Severity),
Timestamp=todatetime(events.Timestamp),
InsertID=tostring(events.InsertID),
RequestIPAddressSelectionPolicy=tostring(events.RequestIPAddressSelectionPolicy),
RequestLoadBalancingScheme=tostring(events.RequestLoadBalancingScheme),
RequestLocalityLbPolicy=tostring(events.RequestLocalityLbPolicy),
RequestName=tostring(events.RequestName),
RequestMetadataRequestAttributesAuth=tostring(events.RequestMetadataRequestAttributesAuth),
RequestMetadataDestinationAttributes=tostring(events.RequestMetadataDestinationAttributes),
RequestMetadataCallerSuppliedUserAgent=tostring(events.RequestMetadataCallerSuppliedUserAgent),
RequestMetadataCallerIP=tostring(events.RequestMetadataCallerIP),
RequestLogConfigSampleRate=tostring(events.RequestLogConfigSampleRate),
RequestLogConfigEnable=tobool(events.RequestLogConfigEnable),
RequestHealthChecks=tostring(events.RequestHealthChecks),
RequestConnectionDrainingTimeoutSec=tostring(events.RequestConnectionDrainingTimeoutSec),
RequestCDNPolicyCacheKeyPolicyIncludeQueryString=tobool(events.RequestCDNPolicyCacheKeyPolicyIncludeQueryString),
RequestCDNPolicyCacheKeyPolicyIncludeProtocol=tobool(events.RequestCDNPolicyCacheKeyPolicyIncludeProtocol),
RequestCDNPolicyCacheKeyPolicyIncludeHost=tobool(events.RequestCDNPolicyCacheKeyPolicyIncludeHost),
ResourceLabelsZone=tostring(events.ResourceLabelsZone),
RequestCDNPolicyServeWhileStale=tostring(events.RequestCDNPolicyServeWhileStale),
RequestCDNPolicyMaxTtl=tostring(events.RequestCDNPolicyMaxTtl),
RequestCDNPolicyDefaultTtl=tostring(events.RequestCDNPolicyDefaultTtl),
RequestCDNPolicyClientTtl=tostring(events.RequestCDNPolicyClientTtl),
RequestCDNPolicyCacheMode=tostring(events.RequestCDNPolicyCacheMode),
RequestFingerprint=tostring(events.RequestFingerprint),
RequestCDNPolicySignedUrlCacheMaxAgeSec=tostring(events.RequestCDNPolicySignedUrlCacheMaxAgeSec),
RequestBackends=tostring(events.RequestBackends),
RequestTimeoutSec=tostring(events.RequestTimeoutSec),
RequestSessionAffinity=tostring(events.RequestSessionAffinity),
RequestProtocol=tostring(events.RequestProtocol),
RequestPortName=tostring(events.RequestPortName),
RequestCDNPolicyNegativeCaching=tobool(events.RequestCDNPolicyNegativeCaching),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table GCPCDN policy update @'[{"Source": "GCPCDNRaw", "Query": "GCPCDNExpand()", "IsEnabled": "True", "IsTransactional": true}]'
