// ============================================================================
// Azure Data Explorer KQL Script for HDInsightSparkStageEvents - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:15:42
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 22, Final columns: 22
// ============================================================================

.create-merge table HDInsightSparkStageEventsRaw (records:dynamic)

.alter-merge table HDInsightSparkStageEventsRaw policy retention softdelete = 1d

.alter table HDInsightSparkStageEventsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table HDInsightSparkStageEventsRaw ingestion json mapping 'HDInsightSparkStageEventsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table HDInsightSparkStageEvents(
TimeGenerated:datetime,
TenantId:guid,
IpAddress:string,
Region:string,
ClusterDnsName:string,
Host:string,
Role:string,
ClusterTenantId:string,
RDDInfo:string,
UserSubscriptionId:string,
Details:string,
CompletionTime:datetime,
SubmissionTime:datetime,
TaskCount:int,
AttemptId:string,
StageName:string,
StageId:string,
ApplicationId:string,
FailureReason:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table HDInsightSparkStageEvents policy caching hot = 1d

.create-or-alter function HDInsightSparkStageEventsExpand() {
HDInsightSparkStageEventsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
IpAddress=tostring(events.IpAddress),
Region=tostring(events.Region),
ClusterDnsName=tostring(events.ClusterDnsName),
Host=tostring(events.Host),
Role=tostring(events.Role),
ClusterTenantId=tostring(events.ClusterTenantId),
RDDInfo=tostring(events.RDDInfo),
UserSubscriptionId=tostring(events.UserSubscriptionId),
Details=tostring(events.Details),
CompletionTime=todatetime(events.CompletionTime),
SubmissionTime=todatetime(events.SubmissionTime),
TaskCount=toint(events.TaskCount),
AttemptId=tostring(events.AttemptId),
StageName=tostring(events.StageName),
StageId=tostring(events.StageId),
ApplicationId=tostring(events.ApplicationId),
FailureReason=tostring(events.FailureReason),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table HDInsightSparkStageEvents policy update @'[{"Source": "HDInsightSparkStageEventsRaw", "Query": "HDInsightSparkStageEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
