// ============================================================================
// Azure Data Explorer KQL Script for AZFWInternalFqdnResolutionFailure - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 11:24:01
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 13, Final columns: 13
// ============================================================================

.create-merge table AZFWInternalFqdnResolutionFailureRaw (records:dynamic)

.alter-merge table AZFWInternalFqdnResolutionFailureRaw policy retention softdelete = 1d

.alter table AZFWInternalFqdnResolutionFailureRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table AZFWInternalFqdnResolutionFailureRaw ingestion json mapping 'AZFWInternalFqdnResolutionFailureRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table AZFWInternalFqdnResolutionFailure(
TimeGenerated:datetime,
TenantId:guid,
Fqdn:string,
ServerIp:string,
ServerPort:int,
Policy:string,
RuleCollectionGroup:string,
RuleCollection:string,
Rule:string,
Error:string,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table AZFWInternalFqdnResolutionFailure policy caching hot = 1d

.create-or-alter function AZFWInternalFqdnResolutionFailureExpand() {
AZFWInternalFqdnResolutionFailureRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
Fqdn=tostring(events.Fqdn),
ServerIp=tostring(events.ServerIp),
ServerPort=toint(events.ServerPort),
Policy=tostring(events.Policy),
RuleCollectionGroup=tostring(events.RuleCollectionGroup),
RuleCollection=tostring(events.RuleCollection),
Rule=tostring(events.Rule),
Error=tostring(events.Error),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table AZFWInternalFqdnResolutionFailure policy update @'[{"Source": "AZFWInternalFqdnResolutionFailureRaw", "Query": "AZFWInternalFqdnResolutionFailureExpand()", "IsEnabled": "True", "IsTransactional": true}]'
