// ============================================================================
// Azure Data Explorer KQL Script for REDConnectionEvents - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:19:45
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 13, Final columns: 13
// ============================================================================

.create-merge table REDConnectionEventsRaw (records:dynamic)

.alter-merge table REDConnectionEventsRaw policy retention softdelete = 1d

.alter table REDConnectionEventsRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table REDConnectionEventsRaw ingestion json mapping 'REDConnectionEventsRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table REDConnectionEvents(
TimeGenerated:datetime,
TenantId:guid,
EventEpochTime:long,
OperationName:string,
Location:string,
ClientIp:string,
PrivateLinkIPv6:string,
ConnectionId:long,
EventType:string,
EventStatus:int,
SourceSystem:string,
Type:string,
_ResourceId:string,
_TimeReceived:datetime)

.alter table REDConnectionEvents policy caching hot = 1d

.create-or-alter function REDConnectionEventsExpand() {
REDConnectionEventsRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
EventEpochTime=tolong(events.EventEpochTime),
OperationName=tostring(events.OperationName),
Location=tostring(events.Location),
ClientIp=tostring(events.ClientIp),
PrivateLinkIPv6=tostring(events.PrivateLinkIPv6),
ConnectionId=tolong(events.ConnectionId),
EventType=tostring(events.EventType),
EventStatus=toint(events.EventStatus),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_ResourceId=tostring(events._ResourceId),
_TimeReceived=todatetime(now())
}

.alter table REDConnectionEvents policy update @'[{"Source": "REDConnectionEventsRaw", "Query": "REDConnectionEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'
