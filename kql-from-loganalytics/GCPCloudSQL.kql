// ============================================================================
// Azure Data Explorer KQL Script for GCPCloudSQL - UPDATED VERSION
// ============================================================================
// Generated: 2025-09-14 10:14:32
// Table type: Microsoft
// Schema discovered using hybrid approach (Management API + getschema)
// Data type corrections applied: TenantId->guid, Double->real (empirical fixes)
// All columns including underscore columns included
// Original columns: 114, Final columns: 114
// ============================================================================

.create-merge table GCPCloudSQLRaw (records:dynamic)

.alter-merge table GCPCloudSQLRaw policy retention softdelete = 1d

.alter table GCPCloudSQLRaw policy caching hot = 1h

// JSON mapping - choose appropriate option based on data structure
.create-or-alter table GCPCloudSQLRaw ingestion json mapping 'GCPCloudSQLRawMapping' '[{"column":"records","Properties":{"path":"$.records"}}]'
// Alternative for direct events: '[{"column":"records","Properties":{"path":"$"}}]'

.create-merge table GCPCloudSQL(
TimeGenerated:datetime,
TenantId:guid,
ResponseEphemeralCertKind:string,
ResponseClientCert:string,
ResponseType:string,
GCPResourceName:string,
RequestMetadataRequestAttributesRequestTime:datetime,
RequestMetadataRequestAttributesRequestReason:string,
RequestMetadataRequestAttributesAuth:string,
RequestMetadataRequestAttributesDestinationAttributes:string,
RequestMetadataCallerIP:string,
RequestId:string,
RequestProject:string,
ResponseBackupContextBackupId:string,
RequestBodySettingsUserbackuplable:string,
RequestBodySettingsTier:string,
RequestBodySettingsStorageAutoResize:bool,
RequestBodySettingsSqlServerAuditConfigUploadInterval:datetime,
RequestBodySettingsSqlServerAuditConfigRetentionInterval:datetime,
RequestBodySettingsVersion:bool,
RequestBodySettingsRetainBackupsOnDelete:bool,
RequestBodySettingsMaintenanceWindow:dynamic,
RequestBodySettingsLocationPreference:string,
RequestBodySettingsIPConfiguration:dynamic,
RequestBodySettingsInsightsConfig:dynamic,
RequestBodySettingsEnableGoogleMlIntegration:bool,
RequestBodySettingsTmeZone:string,
RequestBodySettingsEdition:string,
ResponseBackupContextKind:string,
OperationInsertTime:datetime,
ResponseOperation:string,
ResponseServerCaCert:string,
Timestamp:datetime,
Severity:string,
GCPResourceType:string,
ResourceLabelsRegion:string,
ResourceLabelsProjectId:string,
StatusMessage:string,
ResourceLabelsDatabaseId:string,
ReceiveTimestamp:datetime,
StatusCode:string,
ResponseBackupContextName:string,
ServiceName:string,
ResponseTargetProject:string,
ResponseTargetLink:string,
ResponseTargetId:string,
ResponseStatus:string,
ResponseSelfLink:string,
ResponsePromoteContextReplica:string,
ResponsePromoteContextPrimary:string,
ResponseOperationType:string,
ResponseName:string,
ResponseKind:string,
ResponseInstanceUid:string,
ResponseUser:string,
RequestBodySettingsDeletionProtectionEnabled:bool,
RequestBodySettingsDataDiskType:string,
RequestBodySettingsDataDiskSizeGb:string,
RequestBodyCommonName:string,
RequestSha1Fingerprint:string,
RequestOperation:string,
RequestStartTime:datetime,
RequestResourceId:string,
RequestMaxResults:string,
RequestInstance:string,
RequestParent:string,
RequestPageSize:string,
RequestFilter:string,
RequestName:string,
RequestBodyKind:string,
RequestFinalBackupTtlDays:string,
MetadataType:string,
AuthInfoServiceAccountKeyName:string,
AuthInfoPrincipalSubject:string,
AuthInfoPrincipalEmail:string,
PayloadType:string,
OperationProducer:string,
OperationId:string,
OperationLast:bool,
OperationFirst:bool,
LogName:string,
InsertId:string,
RequestEnableFinalBackup:bool,
RequestBodyDescription:string,
RequestBodyLocation:string,
RequestBodyCloneContextDestinationInstanceName:string,
RequestBodySettingsdataCacheConfigDataCacheEnabled:bool,
RequestBodySettingsConnectionPoolConfig:string,
RequestBodySettingsTransactionLogRetentionDays:string,
RequestBodySettingsBackupStartTime:string,
RequestBodySettingsBinaryLogEnabled:bool,
RequestBodySettingsBackupLocation:string,
RequestBodySettingsBackupPointInTimeRecoveryEnabled:string,
RequestBodyProject:string,
RequestBodySettingsBackupEnabled:bool,
RequestBodySettingsRetentionUnit:string,
RequestBodySettingsRetentinedBackup:string,
RequestBodySettingsAvailabilityType:string,
RequestBodySettingsActiveDirectoryConfig:string,
RequestBodySettingsActivationPolicy:string,
RequestBodyExportContext:dynamic,
RequestDatabase:string,
RequestBodyInstance:string,
RequestBodyRestoreInstanceSettingsRegion:string,
RequestBodyRestoreInstanceSettingsProject:string,
RequestBodyRestoreInstanceSettingsName:string,
RequestBodyRestoreInstanceSettingsInstanceUid:string,
RequestBodyRotateServerCaContext:dynamic,
RequestBodyNodeCount:string,
RequestBodyBackup:string,
RequestBodyFailoverContext:dynamic,
RequestEndTime:datetime,
SourceSystem:string,
Type:string,
_TimeReceived:datetime)

.alter table GCPCloudSQL policy caching hot = 1d

.create-or-alter function GCPCloudSQLExpand() {
GCPCloudSQLRaw
| mv-expand events = records
// Alternative for non-nested: | extend events = records
| project
TimeGenerated=todatetime(events.TimeGenerated),
TenantId=toguid(events.TenantId),
ResponseEphemeralCertKind=tostring(events.ResponseEphemeralCertKind),
ResponseClientCert=tostring(events.ResponseClientCert),
ResponseType=tostring(events.ResponseType),
GCPResourceName=tostring(events.GCPResourceName),
RequestMetadataRequestAttributesRequestTime=todatetime(events.RequestMetadataRequestAttributesRequestTime),
RequestMetadataRequestAttributesRequestReason=tostring(events.RequestMetadataRequestAttributesRequestReason),
RequestMetadataRequestAttributesAuth=tostring(events.RequestMetadataRequestAttributesAuth),
RequestMetadataRequestAttributesDestinationAttributes=tostring(events.RequestMetadataRequestAttributesDestinationAttributes),
RequestMetadataCallerIP=tostring(events.RequestMetadataCallerIP),
RequestId=tostring(events.RequestId),
RequestProject=tostring(events.RequestProject),
ResponseBackupContextBackupId=tostring(events.ResponseBackupContextBackupId),
RequestBodySettingsUserbackuplable=tostring(events.RequestBodySettingsUserbackuplable),
RequestBodySettingsTier=tostring(events.RequestBodySettingsTier),
RequestBodySettingsStorageAutoResize=tobool(events.RequestBodySettingsStorageAutoResize),
RequestBodySettingsSqlServerAuditConfigUploadInterval=todatetime(events.RequestBodySettingsSqlServerAuditConfigUploadInterval),
RequestBodySettingsSqlServerAuditConfigRetentionInterval=todatetime(events.RequestBodySettingsSqlServerAuditConfigRetentionInterval),
RequestBodySettingsVersion=tobool(events.RequestBodySettingsVersion),
RequestBodySettingsRetainBackupsOnDelete=tobool(events.RequestBodySettingsRetainBackupsOnDelete),
RequestBodySettingsMaintenanceWindow=todynamic(events.RequestBodySettingsMaintenanceWindow),
RequestBodySettingsLocationPreference=tostring(events.RequestBodySettingsLocationPreference),
RequestBodySettingsIPConfiguration=todynamic(events.RequestBodySettingsIPConfiguration),
RequestBodySettingsInsightsConfig=todynamic(events.RequestBodySettingsInsightsConfig),
RequestBodySettingsEnableGoogleMlIntegration=tobool(events.RequestBodySettingsEnableGoogleMlIntegration),
RequestBodySettingsTmeZone=tostring(events.RequestBodySettingsTmeZone),
RequestBodySettingsEdition=tostring(events.RequestBodySettingsEdition),
ResponseBackupContextKind=tostring(events.ResponseBackupContextKind),
OperationInsertTime=todatetime(events.OperationInsertTime),
ResponseOperation=tostring(events.ResponseOperation),
ResponseServerCaCert=tostring(events.ResponseServerCaCert),
Timestamp=todatetime(events.Timestamp),
Severity=tostring(events.Severity),
GCPResourceType=tostring(events.GCPResourceType),
ResourceLabelsRegion=tostring(events.ResourceLabelsRegion),
ResourceLabelsProjectId=tostring(events.ResourceLabelsProjectId),
StatusMessage=tostring(events.StatusMessage),
ResourceLabelsDatabaseId=tostring(events.ResourceLabelsDatabaseId),
ReceiveTimestamp=todatetime(events.ReceiveTimestamp),
StatusCode=tostring(events.StatusCode),
ResponseBackupContextName=tostring(events.ResponseBackupContextName),
ServiceName=tostring(events.ServiceName),
ResponseTargetProject=tostring(events.ResponseTargetProject),
ResponseTargetLink=tostring(events.ResponseTargetLink),
ResponseTargetId=tostring(events.ResponseTargetId),
ResponseStatus=tostring(events.ResponseStatus),
ResponseSelfLink=tostring(events.ResponseSelfLink),
ResponsePromoteContextReplica=tostring(events.ResponsePromoteContextReplica),
ResponsePromoteContextPrimary=tostring(events.ResponsePromoteContextPrimary),
ResponseOperationType=tostring(events.ResponseOperationType),
ResponseName=tostring(events.ResponseName),
ResponseKind=tostring(events.ResponseKind),
ResponseInstanceUid=tostring(events.ResponseInstanceUid),
ResponseUser=tostring(events.ResponseUser),
RequestBodySettingsDeletionProtectionEnabled=tobool(events.RequestBodySettingsDeletionProtectionEnabled),
RequestBodySettingsDataDiskType=tostring(events.RequestBodySettingsDataDiskType),
RequestBodySettingsDataDiskSizeGb=tostring(events.RequestBodySettingsDataDiskSizeGb),
RequestBodyCommonName=tostring(events.RequestBodyCommonName),
RequestSha1Fingerprint=tostring(events.RequestSha1Fingerprint),
RequestOperation=tostring(events.RequestOperation),
RequestStartTime=todatetime(events.RequestStartTime),
RequestResourceId=tostring(events.RequestResourceId),
RequestMaxResults=tostring(events.RequestMaxResults),
RequestInstance=tostring(events.RequestInstance),
RequestParent=tostring(events.RequestParent),
RequestPageSize=tostring(events.RequestPageSize),
RequestFilter=tostring(events.RequestFilter),
RequestName=tostring(events.RequestName),
RequestBodyKind=tostring(events.RequestBodyKind),
RequestFinalBackupTtlDays=tostring(events.RequestFinalBackupTtlDays),
MetadataType=tostring(events.MetadataType),
AuthInfoServiceAccountKeyName=tostring(events.AuthInfoServiceAccountKeyName),
AuthInfoPrincipalSubject=tostring(events.AuthInfoPrincipalSubject),
AuthInfoPrincipalEmail=tostring(events.AuthInfoPrincipalEmail),
PayloadType=tostring(events.PayloadType),
OperationProducer=tostring(events.OperationProducer),
OperationId=tostring(events.OperationId),
OperationLast=tobool(events.OperationLast),
OperationFirst=tobool(events.OperationFirst),
LogName=tostring(events.LogName),
InsertId=tostring(events.InsertId),
RequestEnableFinalBackup=tobool(events.RequestEnableFinalBackup),
RequestBodyDescription=tostring(events.RequestBodyDescription),
RequestBodyLocation=tostring(events.RequestBodyLocation),
RequestBodyCloneContextDestinationInstanceName=tostring(events.RequestBodyCloneContextDestinationInstanceName),
RequestBodySettingsdataCacheConfigDataCacheEnabled=tobool(events.RequestBodySettingsdataCacheConfigDataCacheEnabled),
RequestBodySettingsConnectionPoolConfig=tostring(events.RequestBodySettingsConnectionPoolConfig),
RequestBodySettingsTransactionLogRetentionDays=tostring(events.RequestBodySettingsTransactionLogRetentionDays),
RequestBodySettingsBackupStartTime=tostring(events.RequestBodySettingsBackupStartTime),
RequestBodySettingsBinaryLogEnabled=tobool(events.RequestBodySettingsBinaryLogEnabled),
RequestBodySettingsBackupLocation=tostring(events.RequestBodySettingsBackupLocation),
RequestBodySettingsBackupPointInTimeRecoveryEnabled=tostring(events.RequestBodySettingsBackupPointInTimeRecoveryEnabled),
RequestBodyProject=tostring(events.RequestBodyProject),
RequestBodySettingsBackupEnabled=tobool(events.RequestBodySettingsBackupEnabled),
RequestBodySettingsRetentionUnit=tostring(events.RequestBodySettingsRetentionUnit),
RequestBodySettingsRetentinedBackup=tostring(events.RequestBodySettingsRetentinedBackup),
RequestBodySettingsAvailabilityType=tostring(events.RequestBodySettingsAvailabilityType),
RequestBodySettingsActiveDirectoryConfig=tostring(events.RequestBodySettingsActiveDirectoryConfig),
RequestBodySettingsActivationPolicy=tostring(events.RequestBodySettingsActivationPolicy),
RequestBodyExportContext=todynamic(events.RequestBodyExportContext),
RequestDatabase=tostring(events.RequestDatabase),
RequestBodyInstance=tostring(events.RequestBodyInstance),
RequestBodyRestoreInstanceSettingsRegion=tostring(events.RequestBodyRestoreInstanceSettingsRegion),
RequestBodyRestoreInstanceSettingsProject=tostring(events.RequestBodyRestoreInstanceSettingsProject),
RequestBodyRestoreInstanceSettingsName=tostring(events.RequestBodyRestoreInstanceSettingsName),
RequestBodyRestoreInstanceSettingsInstanceUid=tostring(events.RequestBodyRestoreInstanceSettingsInstanceUid),
RequestBodyRotateServerCaContext=todynamic(events.RequestBodyRotateServerCaContext),
RequestBodyNodeCount=tostring(events.RequestBodyNodeCount),
RequestBodyBackup=tostring(events.RequestBodyBackup),
RequestBodyFailoverContext=todynamic(events.RequestBodyFailoverContext),
RequestEndTime=todatetime(events.RequestEndTime),
SourceSystem=tostring(events.SourceSystem),
Type=tostring(events.Type),
_TimeReceived=todatetime(now())
}

.alter table GCPCloudSQL policy update @'[{"Source": "GCPCloudSQLRaw", "Query": "GCPCloudSQLExpand()", "IsEnabled": "True", "IsTransactional": true}]'
